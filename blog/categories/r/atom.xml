<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[r | Full Join]]></title>
  <link href="http://fulljoin.com.br/blog/categories/r/atom.xml" rel="self"/>
  <link href="http://fulljoin.com.br/"/>
  <updated>2017-03-13T21:46:46-03:00</updated>
  <id>http://fulljoin.com.br/</id>
  <author>
    <name><![CDATA[Full Join]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Introdução ao D3plusR]]></title>
    <link href="http://fulljoin.com.br/blog/2017/03/12/introducao-d3plusr/"/>
    <updated>2017-03-12T15:01:00-03:00</updated>
    <id>http://fulljoin.com.br/blog/2017/03/12/introducao-d3plusr</id>
    <content type="html"><![CDATA[<p>Visualização de dados é uma das principais tarefas de um analista de dados. A partir de visualizações, é possível explorar os dados e comunicar resultados de maneira mais efetiva. No R, além de visualizações estáticas, principalmente desenvolvidas com ggplot2 R, existem um conjunto de pacotes que são desenvolvidos utilizando o <em>framework</em> fornecido pelo pacote <code>htmlwidgets</code>. A ideia é trazer o mundo de bibliotecas de visualizações de dados em javascript para o R.
<!-- More --></p>

<h2 id="htmlwidgets">Htmlwidgets</h2>

<p>Como já mencionado, o <code>htmlwidgets</code> permite a criação de <em>widgets</em> que trazem a interatividade das visualizações em javascript para o R. A partir de pacotes criados com esse <em>framework</em> é possível visualizar os widgets no próprio RStudio, em documentos criados por RMarkdown ou em aplicações criadas em <a href="https://shiny.rstudio.com/">shiny</a>.</p>

<p><a href="http://gallery.htmlwidgets.org/">Aqui</a> está uma galeria dos <em>widgets</em> disponíveis. Por sinal, já existe um <a href="https://github.com/jpmarindiaz/d3plus">pacote em desenvolvimento</a> para trazer o d3plus para dentro do R. A nossa opção em desenvolver um outro pacote deve-se à nossa expectativa de que <strong>talvez</strong> a estrutura que resolvemos adotar é mais flexível e conseguirá incorporar mais rapidamente todas as possibilidades do <a href="https://d3plus.org/">D3plus</a>.</p>

<h2 id="sobre-o-d3-e-o-d3plus">Sobre o D3 e o D3plus</h2>

<p>D3plus é uma biblioteca criada em cima de outra chamada D3. Então, vamos começar falando sobre o D3. A biblioteca <a href="https://d3js.org/">D3 (Data-Driven Documents)</a> é focada na manipulação de documentos que são baseados em dados, geralmente páginas webs em que se deve apresentar dados de uma maneira eficiente.</p>

<p>Por ser bastante flexível, o aprendizado pode não ser fácil, sendo necessário gastar um certo tempo para aprender a criar as suas próprias visualizações. Nesse sentido, o D3plus busca facilitar a criação de visualizações ao disponibilizar um conjunto de opões de gráficos que já estão pré-construídos.</p>

<p>Assim, basicamente o que se faz é trocar a flexibilidade por facilidade. Todavia, os criadores do D3plus fornecem um <a href="https://d3plus.org/blog/advanced/2014/09/28/new-visualization-guide/">tutorial</a> de como criar outras visualizações, o que devolve a flexibilidade novamente para os usuários.</p>

<p><a href="https://d3plus.org/examples/">Neste link</a> estão vários exemplos de visualizações que podem ser construídas com o D3plus, inclusive com o código em javascript. Além do próprio site do D3plus, sugiro esses sites:</p>

<ul>
  <li><a href="https://datausa.io/">Data USA</a></li>
  <li><a href="http://atlas.media.mit.edu/en/">The Observatory of Economic Complexity</a></li>
  <li><a href="http://dataviva.info/">DataViva</a></li>
  <li><a href="http://www.mdic.gov.br/comercio-exterior/estatisticas-de-comercio-exterior/comex-vis">Comex Vis</a></li>
</ul>

<p>Bem, agora vamos ao pacote para usar o D3plus no R.</p>

<h2 id="instalando-o-pacote">Instalando o pacote</h2>

<p>Como o pacote está em desenvolvimento, ele apenas está <a href="https://github.com/paulofelipe/D3plusR">disponível no github</a>. O código abaixo instala o pacote caso ele ainda não esteja instalado.</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">require</span><span class="p">(</span><span class="n">D3plusR</span><span class="p">)){</span>
  <span class="n">devtools</span><span class="o">::</span><span class="n">install_github</span><span class="p">(</span><span class="err">‘</span><span class="n">paulofelipe</span><span class="o">/</span><span class="n">D3plusR</span><span class="err">’</span><span class="p">)</span>
<span class="p">}</span></code></pre></div></p>

<h2 id="a-estrutura-lgica-do-pacote">A estrutura lógica do pacote</h2>

<p>A função <code>d3plus</code> é a função principal do pacote. Ela é responsável por inicializar a visualização e nela são passados alguns argumentos que são comuns à maioria das visualizações. Depois de inicializada, outras funções são encadeadas. Por exemplo:</p>

<ul>
  <li><code>d3plusSize</code>: define a variável/coluna responsável por definir o tamanho do retângulo de um <em>treemap</em> por exemplo, além de outros parâmetros referentes a essa característica do gráfico. <code>.size()</code> no pacote original;</li>
  <li><code>d3plusLabel</code>: define a variável/coluna responsável pelos rótulos e outras opções, como o tamanho da fonte. <code>.label()</code> no pacote original.</li>
</ul>

<p>Para quem não conhece o D3plus pode ser um confuso em um primeiro momento, mas talvez com o exemplo abaixo fique mais claro.</p>

<p>De toda forma, as funções do pacote estão intimamente ligadas aos métodos disponíveis na biblioteca original. A lista de métodos e suas opções estão listadas <a href="https://github.com/alexandersimoes/d3plus/wiki/Visualizations">nesta página</a>. Esta página é fundamental, pois é lá que estarão listadas todas opções disponíveis. O importante é você saber como essas opções serão passadas dentro do R.</p>

<p>Algumas opções recebem um único valor, enquanto outras opções possuem opções internas, ou seja, recebem múltiplos valores. Quando uma opção tiver opções internas, os valores devem ser passados por meio de uma lista do R.</p>

<p>Por exemplo, o código original em javascript:</p>

<p><code>js
var visualization = d3plus.viz()
    .container("#viz")
    .data(data)
    .type("bar")
    .id("name")
    .x("year")
    .y("value")
    .draw()
</code></p>

<p>Agora, no R:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">d3plus</span><span class="p">(</span><span class="n">data</span> <span class="o">=</span> <span class="n">data</span><span class="p">,</span>
       <span class="n">type</span> <span class="o">=</span> <span class="err">“</span><span class="n">bar</span><span class="err">”</span><span class="p">,</span>
       <span class="n">id</span> <span class="o">=</span> <span class="err">“</span><span class="n">name</span><span class="err">”</span><span class="p">,</span>
       <span class="n">elementId</span> <span class="o">=</span> <span class="err">“</span><span class="n">viz</span><span class="err">”</span><span class="p">)</span> <span class="o">%&amp;</span><span class="n">gt</span><span class="p">;</span><span class="o">%</span> 
  <span class="n">d3plusX</span><span class="p">(</span><span class="n">value</span> <span class="o">=</span> <span class="err">“</span><span class="n">year</span><span class="err">”</span><span class="p">)</span> <span class="o">%&amp;</span><span class="n">gt</span><span class="p">;</span><span class="o">%</span> 
  <span class="n">d3plusY</span><span class="p">(</span><span class="n">value</span> <span class="o">=</span> <span class="err">“</span><span class="n">value</span><span class="err">”</span><span class="p">)</span></code></pre></div></p>

<p>Veja que para <code>data</code>, <code>type</code>, <code>id</code> e <code>elementid</code> não foram criadas funções separadas, pois todas as visualizações conterão esses métodos. Se o <code>elementId</code> não é informado, um id para o widget será automaticamente gerado.</p>

<p>Agora, vamos estender o exemplo para incluir um título e alterar algumas opções de legenda. A opção de fonte (chamada de <em>key</em> no pacote original) é passada em <code>font</code> que pode receber outras opções (<em>keys</em>), como <code>size</code>, <code>align</code>, <code>weight</code> etc.  O código seria o seguinte:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">d3plus</span><span class="p">(</span><span class="n">data</span> <span class="o">=</span> <span class="n">data</span><span class="p">,</span>
       <span class="n">type</span> <span class="o">=</span> <span class="err">“</span><span class="n">bar</span><span class="err">”</span><span class="p">,</span>
       <span class="n">id</span> <span class="o">=</span> <span class="err">“</span><span class="n">name</span><span class="err">”</span><span class="p">)</span> <span class="o">%&amp;</span><span class="n">gt</span><span class="p">;</span><span class="o">%</span> 
  <span class="n">d3plusX</span><span class="p">(</span><span class="n">value</span> <span class="o">=</span> <span class="err">“</span><span class="n">year</span><span class="err">”</span><span class="p">)</span> <span class="o">%&amp;</span><span class="n">gt</span><span class="p">;</span><span class="o">%</span> 
  <span class="n">d3plusY</span><span class="p">(</span><span class="n">value</span> <span class="o">=</span> <span class="err">“</span><span class="n">value</span><span class="err">”</span><span class="p">)</span> <span class="o">%&amp;</span><span class="n">gt</span><span class="p">;</span><span class="o">%</span> 
  <span class="n">d3plusTitle</span><span class="p">(</span><span class="n">value</span> <span class="o">=</span> <span class="err">“</span><span class="n">T</span><span class="err">í</span><span class="n">tulo</span><span class="err">”</span><span class="p">,</span> <span class="n">font</span> <span class="o">=</span> <span class="n">list</span><span class="p">(</span><span class="n">size</span> <span class="o">=</span> <span class="m">12</span><span class="p">,</span> <span class="n">align</span> <span class="o">=</span> <span class="err">“</span><span class="n">left</span><span class="err">”</span><span class="p">))</span> <span class="o">%&amp;</span><span class="n">gt</span><span class="p">;</span><span class="o">%</span> 
  <span class="n">d3plusTooltip</span><span class="p">(</span><span class="n">font</span> <span class="o">=</span> <span class="n">list</span><span class="p">(</span><span class="n">align</span> <span class="o">=</span> <span class="err">“</span><span class="n">left</span><span class="err">”</span><span class="p">))</span></code></pre></div></p>

<p>O importante é ter isso em mente, que opções dentro de opções devem ser passadas em listas.</p>

<p>Atualmente, ainda não estão disponíveis funções para todos os métodos do D3plus, mas a ideia é que todos estejam disponíveis em breve. Reforço que <a href="https://github.com/alexandersimoes/d3plus/wiki/Visualizations">esta página</a> é fundamental para encontrar todas as opções disponíveis.</p>

<h2 id="primeiro-exemplo">Primeiro Exemplo</h2>

<p>Para o primeiro exemplo, vamos utilizar um conjunto de dados que está disponível pelo próprio pacote. Para carregá-lo, basta usar o código abaixo:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">data</span><span class="p">(</span><span class="err">“</span><span class="n">trade_bra_chn</span><span class="err">”</span><span class="p">)</span>
<span class="n">head</span><span class="p">(</span><span class="n">trade_bra_chn</span><span class="p">)</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##   Period Trade.Flow Reporter.Code Reporter Partner.Code Partner
## 1   2005     Export            76   Brazil          156   China
## 2   2005     Import            76   Brazil          156   China
## 3   2006     Export            76   Brazil          156   China
## 4   2006     Import            76   Brazil          156   China
## 5   2007     Export            76   Brazil          156   China
## 6   2007     Import            76   Brazil          156   China
##    TradeValue
## 1  6834996980
## 2  5354519158
## 3  8402368827
## 4  7989343057
## 5 10748813792
## 6 12617754515</code></pre></div>
Os dados referem-se às exportações/importações brasileiras para/da China para os anos de 2005 a 2015. O nosso objetivo é criar um gráfico de barras. O que é estritamente necessário é informar os dados (<code>data</code>), o identificador (<code>id</code>) e os valores para os eixos X e Y usando as funções <code>d3plusX()</code> e <code>d3plusY()</code>, respectivamente. Outras funções estão sendo utilizadas para adicionar outras funcionalidades ao gráfico.</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">library</span><span class="p">(</span><span class="n">dplyr</span><span class="p">)</span>
<span class="n">d3plus</span><span class="p">(</span><span class="n">data</span> <span class="o">=</span> <span class="n">trade_bra_chn</span><span class="p">,</span> <span class="c1"># dados</span>
       <span class="n">id</span> <span class="o">=</span> <span class="err">“</span><span class="n">Trade.Flow</span><span class="err">”</span><span class="p">,</span> <span class="c1"># identificador das barras</span>
       <span class="n">type</span> <span class="o">=</span> <span class="err">“</span><span class="n">bar</span><span class="err">”</span><span class="p">,</span> <span class="c1"># gráfico de barras</span>
       <span class="n">height</span> <span class="o">=</span> <span class="m">400</span><span class="p">,</span> <span class="c1"># altura da visualização em px</span>
       <span class="n">locale</span> <span class="o">=</span> <span class="err">“</span><span class="n">pt_BR</span><span class="err">”</span><span class="p">,</span> <span class="c1"># definição de localização</span>
       <span class="n">width</span> <span class="o">=</span> <span class="err">“</span><span class="m">100</span><span class="o">%</span><span class="err">”</span><span class="p">)</span> <span class="o">%&amp;</span><span class="n">gt</span><span class="p">;</span><span class="o">%</span> <span class="c1"># largura de 100%. Não é sempre necessário </span>
  <span class="n">d3plusX</span><span class="p">(</span><span class="n">value</span> <span class="o">=</span> <span class="err">“</span><span class="n">Period</span><span class="err">”</span><span class="p">)</span> <span class="o">%&amp;</span><span class="n">gt</span><span class="p">;</span><span class="o">%</span> 
  <span class="n">d3plusY</span><span class="p">(</span><span class="n">value</span> <span class="o">=</span> <span class="err">“</span><span class="n">TradeValue</span><span class="err">”</span><span class="p">)</span> <span class="o">%&amp;</span><span class="n">gt</span><span class="p">;</span><span class="o">%</span> 
  <span class="n">d3plusColor</span><span class="p">(</span><span class="n">value</span> <span class="o">=</span> <span class="err">“</span><span class="n">Trade.Flow</span><span class="err">”</span><span class="p">)</span> <span class="o">%&amp;</span><span class="n">gt</span><span class="p">;</span><span class="o">%</span> 
  <span class="n">d3plusLegend</span><span class="p">(</span><span class="n">value</span> <span class="o">=</span> <span class="n">TRUE</span><span class="p">,</span> <span class="n">size</span> <span class="o">=</span> <span class="m">30</span><span class="p">,</span> <span class="n">data</span> <span class="o">=</span> <span class="n">FALSE</span><span class="p">)</span> <span class="o">%&amp;</span><span class="n">gt</span><span class="p">;</span><span class="o">%</span> 
  <span class="n">d3plusTooltip</span><span class="p">(</span><span class="n">value</span> <span class="o">=</span> <span class="n">c</span><span class="p">(</span><span class="err">“</span><span class="n">Period</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">TradeValue</span><span class="err">”</span><span class="p">))</span> <span class="o">%&amp;</span><span class="n">gt</span><span class="p">;</span><span class="o">%</span> 
  <span class="n">d3plusTitle</span><span class="p">(</span><span class="n">value</span> <span class="o">=</span> <span class="err">“</span><span class="n">Exporta</span><span class="err">çõ</span><span class="n">es</span><span class="o">/</span><span class="n">Importa</span><span class="err">çõ</span><span class="n">es</span> <span class="n">Brasileiras</span> <span class="n">para</span><span class="o">/</span><span class="n">da</span> <span class="n">China</span><span class="err">”</span><span class="p">)</span></code></pre></div></p>

<!--html_preserve-->
<div id="htmlwidget-3062063b7d951719aff1" style="width:100%;height:400px;" class="d3plus html-widget"></div>
<script type="application/json" data-for="htmlwidget-3062063b7d951719aff1">{"x":{"data":{"Period":["2005","2005","2006","2006","2007","2007","2008","2008","2009","2009","2010","2010","2011","2011","2012","2012","2013","2013","2014","2014","2015","2015"],"Trade.Flow":["Export","Import","Export","Import","Export","Import","Export","Import","Export","Import","Export","Import","Export","Import","Export","Import","Export","Import","Export","Import","Export","Import"],"Reporter.Code":[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76],"Reporter":["Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil"],"Partner.Code":[156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156],"Partner":["China","China","China","China","China","China","China","China","China","China","China","China","China","China","China","China","China","China","China","China","China","China"],"TradeValue":[6834996980,5354519158,8402368827,7989343057,10748813792,12617754515,16403038989,20040022368,20190831368,15911144513,30752355631,25535684189,44314595336,32788424507,41227540253,34248497709,46026153046,37302150042,40616107929,37340607027,35607523612,30719405022]},"settings":{"type":"bar","id":["Trade.Flow"],"title":["function (main = NULL, sub = NULL, xlab = NULL, ylab = NULL, ","    line = NA, outer = FALSE, ...) ","{","    main <- as.graphicsAnnot(main)","    sub <- as.graphicsAnnot(sub)","    xlab <- as.graphicsAnnot(xlab)","    ylab <- as.graphicsAnnot(ylab)","    .External.graphics(C_title, main, sub, xlab, ylab, line, ","        outer, ...)","    invisible()","}"],"currency":"US$","number_text":["K","M","M","B","B"],"currency_var":null,"percent_var":null,"locale":"pt_BR","dictionary":{}},"d3plusAxisX":{"value":"Period"},"d3plusAxisY":{"value":"TradeValue"},"d3plusColor":{"value":"Trade.Flow"},"d3plusLegend":{"value":true,"size":30,"data":false},"d3plusTooltip":{"value":["Period","TradeValue"]},"d3plusTitle":{"value":"Exportações/Importações Brasileiras para/da China"}},"evals":[],"jsHooks":[]}</script>
<!--/html_preserve-->

<p>Perceba que o D3plus automaticamente converte <code>30.000.000.000</code> para <code>30 B</code>. Para alterar esse comportamento, podemos usar o argumento <code>number_text</code> na função <code>d3plus()</code>. O usuário deve informar o texto para mil, milhão, milhões, bilhão e bilhões. Além disso, vamos informar o símbolo da moeda e qual variável é monetária:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">d3plus</span><span class="p">(</span><span class="n">data</span> <span class="o">=</span> <span class="n">trade_bra_chn</span><span class="p">,</span> <span class="c1"># dados</span>
       <span class="n">id</span> <span class="o">=</span> <span class="err">“</span><span class="n">Trade.Flow</span><span class="err">”</span><span class="p">,</span> <span class="c1"># identificador das barras</span>
       <span class="n">type</span> <span class="o">=</span> <span class="err">“</span><span class="n">bar</span><span class="err">”</span><span class="p">,</span> <span class="c1"># gráfico de barras</span>
       <span class="n">height</span> <span class="o">=</span> <span class="m">400</span><span class="p">,</span> <span class="c1"># altura da visualização em px</span>
       <span class="n">locale</span> <span class="o">=</span> <span class="err">“</span><span class="n">pt_BR</span><span class="err">”</span><span class="p">,</span> <span class="c1"># definição de localização</span>
       <span class="n">width</span> <span class="o">=</span> <span class="err">“</span><span class="m">100</span><span class="o">%</span><span class="err">”</span><span class="p">,</span> <span class="c1"># largura de 100%. Não é sempre necessário </span>
       <span class="n">currency</span> <span class="o">=</span> <span class="err">“</span><span class="n">US</span><span class="o">$</span><span class="err">”</span><span class="p">,</span>
       <span class="n">currency_var</span> <span class="o">=</span> <span class="err">“</span><span class="n">TradeValue</span><span class="err">”</span><span class="p">,</span>
       <span class="n">number_text</span> <span class="o">=</span> <span class="n">c</span><span class="p">(</span><span class="err">“</span><span class="n">Mil</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">Milh</span><span class="err">ã</span><span class="n">o</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">Milh</span><span class="err">õ</span><span class="n">es</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">Bilh</span><span class="err">ã</span><span class="n">o</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">Bilh</span><span class="err">õ</span><span class="n">es</span><span class="err">”</span><span class="p">))</span> <span class="o">%&amp;</span><span class="n">gt</span><span class="p">;</span><span class="o">%</span> 
  <span class="n">d3plusX</span><span class="p">(</span><span class="n">value</span> <span class="o">=</span> <span class="err">“</span><span class="n">Period</span><span class="err">”</span><span class="p">)</span> <span class="o">%&amp;</span><span class="n">gt</span><span class="p">;</span><span class="o">%</span> 
  <span class="n">d3plusY</span><span class="p">(</span><span class="n">value</span> <span class="o">=</span> <span class="err">“</span><span class="n">TradeValue</span><span class="err">”</span><span class="p">)</span> <span class="o">%&amp;</span><span class="n">gt</span><span class="p">;</span><span class="o">%</span> 
  <span class="n">d3plusColor</span><span class="p">(</span><span class="n">value</span> <span class="o">=</span> <span class="err">“</span><span class="n">Trade.Flow</span><span class="err">”</span><span class="p">)</span> <span class="o">%&amp;</span><span class="n">gt</span><span class="p">;</span><span class="o">%</span> 
  <span class="n">d3plusLegend</span><span class="p">(</span><span class="n">value</span> <span class="o">=</span> <span class="n">TRUE</span><span class="p">,</span> <span class="n">size</span> <span class="o">=</span> <span class="m">30</span><span class="p">,</span> <span class="n">data</span> <span class="o">=</span> <span class="n">FALSE</span><span class="p">)</span> <span class="o">%&amp;</span><span class="n">gt</span><span class="p">;</span><span class="o">%</span> 
  <span class="n">d3plusTooltip</span><span class="p">(</span><span class="n">value</span> <span class="o">=</span> <span class="n">c</span><span class="p">(</span><span class="err">“</span><span class="n">Period</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">TradeValue</span><span class="err">”</span><span class="p">))</span> <span class="o">%&amp;</span><span class="n">gt</span><span class="p">;</span><span class="o">%</span> 
  <span class="n">d3plusTitle</span><span class="p">(</span><span class="n">value</span> <span class="o">=</span> <span class="err">“</span><span class="n">Exporta</span><span class="err">çõ</span><span class="n">es</span><span class="o">/</span><span class="n">Importa</span><span class="err">çõ</span><span class="n">es</span> <span class="n">Brasileiras</span> <span class="n">para</span><span class="o">/</span><span class="n">da</span> <span class="n">China</span><span class="err">”</span><span class="p">)</span></code></pre></div></p>

<!--html_preserve-->
<div id="htmlwidget-f8859a2c93d9d0a05066" style="width:100%;height:400px;" class="d3plus html-widget"></div>
<script type="application/json" data-for="htmlwidget-f8859a2c93d9d0a05066">{"x":{"data":{"Period":["2005","2005","2006","2006","2007","2007","2008","2008","2009","2009","2010","2010","2011","2011","2012","2012","2013","2013","2014","2014","2015","2015"],"Trade.Flow":["Export","Import","Export","Import","Export","Import","Export","Import","Export","Import","Export","Import","Export","Import","Export","Import","Export","Import","Export","Import","Export","Import"],"Reporter.Code":[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76],"Reporter":["Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil"],"Partner.Code":[156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156],"Partner":["China","China","China","China","China","China","China","China","China","China","China","China","China","China","China","China","China","China","China","China","China","China"],"TradeValue":[6834996980,5354519158,8402368827,7989343057,10748813792,12617754515,16403038989,20040022368,20190831368,15911144513,30752355631,25535684189,44314595336,32788424507,41227540253,34248497709,46026153046,37302150042,40616107929,37340607027,35607523612,30719405022]},"settings":{"type":"bar","id":["Trade.Flow"],"title":["function (main = NULL, sub = NULL, xlab = NULL, ylab = NULL, ","    line = NA, outer = FALSE, ...) ","{","    main <- as.graphicsAnnot(main)","    sub <- as.graphicsAnnot(sub)","    xlab <- as.graphicsAnnot(xlab)","    ylab <- as.graphicsAnnot(ylab)","    .External.graphics(C_title, main, sub, xlab, ylab, line, ","        outer, ...)","    invisible()","}"],"currency":"US$","number_text":["Mil","Milhão","Milhões","Bilhão","Bilhões"],"currency_var":"TradeValue","percent_var":null,"locale":"pt_BR","dictionary":{}},"d3plusAxisX":{"value":"Period"},"d3plusAxisY":{"value":"TradeValue"},"d3plusColor":{"value":"Trade.Flow"},"d3plusLegend":{"value":true,"size":30,"data":false},"d3plusTooltip":{"value":["Period","TradeValue"]},"d3plusTitle":{"value":"Exportações/Importações Brasileiras para/da China"}},"evals":[],"jsHooks":[]}</script>
<!--/html_preserve-->

<h2 id="segundo-exemplo">Segundo Exemplo</h2>

<p>No segundo exemplo, vamos criar um <a href="https://pt.wikipedia.org/wiki/Treemapping"><em>Tree Map</em></a> com os destinos das exportações brasileiras por continente e país (hierarquia) no ano de 2015. A profundidade (<code>d3plusDepth()</code>) inicial escolhida é continente, que é definida pelo valor <code>0</code>. A cor está definida pela região. Além disso, foi alterado o ordenamento da legenda para apresentar primeiro os continentes de “maior tamanho”.</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">data</span><span class="p">(</span><span class="err">“</span><span class="n">bra_exp_2015</span><span class="err">”</span><span class="p">)</span> <span class="c1"># dados&lt;/p&gt;</span>

<span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">d3plus</span><span class="p">(</span><span class="n">data</span> <span class="o">=</span> <span class="n">bra_exp_2015</span><span class="p">,</span>
       <span class="n">type</span> <span class="o">=</span> <span class="err">“</span><span class="n">tree_map</span><span class="err">”</span><span class="p">,</span>
       <span class="n">id</span> <span class="o">=</span> <span class="n">c</span><span class="p">(</span><span class="err">“</span><span class="n">region</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">Partner</span><span class="err">”</span><span class="p">),</span>
       <span class="n">width</span> <span class="o">=</span> <span class="err">“</span><span class="m">100</span><span class="o">%</span><span class="err">”</span><span class="p">,</span>
       <span class="n">height</span> <span class="o">=</span> <span class="m">400</span><span class="p">)</span> <span class="o">%&amp;</span><span class="n">gt</span><span class="p">;</span><span class="o">%</span> 
  <span class="n">d3plusSize</span><span class="p">(</span><span class="n">value</span> <span class="o">=</span> <span class="err">“</span><span class="n">Trade.Value..US..</span><span class="err">”</span><span class="p">)</span> <span class="o">%&amp;</span><span class="n">gt</span><span class="p">;</span><span class="o">%</span> 
  <span class="n">d3plusLegend</span><span class="p">(</span><span class="n">value</span> <span class="o">=</span> <span class="n">TRUE</span><span class="p">,</span> <span class="n">order</span> <span class="o">=</span> <span class="n">list</span><span class="p">(</span><span class="n">sort</span> <span class="o">=</span> <span class="err">“</span><span class="n">desc</span><span class="err">”</span><span class="p">,</span> <span class="n">value</span> <span class="o">=</span> <span class="err">“</span><span class="n">size</span><span class="err">”</span><span class="p">))</span> <span class="o">%&amp;</span><span class="n">gt</span><span class="p">;</span><span class="o">%</span> 
  <span class="n">d3plusColor</span><span class="p">(</span><span class="err">“</span><span class="n">region</span><span class="err">”</span><span class="p">)</span> <span class="o">%&amp;</span><span class="n">gt</span><span class="p">;</span><span class="o">%</span> 
  <span class="n">d3plusDepth</span><span class="p">(</span><span class="m">0</span><span class="p">)</span> <span class="o">%&amp;</span><span class="n">gt</span><span class="p">;</span><span class="o">%</span> 
  <span class="n">d3plusLabels</span><span class="p">(</span><span class="n">valign</span> <span class="o">=</span> <span class="err">“</span><span class="n">top</span><span class="err">”</span><span class="p">)</span></code></pre></div></p>

<!--html_preserve-->
<div id="htmlwidget-ed8ae57f630f397e76cf" style="width:100%;height:400px;" class="d3plus html-widget"></div>
<script type="application/json" data-for="htmlwidget-ed8ae57f630f397e76cf">{"x":{"data":{"Classification":["H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4","H4"],"Yearerioderiod.Descggregate.Level":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"Is.Leaf.Code":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"Trade.Flow.Code":[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],"Trade.Flow":["Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export","Export"],"Reporter.Code":[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76],"Reporter":["Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil","Brazil"],"Reporterartner.Code":[4,8,12,16,20,24,28,31,32,36,40,44,48,50,51,52,56,60,64,68,70,72,84,90,92,96,100,104,108,112,116,120,124,132,136,140,144,148,152,156,170,174,178,180,184,188,191,192,196,203,204,208,212,214,218,222,226,231,232,233,234,238,242,246,251,258,262,266,268,270,275,276,288,292,296,300,304,308,316,320,324,328,332,340,344,348,352,360,364,368,372,376,381,384,388,392,398,400,404,408,410,414,417,418,422,426,428,430,434,440,442,446,450,454,458,462,466,470,478,480,484,496,498,499,500,504,508,512,516,524,528,531,533,534,540,548,554,558,562,566,570,579,580,583,584,586,591,598,600,604,608,612,616,620,624,626,634,642,643,646,652,654,659,660,662,670,674,678,682,686,688,690,694,699,702,703,704,705,706,710,716,724,728,729,740,748,752,757,760,762,764,768,776,780,784,788,792,795,796,800,804,807,818,826,834,842,854,858,860,862,882,887,894],"Partner":["Afghanistan","Albania","Algeria","American Samoa","Andorra","Angola","Antigua and Barbuda","Azerbaijan","Argentina","Australia","Austria","Bahamas","Bahrain","Bangladesh","Armenia","Barbados","Belgium","Bermuda","Bhutan","Bolivia (Plurinational State of)","Bosnia Herzegovina","Botswana","Belize","Solomon Isds","Br. Virgin Isds","Brunei Darussalam","Bulgaria","Myanmar","Burundi","Belarus","Cambodia","Cameroon","Canada","Cabo Verde","Cayman Isds","Central African Rep.","Sri Lanka","Chad","Chile","China","Colombia","Comoros","Congo","Dem. Rep. of the Congo","Cook Isds","Costa Rica","Croatia","Cuba","Cyprus","Czechia","Benin","Denmark","Dominica","Dominican Rep.","Ecuador","El Salvador","Equatorial Guinea","Ethiopia","Eritrea","Estonia","Faeroe Isds","Falkland Isds (Malvinas)","Fiji","Finland","France","French Polynesia","Djibouti","Gabon","Georgia","Gambia","State of Palestine","Germany","Ghana","Gibraltar","Kiribati","Greece","Greenland","Grenada","Guam","Guatemala","Guinea","Guyana","Haiti","Honduras","China, Hong Kong SAR","Hungary","Iceland","Indonesia","Iran","Iraq","Ireland","Israel","Italy","Côte d'Ivoire","Jamaica","Japan","Kazakhstan","Jordan","Kenya","Dem. People's Rep. of Korea","Rep. of Korea","Kuwait","Kyrgyzstan","Lao People's Dem. Rep.","Lebanon","Lesotho","Latvia","Liberia","Libya","Lithuania","Luxembourg","China, Macao SAR","Madagascar","Malawi","Malaysia","Maldives","Mali","Malta","Mauritania","Mauritius","Mexico","Mongolia","Rep. of Moldova","Montenegro","Montserrat","Morocco","Mozambique","Oman","Namibia","Nepal","Netherlands","Curaçao","Aruba","Saint Maarten","New Caledonia","Vanuatu","New Zealand","Nicaragua","Niger","Nigeria","Niue","Norway","N. Mariana Isds","FS Micronesia","Marshall Isds","Pakistan","Panama","Papua New Guinea","Paraguay","Peru","Philippines","Pitcairn","Poland","Portugal","Guinea-Bissau","Timor-Leste","Qatar","Romania","Russian Federation","Rwanda","Saint Barthélemy","Saint Helena","Saint Kitts and Nevis","Anguilla","Saint Lucia","Saint Vincent and the Grenadines","San Marino","Sao Tome and Principe","Saudi Arabia","Senegal","Serbia","Seychelles","Sierra Leone","India","Singapore","Slovakia","Viet Nam","Slovenia","Somalia","South Africa","Zimbabwe","Spain","South Sudan","Sudan","Suriname","Swaziland","Sweden","Switzerland","Syria","Tajikistan","Thailand","Togo","Tonga","Trinidad and Tobago","United Arab Emirates","Tunisia","Turkey","Turkmenistan","Turks and Caicos Isds","Uganda","Ukraine","TFYR of Macedonia","Egypt","United Kingdom","United Rep. of Tanzania","USA","Burkina Faso","Uruguay","Uzbekistan","Venezuela","Samoa","Yemen","Zambia"],"Partner.ISO":["AFG","ALB","DZA","ASM","AND","AGO","ATG","AZE","ARG","AUS","AUT","BHS","BHR","BGD","ARM","BRB","BEL","BMU","BTN","BOL","BIH","BWA","BLZ","SLB","VGB","BRN","BGR","MMR","BDI","BLR","KHM","CMR","CAN","CPV","CYM","CAF","LKA","TCD","CHL","CHN","COL","COM","COG","COD","COK","CRI","HRV","CUB","CYP","CZE","BEN","DNK","DMA","DOM","ECU","SLV","GNQ","ETH","ERI","EST","FRO","FLK","FJI","FIN","FRA","PYF","DJI","GAB","GEO","GMB","PSE","DEU","GHA","GIB","KIR","GRC","GRL","GRD","GUM","GTM","GIN","GUY","HTI","HND","HKG","HUN","ISL","IDN","IRN","IRQ","IRL","ISR","ITA","CIV","JAM","JPN","KAZ","JOR","KEN","PRK","KOR","KWT","KGZ","LAO","LBN","LSO","LVA","LBR","LBY","LTU","LUX","MAC","MDG","MWI","MYS","MDV","MLI","MLT","MRT","MUS","MEX","MNG","MDA","MNE","MSR","MAR","MOZ","OMN","NAM","NPL","NLD","CUW","ABW","SXM","NCL","VUT","NZL","NIC","NER","NGA","NIU","NOR","MNP","FSM","MHL","PAK","PAN","PNG","PRY","PER","PHL","PCN","POL","PRT","GNB","TLS","QAT","ROU","RUS","RWA","BLM","SHN","KNA","AIA","LCA","VCT","SMR","STP","SAU","SEN","SRB","SYC","SLE","IND","SGP","SVK","VNM","SVN","SOM","ZAF","ZWE","ESP","SSD","SDN","SUR","SWZ","SWE","CHE","SYR","TJK","THA","TGO","TON","TTO","ARE","TUN","TUR","TKM","TCA","UGA","UKR","MKD","EGY","GBR","TZA","USA","BFA","URY","UZB","VEN","WSM","YEM","ZMB"],"X2nd.Partner.Code":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"X2nd.Partner":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"X2nd.Partner.ISO":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"Customs.Proc..Code":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"Customs":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"Mode.of.Transport.Code":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"Mode.of.Transport":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"Commodity.Code":["TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL","TOTAL"],"Commodity":["All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities","All Commodities"],"Qty.Unit.Code":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"Qty.Unit":["No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity","No Quantity"],"Qty":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"Alt.Qty.Unit.Code":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"Alt.Qty.Unit":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"Alt.Qty":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"Netweight..kg.":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"Gross.weight..kg.":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"Trade.Value..US..":[6733281,36559955,993045770,40679,152825,647986587,6019469,25940482,12800015447,400298520,139100372,593539741,309106623,1147410889,20878983,16405325,2989689298,1877206,4465,1482007999,924707,3822357,7559875,324501,16281113,1346483,117910940,40138331,115392,11970035,3531458,67373543,2362544620,21373063,56099815,1737356,116768269,1188659,3978438486,35607523612,2115234768,869352,66819518,42099117,12558,267507344,78607504,513556571,9271686,26071991,109898815,321918378,2711670,523161378,665462387,106196907,25190992,21962083,1280226,32767888,55893,111864,1031909,269320136,2270225356,975891,14339864,36479508,194406000,78989961,47004018,5171570751,183164163,147857,34099,117029617,8913,7689899,102542,224320899,53888774,21887096,37750911,102263194,2108001994,239097236,292864900,2180799748,1666185295,306583030,383432875,380751042,3270224753,47074850,59252709,4844959300,8107355,242302249,60675037,2482040,3122202786,239533983,2889667,205573,286774982,14111,26714950,26412010,147870040,52102571,36379805,497029,22734199,1157224,1829670184,12407998,7977850,15425875,141696324,39921529,3588345840,1194527,2093183,21474075,6026,494287164,69099529,583945782,7020710,840061,10044465679,532656961,30301263,41009,6263728,220889,64200352,94036913,754681,688377146,253680,678970774,76,211771,11610227,297853140,304737870,3335192,2473348262,1815632198,728633861,362,495035464,822104983,2885872,6228732,356953936,242329934,2464430326,698475,2047,4603,3277384,716610,672825717,3285101,8337,881964,2750366922,131900123,33197080,7708524,45749022,3617449354,2045353055,21273637,2124310401,380791103,36870683,1353771220,11178157,2971693265,692002,23377285,38430148,360871,503477420,1944981832,69664750,2741947,1749311727,67857031,868648,266632831,2503670227,302968833,1335561698,2747288,3341907,5967203,84619099,17715776,2056588300,2916045626,16779350,24215973746,893158,2726867064,9963015,2986603820,375494,214545471,5334118],"CIF.Trade.Value..US..":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"FOB.Trade.Value..US..":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"Flag":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"name":["Afghanistan","Albania","Algeria","American Samoa","Andorra","Angola","Antigua and Barbuda","Azerbaijan","Argentina","Australia","Austria","Bahamas","Bahrain","Bangladesh","Armenia","Barbados","Belgium","Bermuda","Bhutan","Bolivia (Plurinational State of)","Bosnia and Herzegovina","Botswana","Belize","Solomon Islands","Virgin Islands (British)","Brunei Darussalam","Bulgaria","Myanmar","Burundi","Belarus","Cambodia","Cameroon","Canada","Cabo Verde","Cayman Islands","Central African Republic","Sri Lanka","Chad","Chile","China","Colombia","Comoros","Congo","Congo (Democratic Republic of the)","Cook Islands","Costa Rica","Croatia","Cuba","Cyprus","Czech Republic","Benin","Denmark","Dominica","Dominican Republic","Ecuador","El Salvador","Equatorial Guinea","Ethiopia","Eritrea","Estonia","Faroe Islands","Falkland Islands (Malvinas)","Fiji","Finland","France","French Polynesia","Djibouti","Gabon","Georgia","Gambia","Palestine, State of","Germany","Ghana","Gibraltar","Kiribati","Greece","Greenland","Grenada","Guam","Guatemala","Guinea","Guyana","Haiti","Honduras","Hong Kong","Hungary","Iceland","Indonesia","Iran (Islamic Republic of)","Iraq","Ireland","Israel","Italy","Côte d'Ivoire","Jamaica","Japan","Kazakhstan","Jordan","Kenya","Korea (Democratic People's Republic of)","Korea (Republic of)","Kuwait","Kyrgyzstan","Lao People's Democratic Republic","Lebanon","Lesotho","Latvia","Liberia","Libya","Lithuania","Luxembourg","Macao","Madagascar","Malawi","Malaysia","Maldives","Mali","Malta","Mauritania","Mauritius","Mexico","Mongolia","Moldova (Republic of)","Montenegro","Montserrat","Morocco","Mozambique","Oman","Namibia","Nepal","Netherlands","Curaçao","Aruba","Sint Maarten (Dutch part)","New Caledonia","Vanuatu","New Zealand","Nicaragua","Niger","Nigeria","Niue","Norway","Northern Mariana Islands","Micronesia (Federated States of)","Marshall Islands","Pakistan","Panama","Papua New Guinea","Paraguay","Peru","Philippines","Pitcairn","Poland","Portugal","Guinea-Bissau","Timor-Leste","Qatar","Romania","Russian Federation","Rwanda","Saint Barthélemy","Saint Helena, Ascension and Tristan da Cunha","Saint Kitts and Nevis","Anguilla","Saint Lucia","Saint Vincent and the Grenadines","San Marino","Sao Tome and Principe","Saudi Arabia","Senegal","Serbia","Seychelles","Sierra Leone","India","Singapore","Slovakia","Viet Nam","Slovenia","Somalia","South Africa","Zimbabwe","Spain","South Sudan","Sudan","Suriname","Swaziland","Sweden","Switzerland","Syrian Arab Republic","Tajikistan","Thailand","Togo","Tonga","Trinidad and Tobago","United Arab Emirates","Tunisia","Turkey","Turkmenistan","Turks and Caicos Islands","Uganda","Ukraine","Macedonia (the former Yugoslav Republic of)","Egypt","United Kingdom of Great Britain and Northern Ireland","Tanzania, United Republic of","United States of America","Burkina Faso","Uruguay","Uzbekistan","Venezuela (Bolivarian Republic of)","Samoa","Yemen","Zambia"],"alpha.2":["AF","AL","DZ","AS","AD","AO","AG","AZ","AR","AU","AT","BS","BH","BD","AM","BB","BE","BM","BT","BO","BA","BW","BZ","SB","VG","BN","BG","MM","BI","BY","KH","CM","CA","CV","KY","CF","LK","TD","CL","CN","CO","KM","CG","CD","CK","CR","HR","CU","CY","CZ","BJ","DK","DM","DO","EC","SV","GQ","ET","ER","EE","FO","FK","FJ","FI","FR","PF","DJ","GA","GE","GM","PS","DE","GH","GI","KI","GR","GL","GD","GU","GT","GN","GY","HT","HN","HK","HU","IS","ID","IR","IQ","IE","IL","IT","CI","JM","JP","KZ","JO","KE","KP","KR","KW","KG","LA","LB","LS","LV","LR","LY","LT","LU","MO","MG","MW","MY","MV","ML","MT","MR","MU","MX","MN","MD","ME","MS","MA","MZ","OM",null,"NP","NL","CW","AW","SX","NC","VU","NZ","NI","NE","NG","NU","NO","MP","FM","MH","PK","PA","PG","PY","PE","PH","PN","PL","PT","GW","TL","QA","RO","RU","RW","BL","SH","KN","AI","LC","VC","SM","ST","SA","SN","RS","SC","SL","IN","SG","SK","VN","SI","SO","ZA","ZW","ES","SS","SD","SR","SZ","SE","CH","SY","TJ","TH","TG","TO","TT","AE","TN","TR","TM","TC","UG","UA","MK","EG","GB","TZ","US","BF","UY","UZ","VE","WS","YE","ZM"],"country.code":[4,8,12,16,20,24,28,31,32,36,40,44,48,50,51,52,56,60,64,68,70,72,84,90,92,96,100,104,108,112,116,120,124,132,136,140,144,148,152,156,170,174,178,180,184,188,191,192,196,203,204,208,212,214,218,222,226,231,232,233,234,238,242,246,250,258,262,266,268,270,275,276,288,292,296,300,304,308,316,320,324,328,332,340,344,348,352,360,364,368,372,376,380,384,388,392,398,400,404,408,410,414,417,418,422,426,428,430,434,440,442,446,450,454,458,462,466,470,478,480,484,496,498,499,500,504,508,512,516,524,528,531,533,534,540,548,554,558,562,566,570,578,580,583,584,586,591,598,600,604,608,612,616,620,624,626,634,642,643,646,652,654,659,660,662,670,674,678,682,686,688,690,694,356,702,703,704,705,706,710,716,724,728,729,740,748,752,756,760,762,764,768,776,780,784,788,792,795,796,800,804,807,818,826,834,840,854,858,860,862,882,887,894],"iso_3166.2":["ISO 3166-2:AF","ISO 3166-2:AL","ISO 3166-2:DZ","ISO 3166-2:AS","ISO 3166-2:AD","ISO 3166-2:AO","ISO 3166-2:AG","ISO 3166-2:AZ","ISO 3166-2:AR","ISO 3166-2:AU","ISO 3166-2:AT","ISO 3166-2:BS","ISO 3166-2:BH","ISO 3166-2:BD","ISO 3166-2:AM","ISO 3166-2:BB","ISO 3166-2:BE","ISO 3166-2:BM","ISO 3166-2:BT","ISO 3166-2:BO","ISO 3166-2:BA","ISO 3166-2:BW","ISO 3166-2:BZ","ISO 3166-2:SB","ISO 3166-2:VG","ISO 3166-2:BN","ISO 3166-2:BG","ISO 3166-2:MM","ISO 3166-2:BI","ISO 3166-2:BY","ISO 3166-2:KH","ISO 3166-2:CM","ISO 3166-2:CA","ISO 3166-2:CV","ISO 3166-2:KY","ISO 3166-2:CF","ISO 3166-2:LK","ISO 3166-2:TD","ISO 3166-2:CL","ISO 3166-2:CN","ISO 3166-2:CO","ISO 3166-2:KM","ISO 3166-2:CG","ISO 3166-2:CD","ISO 3166-2:CK","ISO 3166-2:CR","ISO 3166-2:HR","ISO 3166-2:CU","ISO 3166-2:CY","ISO 3166-2:CZ","ISO 3166-2:BJ","ISO 3166-2:DK","ISO 3166-2:DM","ISO 3166-2:DO","ISO 3166-2:EC","ISO 3166-2:SV","ISO 3166-2:GQ","ISO 3166-2:ET","ISO 3166-2:ER","ISO 3166-2:EE","ISO 3166-2:FO","ISO 3166-2:FK","ISO 3166-2:FJ","ISO 3166-2:FI","ISO 3166-2:FR","ISO 3166-2:PF","ISO 3166-2:DJ","ISO 3166-2:GA","ISO 3166-2:GE","ISO 3166-2:GM","ISO 3166-2:PS","ISO 3166-2:DE","ISO 3166-2:GH","ISO 3166-2:GI","ISO 3166-2:KI","ISO 3166-2:GR","ISO 3166-2:GL","ISO 3166-2:GD","ISO 3166-2:GU","ISO 3166-2:GT","ISO 3166-2:GN","ISO 3166-2:GY","ISO 3166-2:HT","ISO 3166-2:HN","ISO 3166-2:HK","ISO 3166-2:HU","ISO 3166-2:IS","ISO 3166-2:ID","ISO 3166-2:IR","ISO 3166-2:IQ","ISO 3166-2:IE","ISO 3166-2:IL","ISO 3166-2:IT","ISO 3166-2:CI","ISO 3166-2:JM","ISO 3166-2:JP","ISO 3166-2:KZ","ISO 3166-2:JO","ISO 3166-2:KE","ISO 3166-2:KP","ISO 3166-2:KR","ISO 3166-2:KW","ISO 3166-2:KG","ISO 3166-2:LA","ISO 3166-2:LB","ISO 3166-2:LS","ISO 3166-2:LV","ISO 3166-2:LR","ISO 3166-2:LY","ISO 3166-2:LT","ISO 3166-2:LU","ISO 3166-2:MO","ISO 3166-2:MG","ISO 3166-2:MW","ISO 3166-2:MY","ISO 3166-2:MV","ISO 3166-2:ML","ISO 3166-2:MT","ISO 3166-2:MR","ISO 3166-2:MU","ISO 3166-2:MX","ISO 3166-2:MN","ISO 3166-2:MD","ISO 3166-2:ME","ISO 3166-2:MS","ISO 3166-2:MA","ISO 3166-2:MZ","ISO 3166-2:OM","ISO 3166-2:NA","ISO 3166-2:NP","ISO 3166-2:NL","ISO 3166-2:CW","ISO 3166-2:AW","ISO 3166-2:SX","ISO 3166-2:NC","ISO 3166-2:VU","ISO 3166-2:NZ","ISO 3166-2:NI","ISO 3166-2:NE","ISO 3166-2:NG","ISO 3166-2:NU","ISO 3166-2:NO","ISO 3166-2:MP","ISO 3166-2:FM","ISO 3166-2:MH","ISO 3166-2:PK","ISO 3166-2:PA","ISO 3166-2:PG","ISO 3166-2:PY","ISO 3166-2:PE","ISO 3166-2:PH","ISO 3166-2:PN","ISO 3166-2:PL","ISO 3166-2:PT","ISO 3166-2:GW","ISO 3166-2:TL","ISO 3166-2:QA","ISO 3166-2:RO","ISO 3166-2:RU","ISO 3166-2:RW","ISO 3166-2:BL","ISO 3166-2:SH","ISO 3166-2:KN","ISO 3166-2:AI","ISO 3166-2:LC","ISO 3166-2:VC","ISO 3166-2:SM","ISO 3166-2:ST","ISO 3166-2:SA","ISO 3166-2:SN","ISO 3166-2:RS","ISO 3166-2:SC","ISO 3166-2:SL","ISO 3166-2:IN","ISO 3166-2:SG","ISO 3166-2:SK","ISO 3166-2:VN","ISO 3166-2:SI","ISO 3166-2:SO","ISO 3166-2:ZA","ISO 3166-2:ZW","ISO 3166-2:ES","ISO 3166-2:SS","ISO 3166-2:SD","ISO 3166-2:SR","ISO 3166-2:SZ","ISO 3166-2:SE","ISO 3166-2:CH","ISO 3166-2:SY","ISO 3166-2:TJ","ISO 3166-2:TH","ISO 3166-2:TG","ISO 3166-2:TO","ISO 3166-2:TT","ISO 3166-2:AE","ISO 3166-2:TN","ISO 3166-2:TR","ISO 3166-2:TM","ISO 3166-2:TC","ISO 3166-2:UG","ISO 3166-2:UA","ISO 3166-2:MK","ISO 3166-2:EG","ISO 3166-2:GB","ISO 3166-2:TZ","ISO 3166-2:US","ISO 3166-2:BF","ISO 3166-2:UY","ISO 3166-2:UZ","ISO 3166-2:VE","ISO 3166-2:WS","ISO 3166-2:YE","ISO 3166-2:ZM"],"region":["Asia","Europe","Africa","Oceania","Europe","Africa","Americas","Asia","Americas","Oceania","Europe","Americas","Asia","Asia","Asia","Americas","Europe","Americas","Asia","Americas","Europe","Africa","Americas","Oceania","Americas","Asia","Europe","Asia","Africa","Europe","Asia","Africa","Americas","Africa","Americas","Africa","Asia","Africa","Americas","Asia","Americas","Africa","Africa","Africa","Oceania","Americas","Europe","Americas","Asia","Europe","Africa","Europe","Americas","Americas","Americas","Americas","Africa","Africa","Africa","Europe","Europe","Americas","Oceania","Europe","Europe","Oceania","Africa","Africa","Asia","Africa","Asia","Europe","Africa","Europe","Oceania","Europe","Americas","Americas","Oceania","Americas","Africa","Americas","Americas","Americas","Asia","Europe","Europe","Asia","Asia","Asia","Europe","Asia","Europe","Africa","Americas","Asia","Asia","Asia","Africa","Asia","Asia","Asia","Asia","Asia","Asia","Africa","Europe","Africa","Africa","Europe","Europe","Asia","Africa","Africa","Asia","Asia","Africa","Europe","Africa","Africa","Americas","Asia","Europe","Europe","Americas","Africa","Africa","Asia","Africa","Asia","Europe","Americas","Americas","Americas","Oceania","Oceania","Oceania","Americas","Africa","Africa","Oceania","Europe","Oceania","Oceania","Oceania","Asia","Americas","Oceania","Americas","Americas","Asia","Oceania","Europe","Europe","Africa","Asia","Asia","Europe","Europe","Africa","Americas","Africa","Americas","Americas","Americas","Americas","Europe","Africa","Asia","Africa","Europe","Africa","Africa","Asia","Asia","Europe","Asia","Europe","Africa","Africa","Africa","Europe","Africa","Africa","Americas","Africa","Europe","Europe","Asia","Asia","Asia","Africa","Oceania","Americas","Asia","Africa","Asia","Asia","Americas","Africa","Europe","Europe","Africa","Europe","Africa","Americas","Africa","Americas","Asia","Americas","Oceania","Asia","Africa"],"sub.region":["Southern Asia","Southern Europe","Northern Africa","Polynesia","Southern Europe","Middle Africa","Caribbean","Western Asia","South America","Australia and New Zealand","Western Europe","Caribbean","Western Asia","Southern Asia","Western Asia","Caribbean","Western Europe","Northern America","Southern Asia","South America","Southern Europe","Southern Africa","Central America","Melanesia","Caribbean","South-Eastern Asia","Eastern Europe","South-Eastern Asia","Eastern Africa","Eastern Europe","South-Eastern Asia","Middle Africa","Northern America","Western Africa","Caribbean","Middle Africa","Southern Asia","Middle Africa","South America","Eastern Asia","South America","Eastern Africa","Middle Africa","Middle Africa","Polynesia","Central America","Southern Europe","Caribbean","Western Asia","Eastern Europe","Western Africa","Northern Europe","Caribbean","Caribbean","South America","Central America","Middle Africa","Eastern Africa","Eastern Africa","Northern Europe","Northern Europe","South America","Melanesia","Northern Europe","Western Europe","Polynesia","Eastern Africa","Middle Africa","Western Asia","Western Africa","Western Asia","Western Europe","Western Africa","Southern Europe","Micronesia","Southern Europe","Northern America","Caribbean","Micronesia","Central America","Western Africa","South America","Caribbean","Central America","Eastern Asia","Eastern Europe","Northern Europe","South-Eastern Asia","Southern Asia","Western Asia","Northern Europe","Western Asia","Southern Europe","Western Africa","Caribbean","Eastern Asia","Central Asia","Western Asia","Eastern Africa","Eastern Asia","Eastern Asia","Western Asia","Central Asia","South-Eastern Asia","Western Asia","Southern Africa","Northern Europe","Western Africa","Northern Africa","Northern Europe","Western Europe","Eastern Asia","Eastern Africa","Eastern Africa","South-Eastern Asia","Southern Asia","Western Africa","Southern Europe","Western Africa","Eastern Africa","Central America","Eastern Asia","Eastern Europe","Southern Europe","Caribbean","Northern Africa","Eastern Africa","Western Asia","Southern Africa","Southern Asia","Western Europe","Caribbean","Caribbean","Caribbean","Melanesia","Melanesia","Australia and New Zealand","Central America","Western Africa","Western Africa","Polynesia","Northern Europe","Micronesia","Micronesia","Micronesia","Southern Asia","Central America","Melanesia","South America","South America","South-Eastern Asia","Polynesia","Eastern Europe","Southern Europe","Western Africa","South-Eastern Asia","Western Asia","Eastern Europe","Eastern Europe","Eastern Africa","Caribbean","Western Africa","Caribbean","Caribbean","Caribbean","Caribbean","Southern Europe","Middle Africa","Western Asia","Western Africa","Southern Europe","Eastern Africa","Western Africa","Southern Asia","South-Eastern Asia","Eastern Europe","South-Eastern Asia","Southern Europe","Eastern Africa","Southern Africa","Eastern Africa","Southern Europe","Eastern Africa","Northern Africa","South America","Southern Africa","Northern Europe","Western Europe","Western Asia","Central Asia","South-Eastern Asia","Western Africa","Polynesia","Caribbean","Western Asia","Northern Africa","Western Asia","Central Asia","Caribbean","Eastern Africa","Eastern Europe","Southern Europe","Northern Africa","Northern Europe","Eastern Africa","Northern America","Western Africa","South America","Central Asia","South America","Polynesia","Western Asia","Eastern Africa"],"region.code":[142,150,2,9,150,2,19,142,19,9,150,19,142,142,142,19,150,19,142,19,150,2,19,9,19,142,150,142,2,150,142,2,19,2,19,2,142,2,19,142,19,2,2,2,9,19,150,19,142,150,2,150,19,19,19,19,2,2,2,150,150,19,9,150,150,9,2,2,142,2,142,150,2,150,9,150,19,19,9,19,2,19,19,19,142,150,150,142,142,142,150,142,150,2,19,142,142,142,2,142,142,142,142,142,142,2,150,2,2,150,150,142,2,2,142,142,2,150,2,2,19,142,150,150,19,2,2,142,2,142,150,19,19,19,9,9,9,19,2,2,9,150,9,9,9,142,19,9,19,19,142,9,150,150,2,142,142,150,150,2,19,2,19,19,19,19,150,2,142,2,150,2,2,142,142,150,142,150,2,2,2,150,2,2,19,2,150,150,142,142,142,2,9,19,142,2,142,142,19,2,150,150,2,150,2,19,2,19,142,19,9,142,2],"sub.region.code":[34,39,15,61,39,17,29,145,5,53,155,29,145,34,145,29,155,21,34,5,39,18,13,54,29,35,151,35,14,151,35,17,21,11,29,17,34,17,5,30,5,14,17,17,61,13,39,29,145,151,11,154,29,29,5,13,17,14,14,154,154,5,54,154,155,61,14,17,145,11,145,155,11,39,57,39,21,29,57,13,11,5,29,13,30,151,154,35,34,145,154,145,39,11,29,30,143,145,14,30,30,145,143,35,145,18,154,11,15,154,155,30,14,14,35,34,11,39,11,14,13,30,151,39,29,15,14,145,18,34,155,29,29,29,54,54,53,13,11,11,61,154,57,57,57,34,13,54,5,5,35,61,151,39,11,35,145,151,151,14,29,11,29,29,29,29,39,17,145,11,39,14,11,34,35,151,35,39,14,18,14,39,14,15,5,18,154,155,145,143,35,11,61,29,145,15,145,143,29,14,151,39,15,154,14,21,11,5,143,5,61,145,14]},"settings":{"type":"tree_map","id":["region","Partner"],"title":["function (main = NULL, sub = NULL, xlab = NULL, ylab = NULL, ","    line = NA, outer = FALSE, ...) ","{","    main <- as.graphicsAnnot(main)","    sub <- as.graphicsAnnot(sub)","    xlab <- as.graphicsAnnot(xlab)","    ylab <- as.graphicsAnnot(ylab)","    .External.graphics(C_title, main, sub, xlab, ylab, line, ","        outer, ...)","    invisible()","}"],"currency":"US$","number_text":["K","M","M","B","B"],"currency_var":null,"percent_var":null,"locale":"en_US","dictionary":{}},"d3plusSize":{"value":"Trade.Value..US.."},"d3plusLegend":{"value":true,"order":{"sort":"desc","value":"size"}},"d3plusColor":{"value":"region"},"d3plusDepth":{"value":0},"d3plusLabels":{"value":{},"valign":"top"}},"evals":[],"jsHooks":[]}</script>
<!--/html_preserve-->

<h2 id="consideraes-finais">Considerações Finais</h2>

<p>Neste post, elaboramos uma pequena introdução ao pacote <code>D3plusR</code>. A ideia é evoluir o pacote. Portanto, comentários e críticas são bem-vindos. Também faremos mais posts com mais exemplos, aprofundando um pouco mais a cada publicação. Por exemplo, é possível utilizar uma lista como dicionário para traduzir o nome de uma variável, incluir ícones na legenda, customizar as cores, linkar visualizações, etc.</p>

<h2 id="referncias">Referências</h2>

<ul>
  <li><a href="https://d3js.org/">D3</a></li>
  <li><a href="https://d3plus.org/examples/">D3plus Examples</a></li>
  <li><a href="http://www.htmlwidgets.org/">Htmlwidgets</a></li>
  <li><a href="https://github.com/paulofelipe/D3plusR">D3plusR no Github</a></li>
</ul>

<style>
.d3plus_tooltip{
  text-align: left !important;
}
</style>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Introdução a Modelos no R]]></title>
    <link href="http://fulljoin.com.br/blog/2016/07/10/intro-modelos-r/"/>
    <updated>2016-07-10T11:44:00-03:00</updated>
    <id>http://fulljoin.com.br/blog/2016/07/10/intro-modelos-r</id>
    <content type="html"><![CDATA[<p>Neste post, vamos introduzir alguns conceitos para começar a trabalhar com modelos no R. Abordaremos o modelo linear de regressão utilizando a função <code>lm()</code>. Aprender a estrutura básica de modelos a partir do modelo linear será bastante útil para entender e utilizar outros modelos mais complexos.</p>

<!-- More -->

<h2 id="o-que-so-modelos">O que são modelos?</h2>

<p>Se você já tem uma noção do que é modelagem matemática, pule para o próximo tópico <strong>Dados</strong>.</p>

<p>Modelos são representações da realidade. São usados nas ciências sociais e exatas na tentativa de estudar e entender como o mundo funciona.</p>

<p>Um modelo matemático é uma representação, em linguagem matemática, do comportamento de algo. Por se tratar de representações, obviamente modelos matemáticos são bem mais simples do que a realidade, mas isso não significa dizer que um bom modelo não sirva para descrever e entender determinados aspectos e comportamentos reais.</p>

<p>Modelo de regressão linear talvez seja uma das formas mais simples de modelagem estatística. É uma abordagem que tenta representar a relação entre variáveis, uma chamada variável dependente (y), e uma ou mais denominadas de variáveis explicativas (<strong>x</strong>). Adicionalmente, o modelo também inclui um termo aleatório, o que o torna um modelo estatístico.</p>

<p>Usa-se o termo “regressão” pois o modelo tenta descrever o comportamento de y em relação a x em situações desconhecidas tomando como base situações conhecidas, ou seja, o modelo calcula um fator de forma que se você conhece o(s) valor(es) de x, consegue estimar o valor de y. O termo linear deve-se ao fato de como os parâmetros e o termo aleatório entram na equação estimada. A relação linear deve existir entre $y$ e $x$ ou entre $y$ e alguma função de $x$. Ou seja, se o modelo a ser estimado é <script type="math/tex">y_i = \alpha + \beta\ln(x_i) + e_i</script>, fica evidente que o efeito de $x$ em $y$ não é linear, mas o efeito de $\ln(x)$, sim.</p>

<p>Também é importante notar que, como todo modelo, o modelo de regressão linear tem uma série de hipóteses, e as inferências em relação aos parâmetros são realizadas sob essas hipóteses. Se elas são violadas de alguma maneira, a inferência que está sendo realizada pode estar errada.</p>

<p>Feita essa pequena introdução sobre modelos, iremos para a parte prática de como estimar o modelo linear usando o R.</p>

<h2 id="dados">Dados</h2>

<p>Primeiramente, precisaremos de uma base de dados para exemplificar como podemos usar um modelo no R. Vamos utilizar a base de dados <code>Carseats</code> que está disponível no pacote <code>ISLR</code>, que é um pacote complementar ao livro <a href="http://www-bcf.usc.edu/~gareth/ISL/getbook.html">Introduction to Statistical Learning with Applications in R</a>. Trata-se de um conjunto de dados simulados de vendas de cadeirinhas de carros para crianças. A tabela abaixo lista as variáveis presente nessa base de dados:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">library</span><span class="p">(</span><span class="n">ISLR</span><span class="p">)</span> <span class="c1"># Instale o pacote se necessário install.packages(“ISLR”)</span>
<span class="n">data</span><span class="p">(</span><span class="err">“</span><span class="n">Carseats</span><span class="err">”</span><span class="p">)</span></code></pre></div></p>

<table>
  <thead>
    <tr>
      <th style="text-align: left">Nome</th>
      <th style="text-align: left">Descrição</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">Sales</td>
      <td style="text-align: left">Milhares de unidades vendidas em cada local</td>
    </tr>
    <tr>
      <td style="text-align: left">CompPrice</td>
      <td style="text-align: left">Preço cobrado pelo competidor em cada local</td>
    </tr>
    <tr>
      <td style="text-align: left">Income</td>
      <td style="text-align: left">Nível de renda local (milhares de dólares)</td>
    </tr>
    <tr>
      <td style="text-align: left">Advertising</td>
      <td style="text-align: left">Orçamento disponível para publicidade em cada local (milhares de dólares)</td>
    </tr>
    <tr>
      <td style="text-align: left">Population</td>
      <td style="text-align: left">Tamanho da população regional (mil)</td>
    </tr>
    <tr>
      <td style="text-align: left">Price</td>
      <td style="text-align: left">Preço da empresa em cada local</td>
    </tr>
    <tr>
      <td style="text-align: left">ShelveLoc</td>
      <td style="text-align: left">Fator com três níveis: ruim, bom e médio. Indica a qualidade do local da prateleira para as cadeiras de carro em cada loja</td>
    </tr>
    <tr>
      <td style="text-align: left">Age</td>
      <td style="text-align: left">Idade média da população local</td>
    </tr>
    <tr>
      <td style="text-align: left">Education</td>
      <td style="text-align: left">Nível educacional de cada local</td>
    </tr>
    <tr>
      <td style="text-align: left">Urban</td>
      <td style="text-align: left">Fator com dois níveis: sim e não. Indica se a loja está localizada em um área urbana ou rural</td>
    </tr>
    <tr>
      <td style="text-align: left">US</td>
      <td style="text-align: left">Fator com dois níveis: sim e não. Indica se a loja está localizada nos Estados Unidos ou não</td>
    </tr>
  </tbody>
</table>

<p>Para termos uma ideia da “cara” dos dados, vamos olhar as primeiras linhas usando o <code>head()</code>.</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">head</span><span class="p">(</span><span class="n">Carseats</span><span class="p">)</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##   Sales CompPrice Income Advertising Population Price ShelveLoc Age
## 1  9.50       138     73          11        276   120       Bad  42
## 2 11.22       111     48          16        260    83      Good  65
## 3 10.06       113     35          10        269    80    Medium  59
## 4  7.40       117    100           4        466    97    Medium  55
## 5  4.15       141     64           3        340   128       Bad  38
## 6 10.81       124    113          13        501    72       Bad  78
##   Education Urban  US
## 1        17   Yes Yes
## 2        10   Yes Yes
## 3        12   Yes Yes
## 4        14   Yes Yes
## 5        13   Yes  No
## 6        16    No Yes</code></pre></div></p>

<p>Essa base dados é interessante, pois possui variáveis quantitativas e qualitativas/categóricas. Se você quiser ver algumas estatísticas sobre cada coluna dos seus dados, pode-se usar o <code>summary()</code>.</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">summary</span><span class="p">(</span><span class="n">Carseats</span><span class="p">)</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##      Sales          CompPrice       Income        Advertising  &lt;br /&gt;
##  Min.   : 0.000   Min.   : 77   Min.   : 21.00   Min.   : 0.000&lt;br /&gt;
##  1st Qu.: 5.390   1st Qu.:115   1st Qu.: 42.75   1st Qu.: 0.000&lt;br /&gt;
##  Median : 7.490   Median :125   Median : 69.00   Median : 5.000&lt;br /&gt;
##  Mean   : 7.496   Mean   :125   Mean   : 68.66   Mean   : 6.635&lt;br /&gt;
##  3rd Qu.: 9.320   3rd Qu.:135   3rd Qu.: 91.00   3rd Qu.:12.000&lt;br /&gt;
##  Max.   :16.270   Max.   :175   Max.   :120.00   Max.   :29.000&lt;br /&gt;
##    Population        Price        ShelveLoc        Age     &lt;br /&gt;
##  Min.   : 10.0   Min.   : 24.0   Bad   : 96   Min.   :25.00&lt;br /&gt;
##  1st Qu.:139.0   1st Qu.:100.0   Good  : 85   1st Qu.:39.75&lt;br /&gt;
##  Median :272.0   Median :117.0   Medium:219   Median :54.50&lt;br /&gt;
##  Mean   :264.8   Mean   :115.8                Mean   :53.32&lt;br /&gt;
##  3rd Qu.:398.5   3rd Qu.:131.0                3rd Qu.:66.00&lt;br /&gt;
##  Max.   :509.0   Max.   :191.0                Max.   :80.00&lt;br /&gt;
##    Education    Urban       US   &lt;br /&gt;
##  Min.   :10.0   No :118   No :142&lt;br /&gt;
##  1st Qu.:12.0   Yes:282   Yes:258&lt;br /&gt;
##  Median :14.0                    &lt;br /&gt;
##  Mean   :13.9                    &lt;br /&gt;
##  3rd Qu.:16.0                    &lt;br /&gt;
##  Max.   :18.0</code></pre></div></p>

<h2 id="modelo-linear">Modelo Linear</h2>

<p>Usar o modelo de regressão linear no R é bastante simples. Vamos estimar um modelo linear (função <code>lm()</code>) em que a variável dependente (y) é a variável de vendas, <em>Sales</em>, e utilizaremos duas variáveis independentes (<em>features</em>), <em>Price</em> e <em>CompPrice</em>.</p>

<p>A função <code>lm()</code> utiliza a estrutura de fórmula para definição do modelo. Essa estrutura é uma organização muito comum em diversas funções de modelo no R. A estrutura de fórmula separa a variável dependente das demais variáveis explicativas pelo símbolo <code>~</code>. À esquerda de <code>~</code> fica a variável dependente que você deseja estimar, e à direita as demais variáveis explicativas.</p>

<p>No parâmetro <code>data</code>, é informado o conjunto de dados que contém as variáveis que estão listadas na fórmula. Essa função possui outros parâmetros opcionais que estão listados no <em>help</em> (<code>?lm</code>).</p>

<p>Apesar de comum, é importante ressaltar que a estrutura de fórmula não é utilizada em todos os modelos no R. Em alguns casos, o modelo pode ser definido por dois parâmetros, <code>x</code> e <code>y</code>, que recebem os valores das variáveis independentes e dependente, respectivamente. Eventualmente, iremos trabalhar com algum modelo que está estruturado dessa forma. Podem existir outras formas de estruturação de um modelo no R, mas são mais raras.</p>

<p>Como dito, usar o modelo linear em R é muito simples:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">fit</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">lm</span><span class="p">(</span><span class="n">Sales</span> <span class="o">~</span> <span class="n">Price</span> <span class="o">+</span> <span class="n">CompPrice</span><span class="p">,</span> <span class="n">data</span> <span class="o">=</span> <span class="n">Carseats</span><span class="p">)</span>
<span class="n">fit</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">## 
## Call:
## lm(formula = Sales ~ Price + CompPrice, data = Carseats)
## 
## Coefficients:
## (Intercept)        Price    CompPrice&lt;br /&gt;
##     6.27869     -0.08746      0.09078</code></pre></div></p>

<p>Bem, como quase tudo no R, não existe uma única forma de executar essa função. Você poderia estimar o modelo direto sem informar o parâmetro <code>data</code>:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">fit</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">lm</span><span class="p">(</span><span class="n">Carseats</span><span class="o">$</span><span class="n">Sales</span> <span class="o">~</span> <span class="n">Carseats</span><span class="o">$</span><span class="n">Price</span> <span class="o">+</span> <span class="n">Carseats</span><span class="o">$</span><span class="n">CompPrice</span><span class="p">)</span>
<span class="n">fit</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">## 
## Call:
## lm(formula = Carseats$Sales ~ Carseats$Price + Carseats$CompPrice)
## 
## Coefficients:
##        (Intercept)      Carseats$Price  Carseats$CompPrice&lt;br /&gt;
##            6.27869            -0.08746             0.09078</code></pre></div></p>

<p>Percebeu que o resultado foi igual? Além disso, considerando que as vendas estão controladas só por esses dois fatores, você vê que as vendas são negativamente afetadas pelo próprio preço e positivamente afetas pelo preço do competidor. Porém, não estamos vendo os desvios-padrão para fazer a análise mais correta. Como fazer pra ver mais detalhes. Novamente, usaremos o <code>summary()</code>.</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">fit</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">lm</span><span class="p">(</span><span class="n">Sales</span> <span class="o">~</span> <span class="n">Price</span> <span class="o">+</span> <span class="n">CompPrice</span><span class="p">,</span> <span class="n">data</span> <span class="o">=</span> <span class="n">Carseats</span><span class="p">)</span>
<span class="n">summary</span><span class="p">(</span><span class="n">fit</span><span class="p">)</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">## 
## Call:
## lm(formula = Sales ~ Price + CompPrice, data = Carseats)
## 
## Residuals:
##     Min      1Q  Median      3Q     Max 
## -5.5285 -1.6207 -0.2404  1.5269  6.2437 
## 
## Coefficients:
##              Estimate Std. Error t value Pr(&amp;gt;|t|)  &lt;br /&gt;
## (Intercept)  6.278692   0.932774   6.731 5.91e-11 &lt;strong&gt;*
## Price       -0.087458   0.005914 -14.788  &amp;lt; 2e-16 ***
## CompPrice    0.090777   0.009132   9.941  &amp;lt; 2e-16 ***
## —
## Signif. codes:  0 ‘&lt;/strong&gt;&lt;em&gt;’ 0.001 ‘**’ 0.01 ‘&lt;/em&gt;’ 0.05 ‘.’ 0.1 ‘ ‘ 1
## 
## Residual standard error: 2.269 on 397 degrees of freedom
## Multiple R-squared:  0.3578,	Adjusted R-squared:  0.3546 
## F-statistic: 110.6 on 2 and 397 DF,  p-value: &amp;lt; 2.2e-16</code></pre></div></p>

<p>Se você tiver que usar todas as variáveis e sua base dados possuir um grande número de colunas (variáveis), não é necessário explicitá-las uma a uma. Basta utilizar <code>.</code>.</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">fit</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">lm</span><span class="p">(</span><span class="n">Sales</span> <span class="o">~</span> <span class="err">.</span><span class="p">,</span> <span class="n">data</span> <span class="o">=</span> <span class="n">Carseats</span><span class="p">)</span>
<span class="n">summary</span><span class="p">(</span><span class="n">fit</span><span class="p">)</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">## 
## Call:
## lm(formula = Sales ~ ., data = Carseats)
## 
## Residuals:
##     Min      1Q  Median      3Q     Max 
## -2.8692 -0.6908  0.0211  0.6636  3.4115 
## 
## Coefficients:
##                   Estimate Std. Error t value Pr(&amp;gt;|t|)  &lt;br /&gt;
## (Intercept)      5.6606231  0.6034487   9.380  &amp;lt; 2e-16 &lt;strong&gt;*
## CompPrice        0.0928153  0.0041477  22.378  &amp;lt; 2e-16 ***
## Income           0.0158028  0.0018451   8.565 2.58e-16 ***
## Advertising      0.1230951  0.0111237  11.066  &amp;lt; 2e-16 ***
## Population       0.0002079  0.0003705   0.561    0.575  &lt;br /&gt;
## Price           -0.0953579  0.0026711 -35.700  &amp;lt; 2e-16 ***
## ShelveLocGood    4.8501827  0.1531100  31.678  &amp;lt; 2e-16 ***
## ShelveLocMedium  1.9567148  0.1261056  15.516  &amp;lt; 2e-16 ***
## Age             -0.0460452  0.0031817 -14.472  &amp;lt; 2e-16 ***
## Education       -0.0211018  0.0197205  -1.070    0.285  &lt;br /&gt;
## UrbanYes         0.1228864  0.1129761   1.088    0.277  &lt;br /&gt;
## USYes           -0.1840928  0.1498423  -1.229    0.220  &lt;br /&gt;
## —
## Signif. codes:  0 ‘&lt;/strong&gt;&lt;em&gt;’ 0.001 ‘**’ 0.01 ‘&lt;/em&gt;’ 0.05 ‘.’ 0.1 ‘ ‘ 1
## 
## Residual standard error: 1.019 on 388 degrees of freedom
## Multiple R-squared:  0.8734,	Adjusted R-squared:  0.8698 
## F-statistic: 243.4 on 11 and 388 DF,  p-value: &amp;lt; 2.2e-16</code></pre></div></p>

<p>E se você quiser excluir alguma variável da análise? Da mesma forma que você utiliza o <code>+</code> pra adicionar variáveis, o <code>-</code> pode ser utilizado pra excluí-las.</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">fit</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">lm</span><span class="p">(</span><span class="n">Sales</span> <span class="o">~</span> <span class="err">.</span> <span class="o">-</span> <span class="n">Urban</span><span class="p">,</span> <span class="n">data</span> <span class="o">=</span> <span class="n">Carseats</span><span class="p">)</span>
<span class="n">summary</span><span class="p">(</span><span class="n">fit</span><span class="p">)</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">## 
## Call:
## lm(formula = Sales ~ . - Urban, data = Carseats)
## 
## Residuals:
##     Min      1Q  Median      3Q     Max 
## -2.8498 -0.6992  0.0300  0.6436  3.4616 
## 
## Coefficients:
##                   Estimate Std. Error t value Pr(&amp;gt;|t|)  &lt;br /&gt;
## (Intercept)      5.7267269  0.6005220   9.536   &amp;lt;2e-16 &lt;strong&gt;*
## CompPrice        0.0930440  0.0041433  22.457   &amp;lt;2e-16 ***
## Income           0.0158656  0.0018447   8.601   &amp;lt;2e-16 ***
## Advertising      0.1235923  0.0111169  11.118   &amp;lt;2e-16 ***
## Population       0.0001822  0.0003698   0.493    0.622  &lt;br /&gt;
## Price           -0.0953182  0.0026715 -35.680   &amp;lt;2e-16 ***
## ShelveLocGood    4.8365318  0.1526307  31.688   &amp;lt;2e-16 ***
## ShelveLocMedium  1.9458754  0.1257409  15.475   &amp;lt;2e-16 ***
## Age             -0.0459156  0.0031802 -14.438   &amp;lt;2e-16 ***
## Education       -0.0219546  0.0197095  -1.114    0.266  &lt;br /&gt;
## USYes           -0.1836133  0.1498769  -1.225    0.221  &lt;br /&gt;
## —
## Signif. codes:  0 ‘&lt;/strong&gt;&lt;em&gt;’ 0.001 ‘**’ 0.01 ‘&lt;/em&gt;’ 0.05 ‘.’ 0.1 ‘ ‘ 1
## 
## Residual standard error: 1.019 on 389 degrees of freedom
## Multiple R-squared:  0.873,	Adjusted R-squared:  0.8698 
## F-statistic: 267.5 on 10 and 389 DF,  p-value: &amp;lt; 2.2e-16</code></pre></div></p>

<h2 id="acessando-os-resultados">Acessando os resultados</h2>

<p>O objeto <code>fit</code> que foi criado a partir da função <code>lm()</code> carrega consigo uma série de resultados que podem ser recuperados a qualquer momento. Se você quiser acessar os resíduos, existem duas formas:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="c1"># vamos mostrar apenas os 10 primeiros</span>
<span class="n">fit</span><span class="o">$</span><span class="n">residuals</span><span class="p">[</span><span class="m">1</span><span class="o">:</span><span class="m">10</span><span class="p">]</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##          1          2          3          4          5          6 
##  2.2886707 -1.1584731  0.8147224 -1.0624075 -1.9131450  1.0342126 
##          7          8          9         10 
##  0.4669361  0.3339878  0.3492739 -1.2152188</code></pre></div></p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">residuals</span><span class="p">(</span><span class="n">fit</span><span class="p">)[</span><span class="m">1</span><span class="o">:</span><span class="m">10</span><span class="p">]</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##          1          2          3          4          5          6 
##  2.2886707 -1.1584731  0.8147224 -1.0624075 -1.9131450  1.0342126 
##          7          8          9         10 
##  0.4669361  0.3339878  0.3492739 -1.2152188</code></pre></div></p>

<p>Para acessar os valores previstos (com dados utilizados na estimação), também existem duas formas:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="c1"># vamos mostrar apenas os 10 primeiros</span>
<span class="n">fit</span><span class="o">$</span><span class="n">fitted.values</span><span class="p">[</span><span class="m">1</span><span class="o">:</span><span class="m">10</span><span class="p">]</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##         1         2         3         4         5         6         7 
##  7.211329 12.378473  9.245278  8.462407  6.063145  9.775787  6.163064 
##         8         9        10 
## 11.516012  6.190726  5.905219</code></pre></div></p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">fitted</span><span class="p">(</span><span class="n">fit</span><span class="p">)[</span><span class="m">1</span><span class="o">:</span><span class="m">10</span><span class="p">]</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##         1         2         3         4         5         6         7 
##  7.211329 12.378473  9.245278  8.462407  6.063145  9.775787  6.163064 
##         8         9        10 
## 11.516012  6.190726  5.905219</code></pre></div></p>

<p>O mesmo vale para acessar os coeficientes estimados.</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">coef</span><span class="p">(</span><span class="n">fit</span><span class="p">)</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##     (Intercept)       CompPrice          Income     Advertising 
##    5.7267268794    0.0930440486    0.0158655664    0.1235923300 
##      Population           Price   ShelveLocGood ShelveLocMedium 
##    0.0001822397   -0.0953181549    4.8365318149    1.9458754343 
##             Age       Education           USYes 
##   -0.0459156254   -0.0219546072   -0.1836132570</code></pre></div></p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">fit</span><span class="o">$</span><span class="n">coefficients</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##     (Intercept)       CompPrice          Income     Advertising 
##    5.7267268794    0.0930440486    0.0158655664    0.1235923300 
##      Population           Price   ShelveLocGood ShelveLocMedium 
##    0.0001822397   -0.0953181549    4.8365318149    1.9458754343 
##             Age       Education           USYes 
##   -0.0459156254   -0.0219546072   -0.1836132570</code></pre></div></p>

<p>Para verificar tudo que está disponível no objeto <code>fit</code>, podemos listar seus nomes usando a função <code>names()</code>. O objeto <code>fit</code> é uma lista na verdade em que são alocados vários objetos de diversos tipos diferentes.</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">names</span><span class="p">(</span><span class="n">fit</span><span class="p">)</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##  [1] “coefficients”  “residuals”     “effects”       “rank”       &lt;br /&gt;
##  [5] “fitted.values” “assign”        “qr”            “df.residual”&lt;br /&gt;
##  [9] “contrasts”     “xlevels”       “call”          “terms”      &lt;br /&gt;
## [13] “model”</code></pre></div></p>

<p>Outro ponto importante é sobre o <code>summary()</code> aplicado ao <code>fit</code>. Como você notou, ele apresenta os resultados de uma maneira diferente. Para acessar os resultados do <code>summary(fit)</code>, podemos fazer o seguinte:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">summary.fit</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">summary</span><span class="p">(</span><span class="n">fit</span><span class="p">)</span>
<span class="n">names</span><span class="p">(</span><span class="n">summary.fit</span><span class="p">)</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##  [1] “call”          “terms”         “residuals”     “coefficients” 
##  [5] “aliased”       “sigma”         “df”            “r.squared”  &lt;br /&gt;
##  [9] “adj.r.squared” “fstatistic”    “cov.unscaled”</code></pre></div></p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">summary.fit</span><span class="o">$</span><span class="n">coefficients</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##                      Estimate   Std. Error     t value      Pr(&amp;gt;|t|)
## (Intercept)      5.7267268794 0.6005219791   9.5362486  1.650454e-19
## CompPrice        0.0930440486 0.0041432948  22.4565357  3.210578e-72
## Income           0.0158655664 0.0018446501   8.6008540  1.965977e-16
## Advertising      0.1235923300 0.0111169041  11.1175134  4.032236e-25
## Population       0.0001822397 0.0003697923   0.4928164  6.224204e-01
## Price           -0.0953181549 0.0026714558 -35.6802286 9.833525e-125
## ShelveLocGood    4.8365318149 0.1526306709  31.6878107 8.259393e-110
## ShelveLocMedium  1.9458754343 0.1257408746  15.4752815  1.955843e-42
## Age             -0.0459156254 0.0031802330 -14.4378181  3.870315e-38
## Education       -0.0219546072 0.0197095406  -1.1139076  2.660066e-01
## USYes           -0.1836132570 0.1498769114  -1.2250937  2.212812e-01</code></pre></div></p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">summary.fit</span><span class="o">$</span><span class="n">adj.r.squared</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">## [1] 0.8697633</code></pre></div></p>

<h2 id="variveis-categricas">Variáveis Categóricas</h2>

<p>Se você prestou atenção, você percebeu que o R tratou automaticamente as variáveis categóricas, escolhendo um nível como base e estimando um parâmetro para os demais níveis. O efeito seria o mesmo de você modificar sua base para transformar cada nível em uma variável <em>dummy</em> (0 ou 1) e excluir um determinado nível no momento de estimação do modelo.</p>

<p>O R automaticamente considera o primeiro nível como base. Veja que para a variável <em>ShelveLoc</em> o nível <em>Bad</em> foi escolhido como base. Para verificarmos se ele é realmente o primeiro nível, façamos o seguinte:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">levels</span><span class="p">(</span><span class="n">Carseats</span><span class="o">$</span><span class="n">ShelveLoc</span><span class="p">)</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">## [1] “Bad”    “Good”   “Medium”</code></pre></div></p>

<p>Para mudar o nível de referência, vamos utilizar a função <code>contrast()</code>. Basicamente, essa função irá criar os atributos que serão utilizados pela função <code>lm()</code> no momento de estimação do modelo. Por exemplo:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">contrasts</span><span class="p">(</span><span class="n">Carseats</span><span class="o">$</span><span class="n">ShelveLoc</span><span class="p">)</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##        Good Medium
## Bad       0      0
## Good      1      0
## Medium    0      1</code></pre></div></p>

<p>Para alterar o nível de referência podemos a função <code>contr.treatment()</code>:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">contrasts</span><span class="p">(</span><span class="n">Carseats</span><span class="o">$</span><span class="n">ShelveLoc</span><span class="p">)</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">contr.treatment</span><span class="p">(</span><span class="n">n</span> <span class="o">=</span> <span class="n">levels</span><span class="p">(</span><span class="n">Carseats</span><span class="o">$</span><span class="n">ShelveLoc</span><span class="p">),</span>
                                                 <span class="n">base</span> <span class="o">=</span> <span class="m">2</span><span class="p">)</span>
<span class="n">contrasts</span><span class="p">(</span><span class="n">Carseats</span><span class="o">$</span><span class="n">ShelveLoc</span><span class="p">)</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##        Bad Medium
## Bad      1      0
## Good     0      0
## Medium   0      1</code></pre></div>
Informamos quais eram os níveis e dissemos que queremos que o segundo (<em>Good</em>) seja usado como referência.</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">fit</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">lm</span><span class="p">(</span><span class="n">Sales</span> <span class="o">~</span> <span class="err">.</span><span class="p">,</span> <span class="n">data</span> <span class="o">=</span> <span class="n">Carseats</span><span class="p">)</span>
<span class="n">summary</span><span class="p">(</span><span class="n">fit</span><span class="p">)</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">## 
## Call:
## lm(formula = Sales ~ ., data = Carseats)
## 
## Residuals:
##     Min      1Q  Median      3Q     Max 
## -2.8692 -0.6908  0.0211  0.6636  3.4115 
## 
## Coefficients:
##                   Estimate Std. Error t value Pr(&amp;gt;|t|)  &lt;br /&gt;
## (Intercept)     10.5108058  0.6039582  17.403  &amp;lt; 2e-16 &lt;strong&gt;*
## CompPrice        0.0928153  0.0041477  22.378  &amp;lt; 2e-16 ***
## Income           0.0158028  0.0018451   8.565 2.58e-16 ***
## Advertising      0.1230951  0.0111237  11.066  &amp;lt; 2e-16 ***
## Population       0.0002079  0.0003705   0.561    0.575  &lt;br /&gt;
## Price           -0.0953579  0.0026711 -35.700  &amp;lt; 2e-16 ***
## ShelveLocBad    -4.8501827  0.1531100 -31.678  &amp;lt; 2e-16 ***
## ShelveLocMedium -2.8934679  0.1308928 -22.106  &amp;lt; 2e-16 ***
## Age             -0.0460452  0.0031817 -14.472  &amp;lt; 2e-16 ***
## Education       -0.0211018  0.0197205  -1.070    0.285  &lt;br /&gt;
## UrbanYes         0.1228864  0.1129761   1.088    0.277  &lt;br /&gt;
## USYes           -0.1840928  0.1498423  -1.229    0.220  &lt;br /&gt;
## —
## Signif. codes:  0 ‘&lt;/strong&gt;&lt;em&gt;’ 0.001 ‘**’ 0.01 ‘&lt;/em&gt;’ 0.05 ‘.’ 0.1 ‘ ‘ 1
## 
## Residual standard error: 1.019 on 388 degrees of freedom
## Multiple R-squared:  0.8734,	Adjusted R-squared:  0.8698 
## F-statistic: 243.4 on 11 and 388 DF,  p-value: &amp;lt; 2.2e-16</code></pre></div></p>

<p>Para retornar para estrutura de <em>contrast</em> padrão é preciso definir como <code>NULL</code> o atributo <code>contrasts</code> da variável <code>ShelveLoc</code>.</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">attr</span><span class="p">(</span><span class="n">Carseats</span><span class="o">$</span><span class="n">ShelveLoc</span><span class="p">,</span> <span class="err">“</span><span class="n">contrasts</span><span class="err">”</span><span class="p">)</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">NULL</span></code></pre></div></p>

<h2 id="interaes-entre-variveis">Interações entre variáveis</h2>

<p>Para realizar interações entre variáveis, utiliza-se o símbolo <code>*</code>. Ou seja, se você quiser a interação entre as variáveis <code>V1</code> e <code>V2</code> no seu modelo basta incluir <code>V1 * V2</code> na fórmula do seu modelo.</p>

<p>Voltando ao nosso exemplo, podemos fazer a interação entre as variáveis <code>Price</code> e <code>Urban</code> da seguinte forma:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">fit</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">lm</span><span class="p">(</span><span class="n">Sales</span> <span class="o">~</span> <span class="err">.</span> <span class="o">+</span> <span class="n">Price</span><span class="o">*</span><span class="n">Urban</span><span class="p">,</span> <span class="n">data</span> <span class="o">=</span> <span class="n">Carseats</span><span class="p">)</span>
<span class="n">summary</span><span class="p">(</span><span class="n">fit</span><span class="p">)</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">## 
## Call:
## lm(formula = Sales ~ . + Price * Urban, data = Carseats)
## 
## Residuals:
##     Min      1Q  Median      3Q     Max 
## -2.8723 -0.7011  0.0298  0.6723  3.3937 
## 
## Coefficients:
##                   Estimate Std. Error t value Pr(&amp;gt;|t|)  &lt;br /&gt;
## (Intercept)      5.5386942  0.7371346   7.514 4.02e-13 &lt;strong&gt;*
## CompPrice        0.0928744  0.0041576  22.338  &amp;lt; 2e-16 ***
## Income           0.0157950  0.0018475   8.549 2.91e-16 ***
## Advertising      0.1233524  0.0111724  11.041  &amp;lt; 2e-16 ***
## Population       0.0002072  0.0003709   0.559    0.577  &lt;br /&gt;
## Price           -0.0943707  0.0043411 -21.739  &amp;lt; 2e-16 ***
## ShelveLocGood    4.8492903  0.1533223  31.628  &amp;lt; 2e-16 ***
## ShelveLocMedium  1.9557229  0.1263016  15.485  &amp;lt; 2e-16 ***
## Age             -0.0461214  0.0031964 -14.429  &amp;lt; 2e-16 ***
## Education       -0.0206165  0.0198153  -1.040    0.299  &lt;br /&gt;
## UrbanYes         0.2845509  0.5712614   0.498    0.619  &lt;br /&gt;
## USYes           -0.1855349  0.1501027  -1.236    0.217  &lt;br /&gt;
## Price:UrbanYes  -0.0014091  0.0048808  -0.289    0.773  &lt;br /&gt;
## —
## Signif. codes:  0 ‘&lt;/strong&gt;&lt;em&gt;’ 0.001 ‘**’ 0.01 ‘&lt;/em&gt;’ 0.05 ‘.’ 0.1 ‘ ‘ 1
## 
## Residual standard error: 1.02 on 387 degrees of freedom
## Multiple R-squared:  0.8734,	Adjusted R-squared:  0.8695 
## F-statistic: 222.6 on 12 and 387 DF,  p-value: &amp;lt; 2.2e-16</code></pre></div></p>

<p>Um detalhe importante é que esse tipo de interação não funciona quando o objetivo é elevar uma variável contínuo ao quadrado. Por exemplo: <code>Price * Price</code> ou <code>Price^2</code>. Para conseguir obter o resultado pretendido usamos o <code>I(.)</code>.</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">fit</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">lm</span><span class="p">(</span><span class="n">Sales</span> <span class="o">~</span> <span class="err">.</span> <span class="o">+</span> <span class="n">I</span><span class="p">(</span><span class="n">Price</span><span class="o">^</span><span class="m">2</span><span class="p">),</span> <span class="n">data</span> <span class="o">=</span> <span class="n">Carseats</span><span class="p">,</span> <span class="n">x</span> <span class="o">=</span> <span class="n">TRUE</span><span class="p">)</span>
<span class="n">summary</span><span class="p">(</span><span class="n">fit</span><span class="p">)</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">## 
## Call:
## lm(formula = Sales ~ . + I(Price^2), data = Carseats, x = TRUE)
## 
## Residuals:
##     Min      1Q  Median      3Q     Max 
## -2.8593 -0.7138  0.0228  0.6729  3.3583 
## 
## Coefficients:
##                   Estimate Std. Error t value Pr(&amp;gt;|t|)  &lt;br /&gt;
## (Intercept)      6.247e+00  9.648e-01   6.475 2.87e-10 &lt;strong&gt;*
## CompPrice        9.296e-02  4.154e-03  22.379  &amp;lt; 2e-16 ***
## Income           1.578e-02  1.846e-03   8.545 3.01e-16 ***
## Advertising      1.232e-01  1.113e-02  11.070  &amp;lt; 2e-16 ***
## Population       2.133e-04  3.707e-04   0.575    0.565  &lt;br /&gt;
## Price           -1.060e-01  1.392e-02  -7.618 2.00e-13 ***
## ShelveLocGood    4.845e+00  1.533e-01  31.602  &amp;lt; 2e-16 ***
## ShelveLocMedium  1.957e+00  1.262e-01  15.513  &amp;lt; 2e-16 ***
## Age             -4.593e-02  3.187e-03 -14.412  &amp;lt; 2e-16 ***
## Education       -2.296e-02  1.987e-02  -1.155    0.249  &lt;br /&gt;
## UrbanYes         1.196e-01  1.131e-01   1.057    0.291  &lt;br /&gt;
## USYes           -1.793e-01  1.500e-01  -1.195    0.233  &lt;br /&gt;
## I(Price^2)       4.638e-05  5.948e-05   0.780    0.436  &lt;br /&gt;
## —
## Signif. codes:  0 ‘&lt;/strong&gt;&lt;em&gt;’ 0.001 ‘**’ 0.01 ‘&lt;/em&gt;’ 0.05 ‘.’ 0.1 ‘ ‘ 1
## 
## Residual standard error: 1.019 on 387 degrees of freedom
## Multiple R-squared:  0.8736,	Adjusted R-squared:  0.8697 
## F-statistic: 222.9 on 12 and 387 DF,  p-value: &amp;lt; 2.2e-16</code></pre></div></p>

<h2 id="realizando-predies">Realizando predições</h2>

<p>Concluindo essa primeira explanação sobre modelos no R, vamos falar sobre predições. No caso, da função <code>predict()</code>. Como o <code>summary()</code>, a função <code>predict()</code> é uma função genérica. Isto significa que ela se adapta ao objeto que está sendo passado para função. Isto é, ela não é exclusiva da função <code>lm()</code>, podendo ser utilizada com outros modelos.</p>

<p>Vamos separar os dados em dois grupos, um para estimar o modelo e outro para realizar as predições. No desenvolvimento de modelos de aprendizado de máquina (<em>machine learning</em>) esses grupos são chamados, respectivamente, de grupo de treinamento e grupo de teste.</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="c1"># Número de observações</span>
<span class="n">N</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">nrow</span><span class="p">(</span><span class="n">Carseats</span><span class="p">)</span> 
<span class="c1"># Fixar a seed para reproduzir os resultados</span>
<span class="n">set.seed</span><span class="p">(</span><span class="m">3943</span><span class="p">)</span>
<span class="c1"># índices para separar dados de treinamento/teste</span>
<span class="n">idx</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">sample</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="n">N</span><span class="p">,</span> <span class="n">round</span><span class="p">(</span><span class="m">0.8</span><span class="o">*</span><span class="n">N</span><span class="p">),</span> <span class="n">replace</span> <span class="o">=</span> <span class="n">FALSE</span><span class="p">)</span>
<span class="c1"># Base de dados de treinamento </span>
<span class="n">Carseats.train</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">Carseats</span><span class="p">[</span><span class="n">idx</span><span class="p">,]</span>
<span class="c1"># Base de dados de teste</span>
<span class="c1"># As linhas que estão listadas no objeto idx são excluídas</span>
<span class="n">Carseats.test</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">Carseats</span><span class="p">[</span><span class="o">-</span><span class="n">idx</span><span class="p">,]</span>
<span class="c1"># Estima o modelo</span>
<span class="n">fit</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">lm</span><span class="p">(</span><span class="n">Sales</span> <span class="o">~</span> <span class="err">.</span><span class="p">,</span> <span class="n">data</span> <span class="o">=</span> <span class="n">Carseats.train</span><span class="p">)</span>
<span class="c1"># Predição a partir do modelo estimado</span>
<span class="n">pred</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">predict</span><span class="p">(</span><span class="n">object</span> <span class="o">=</span> <span class="n">fit</span><span class="p">,</span> <span class="n">newdata</span> <span class="o">=</span> <span class="n">Carseats.test</span><span class="p">)</span>
<span class="n">head</span><span class="p">(</span><span class="n">pred</span><span class="p">)</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##         3         7        14        15        22        25 
##  9.229138  6.157952 11.786486  9.517201 11.078857 10.037942</code></pre></div></p>

<p>Um fato importante sobre o argumento <code>newdata</code> é que é necessário que ele possua todas as variáveis que estão no modelo original. Se mais variáveis forem providas, elas serão desconsideradas pela função.</p>

<h2 id="diagnsticos">Diagnósticos</h2>

<p>Após a estimação do modelo, é comum verificar se algumas hipóteses realmente são válidas. Uma maneira informal de se fazer isso é checar alguns gráficos. O R fornece uma série de diagnósticos ao passar o objeto que contém o modelo estimado (<code>fit</code> no nosso caso) na função <code>plot()</code>.</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">plot</span><span class="p">(</span><span class="n">fit</span><span class="p">)</span></code></pre></div></p>

<p><img src="/figures/source/2016-06-06-intro-modelos-r/unnamed-chunk-22-1.png" alt="plot of chunk unnamed-chunk-22" /><img src="/figures/source/2016-06-06-intro-modelos-r/unnamed-chunk-22-2.png" alt="plot of chunk unnamed-chunk-22" /><img src="/figures/source/2016-06-06-intro-modelos-r/unnamed-chunk-22-3.png" alt="plot of chunk unnamed-chunk-22" /><img src="/figures/source/2016-06-06-intro-modelos-r/unnamed-chunk-22-4.png" alt="plot of chunk unnamed-chunk-22" /></p>

<p>A função retornará 4 gráficos que auxiliarão a análise sobre a violação de alguma hipótese. Testes formais também podem ser realizados, mas vamos nos restringir aqui a essa análise gráfica.</p>

<p>O primeiro plot (canto superior esquerdo) tem o objetivo de identificar a possível existência de não-linearidade nos dados.</p>

<p>O segundo gráfico tenta evidenciar se o resíduos são normalmente distribuídos. Se os valores se afastam da linha traçada, é sinal de não-normalidade dos resíduos.</p>

<p>O terceiro plot (canto inferior esquerdo) dá um indicativo sobre a violação ou não da hipótese de homocedasticidade (variância constante do termo aleatório). Quanto mais horizontal for a linha vermelha, mais forte é a evidência de homocedasticidade.</p>

<p>Por último, o quarto gráfico auxilia a identificação de pontos (valores extremos ou <em>outliers</em>) que influenciam consideravelmente a reta de regressão. Nem todo <em>outlier</em> afetará a reta, mas aqueles que alteram podem afetar consideravelmente o poder de generalização do modelo. Assim, pode ser necessário excluí-los do processo de estimação do modelo.</p>

<p>No nosso caso, os limites calculados para identificação de outliers não aparecem no gráfico, indicando que não há valores extremos que estão influenciando a reta estimada. No entanto, caso esse limite apareça e algum ponto esteja além desse limite, há indicação de que aquele ponto pode estar exercendo influência sobre a reta.</p>

<p>Para testes formais, dê uma olhada no pacote <code>lmtest</code>.</p>

<h2 id="interpretando-os-resultados-e-consideraes-finais">Interpretando os resultados e considerações finais</h2>

<p>Nosso objetivo com esse post foi explicar o uso básico de modelos no R com a função <code>lm()</code>. Interpretar os resultados de um modelo envolvem alguns conceitos estatísticos que talvez mereçam posts específicos.</p>

<p>Porém, para ajudar no entendimento e dar mais sentido à alguns detalhes do <code>summary()</code> usado para ver resultados de um modelo, segue alguns links com ótimas explicações de como entender e interpretar modelos.</p>

<ul>
  <li><a href="http://www.theanalysisfactor.com/interpreting-regression-coefficients/">Interpreting Regression Coefficients</a></li>
  <li><a href="http://blog.yhat.com/posts/r-lm-summary.html">Interpreting Linear Models in R</a></li>
  <li><a href="https://rstudio-pubs-static.s3.amazonaws.com/119859_a290e183ff2f46b2858db66c3bc9ed3a.html">Interpreting Simple Linear Model Output in R</a></li>
  <li><a href="https://pt.wikipedia.org/wiki/Desvio_padr%C3%A3o">Desvio Padrão</a></li>
  <li><a href="https://pt.wikipedia.org/wiki/Valor-p">P-Valor</a></li>
</ul>

<p>A ideia até aqui é que tenha sido quebrada a primeira barreira e que você já consiga estimar o modelo de regressão linear no R.</p>

<p>Provavelmente, você necessitará usar outros modelos nas suas análises, mas entender como funciona o modelo linear já é uma grande ajuda para estimação de diversos outros modelos.</p>

<p>Como dito, esse é um assunto que merece diversos outros posts mais detalhados e específicos, e eles virão com o tempo. Até lá, deixe seu comentário com sugestões ou dúvidas para que possamos ajudar!</p>

<h2 id="referncias">Referências</h2>

<ul>
  <li><a href="http://data.princeton.edu/R/linearModels.html">Linear Models</a></li>
  <li><a href="http://www.statmethods.net/stats/regression.html">Multiple (Linear) Regression</a></li>
  <li><a href="http://www.montefiore.ulg.ac.be/~kvansteen/GBIO0009-1/ac20092010/Class8/Using%20R%20for%20linear%20regression.pdf">Using R for Linear Regression</a></li>
  <li><a href="http://www.statmethods.net/stats/rdiagnostics.html">Regression Diagnostics</a></li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tudo sobre Joins (merge) em R]]></title>
    <link href="http://fulljoin.com.br/blog/2016/05/25/tudo-sobre-joins/"/>
    <updated>2016-05-25T21:00:00-03:00</updated>
    <id>http://fulljoin.com.br/blog/2016/05/25/tudo-sobre-joins</id>
    <content type="html"><![CDATA[<p>Nessa sequência de posts aprenderemos tudo sobre Joins (merges) em R, abordando questões teóricas e práticas, com exemplos usando R base e o pacote dplyr. Após ler esse post, você vai saber o que é, para que serve, quando e como usar diversos tipo de joins.</p>

<!-- More -->

<p>Join é um conceito bastante comum para quem já trabalha com bancos de dados (principalmente com SQL). Porém, para quem está se desenvolvendo em Análise de Dados sem um background em programação de sistemas, talvez esse conceito não seja básico.</p>

<h2 id="afinal-o-que--join-ou-merge">Afinal, o que é Join (ou merge)?</h2>

<p>Nada mais é do que juntar dois conjuntos de dados por meio de um ou mais campos em comum. Esses campos em comum são geralmente chamados de chaves.</p>

<p>Existem vários tipos de joins, dos mais simples aos mais complexos, cada um com sua utilidade e momento certo de uso. Além disso existem várias questões que devem ser observadas no uso de joins, como a granularidade dos dados e ocorrência das amostras nos dois conjuntos de dados.</p>

<h2 id="por-que-usar-joins">Por que usar joins?</h2>

<p>Se você é novo no mundo da manipulação de dados, talvez já tenha se perguntado: “De onde vem essa necessidade de usar joins? Por que insistem em usar tantos códigos e separar os dados uns dos outros em tabelas e arquivos diferentes? Por que não simplificar as coisas?”.</p>

<p>Pois saiba que o uso dos joins é uma consequência direta de uma boa prática imposta pelos bancos de dados relacionais: a normalização. Normalização são “regras” para estruturar seus dados de forma que eles ocupem o menor espaço possível e fiquem bastante consistentes na hora de inserir, alterar ou excluir dados.</p>

<p>No entanto, essas regras adicionam complexidade à estrutura dos dados, e graças a essa complexidade estrutural que surge a necessidade dos joins: juntar dados separados num lugar só.</p>

<p>Em um conjunto de dados normalizado (praticamente TODOS originados de sistemas), existe o conceito de chave: um código que representa uma ocorrência de forma única e inconfundível. Exemplos intuitivos de chave seriam o CPF, o CNPJ, código de um produto, o título de eleitor, etc…</p>

<p>Existem vários tipos de chaves (chave natural, surrogate, chave estrangeira, etc…), mas não vamos entrar nesse nível de detalhe. Para aprofundar mais sobre isso, sugiro <a href="http://www.programmerinterview.com/index.php/database-sql/differences-between-primary-and-foreign-keys/">essa leitura</a>.</p>

<p>Apenas mais uma observação: Os termos e conceitos usados a seguir são originários do mundo dos bancos de dados e SQL, mas, acredite, vale muito a pena conhecer os termos. Portanto, não se assuste! Os conceitos e a utilidade dos tipos de junções são mais importantes do que as nomenclaturas.</p>

<blockquote>
  <p>Dica: se você tem familiaridade com Excel, join nada mais é do que o famoso PROCV().</p>
</blockquote>

<h2 id="inner-join-ou-apenas-join">Inner join (ou apenas join)</h2>

<p>Trata-se do join mais simples, mais básico e mais usado dentre todos os outros tipos. Vamos explicar com um exemplo bem simples. Primeiro, vamos montar o conjunto de dados e carregar o pacote <code>dplyr</code>:</p>

<ul>
  <li><code>empregados</code>, com id, nome, idade, uf e id de um cargo</li>
</ul>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">library</span><span class="p">(</span><span class="n">dplyr</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">id.empregado</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="m">1</span><span class="o">:</span><span class="m">11</span>
<span class="n">nome.empregado</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">c</span><span class="p">(</span><span class="err">‘</span><span class="n">Renato</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">Miguel</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">Paulo</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">Patr</span><span class="err">í</span><span class="n">cia</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">In</span><span class="err">ê</span><span class="n">s</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">Saulo</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">Diego</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">Maria</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">Jose</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">Julia</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">Tiago</span><span class="err">’</span><span class="p">)</span>
<span class="n">idade</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">c</span><span class="p">(</span><span class="m">30</span><span class="p">,</span> <span class="m">31</span><span class="p">,</span> <span class="m">29</span><span class="p">,</span> <span class="m">30</span><span class="p">,</span> <span class="m">25</span><span class="p">,</span> <span class="m">30</span><span class="p">,</span> <span class="m">30</span><span class="p">,</span> <span class="m">35</span><span class="p">,</span> <span class="m">24</span><span class="p">,</span> <span class="m">31</span><span class="p">,</span> <span class="m">29</span><span class="p">)</span>
<span class="n">uf</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">c</span><span class="p">(</span><span class="err">‘</span><span class="n">MG</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">DF</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">CE</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">DF</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">DF</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">DF</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">RJ</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">SP</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">RS</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">SC</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">BA</span><span class="err">’</span><span class="p">)</span>
<span class="n">id.cargo</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">c</span><span class="p">(</span><span class="m">4</span><span class="p">,</span> <span class="m">4</span><span class="p">,</span> <span class="m">4</span><span class="p">,</span> <span class="m">4</span><span class="p">,</span> <span class="m">5</span><span class="p">,</span> <span class="m">4</span><span class="p">,</span> <span class="m">6</span><span class="p">,</span> <span class="m">3</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">8</span><span class="p">)</span>
<span class="p">(</span><span class="n">empregados</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">data.frame</span><span class="p">(</span><span class="n">id.empregado</span><span class="p">,</span> <span class="n">nome.empregado</span><span class="p">,</span> <span class="n">idade</span><span class="p">,</span> <span class="n">uf</span><span class="p">,</span> <span class="n">id.cargo</span><span class="p">))</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##    id.empregado nome.empregado idade uf id.cargo
## 1             1         Renato    30 MG        4
## 2             2         Miguel    31 DF        4
## 3             3          Paulo    29 CE        4
## 4             4       Patrícia    30 DF        4
## 5             5           Inês    25 DF        5
## 6             6          Saulo    30 DF        4
## 7             7          Diego    30 RJ        6
## 8             8          Maria    35 SP        3
## 9             9           Jose    24 RS        1
## 10           10          Julia    31 SC        2
## 11           11          Tiago    29 BA        8</code></pre></div></p>

<ul>
  <li><code>cargos</code>, com id, nome, e salário do cargo</li>
</ul>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">id.cargo</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="m">1</span><span class="o">:</span><span class="m">7</span>
<span class="n">nome.cargo</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">c</span><span class="p">(</span><span class="err">‘</span><span class="n">T</span><span class="err">é</span><span class="n">cnico</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">Assistente</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">Consultor</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">Analista</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">Auditor</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">Gerente</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">Gestor</span><span class="err">’</span><span class="p">)</span>
<span class="n">salario</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">c</span><span class="p">(</span><span class="m">7000</span><span class="p">,</span> <span class="m">4000</span><span class="p">,</span> <span class="m">15000</span><span class="p">,</span> <span class="m">11000</span><span class="p">,</span> <span class="m">10000</span><span class="p">,</span> <span class="m">13000</span><span class="p">,</span> <span class="m">20000</span><span class="p">)</span>
<span class="p">(</span><span class="n">cargos</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">data.frame</span><span class="p">(</span><span class="n">id.cargo</span><span class="p">,</span> <span class="n">nome.cargo</span><span class="p">,</span> <span class="n">salario</span><span class="p">))</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##   id.cargo nome.cargo salario
## 1        1    Técnico    7000
## 2        2 Assistente    4000
## 3        3  Consultor   15000
## 4        4   Analista   11000
## 5        5    Auditor   10000
## 6        6    Gerente   13000
## 7        7     Gestor   20000</code></pre></div></p>

<p>Imagine que você recebeu essas dois conjuntos de dados será necessário calcular uma média salarial dos empregados por UF.</p>

<p>Se olharmos apenas <code>empregados</code>, cada ocorrência possui um código de cargo que ocupa, mas não temos nem o nome nem o salário do cargo. Se olharmos apenas <code>cargos</code>, cada ocorrência possui código de cargo mas não informações de quem o ocupa.</p>

<p>Para calcular a média por UF, precisaremos juntar esses dois conjuntos. Nesse caso, faremos isso usando o <em>INNER JOIN</em>.</p>

<p>Esse tipo de join cria um data frame com todos os campos de ambos conjuntos, mas  retornando somente as ocorrências (linhas) que possuem chaves iguais. Nossa chave é o campo <code>id.cargo</code>. Veja:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="p">(</span><span class="n">merge.r.base</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">merge</span><span class="p">(</span><span class="n">empregados</span><span class="p">,</span> <span class="n">cargos</span><span class="p">))</span> <span class="c1"># inner join com R Base</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##    id.cargo id.empregado nome.empregado idade uf nome.cargo salario
## 1         1            9           Jose    24 RS    Técnico    7000
## 2         2           10          Julia    31 SC Assistente    4000
## 3         3            8          Maria    35 SP  Consultor   15000
## 4         4            1         Renato    30 MG   Analista   11000
## 5         4            2         Miguel    31 DF   Analista   11000
## 6         4            4       Patrícia    30 DF   Analista   11000
## 7         4            6          Saulo    30 DF   Analista   11000
## 8         4            3          Paulo    29 CE   Analista   11000
## 9         5            5           Inês    25 DF    Auditor   10000
## 10        6            7          Diego    30 RJ    Gerente   13000</code></pre></div></p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="p">(</span><span class="n">join.dplyr</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">inner_join</span><span class="p">(</span><span class="n">empregados</span><span class="p">,</span> <span class="n">cargos</span><span class="p">))</span> <span class="c1"># inner join com Dplyr</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##    id.empregado nome.empregado idade uf id.cargo nome.cargo salario
## 1             1         Renato    30 MG        4   Analista   11000
## 2             2         Miguel    31 DF        4   Analista   11000
## 3             3          Paulo    29 CE        4   Analista   11000
## 4             4       Patrícia    30 DF        4   Analista   11000
## 5             5           Inês    25 DF        5    Auditor   10000
## 6             6          Saulo    30 DF        4   Analista   11000
## 7             7          Diego    30 RJ        6    Gerente   13000
## 8             8          Maria    35 SP        3  Consultor   15000
## 9             9           Jose    24 RS        1    Técnico    7000
## 10           10          Julia    31 SC        2 Assistente    4000</code></pre></div></p>

<blockquote>
  <p>Dica: coloque parênteses entre as atribuições e o R mostrará o resultado dela imediatamente</p>
</blockquote>

<p>Repare que nenhuma pessoa tem o cargo de <code>id.cargo</code> 7, então o cargo <code>Gestor</code> não aparece no conjunto final já que não há chave igual. Repare também que a pessoa <code>Tiago</code> possui <code>id.cargo</code> 8, que não é igual a nenhum cargo, então ele também não aparece.</p>

<p>Tanto o <code>merge()</code> do R base quanto o <code>inner_join()</code> do dplyr tentam descobrir as chaves em comum buscando campos com o mesmo nome. Mas vamos supor que os campos chave tivessem nomes diferentes (o que é bem comum!). Para simular, trocaremos o nome <code>id.cargo</code> em <code>cargos</code>:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">names</span><span class="p">(</span><span class="n">cargos</span><span class="p">)</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">c</span><span class="p">(</span><span class="err">“</span><span class="n">cargo</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">nome.cargo</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">salario</span><span class="err">”</span><span class="p">)</span> 
<span class="p">(</span><span class="n">merge.r.base</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">merge</span><span class="p">(</span><span class="n">empregados</span><span class="p">,</span> <span class="n">cargos</span><span class="p">,</span> <span class="n">by.x</span> <span class="o">=</span> <span class="err">“</span><span class="n">id.cargo</span><span class="err">”</span><span class="p">,</span> <span class="n">by.y</span> <span class="o">=</span> <span class="err">“</span><span class="n">cargo</span><span class="err">”</span><span class="p">))</span> <span class="c1"># inner join com R Base, com nomes de chaves diferentes</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##    id.cargo id.empregado nome.empregado idade uf nome.cargo salario
## 1         1            9           Jose    24 RS    Técnico    7000
## 2         2           10          Julia    31 SC Assistente    4000
## 3         3            8          Maria    35 SP  Consultor   15000
## 4         4            1         Renato    30 MG   Analista   11000
## 5         4            2         Miguel    31 DF   Analista   11000
## 6         4            4       Patrícia    30 DF   Analista   11000
## 7         4            6          Saulo    30 DF   Analista   11000
## 8         4            3          Paulo    29 CE   Analista   11000
## 9         5            5           Inês    25 DF    Auditor   10000
## 10        6            7          Diego    30 RJ    Gerente   13000</code></pre></div></p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="p">(</span><span class="n">join.dplyr</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">inner_join</span><span class="p">(</span><span class="n">empregados</span><span class="p">,</span> <span class="n">cargos</span><span class="p">,</span> <span class="n">by</span> <span class="o">=</span> <span class="n">c</span><span class="p">(</span><span class="err">“</span><span class="n">id.cargo</span><span class="err">”</span> <span class="o">=</span> <span class="err">“</span><span class="n">cargo</span><span class="err">”</span><span class="p">)))</span> <span class="c1"># inner join com Dplyr com nomes de chaves diferentes</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##    id.empregado nome.empregado idade uf id.cargo nome.cargo salario
## 1             1         Renato    30 MG        4   Analista   11000
## 2             2         Miguel    31 DF        4   Analista   11000
## 3             3          Paulo    29 CE        4   Analista   11000
## 4             4       Patrícia    30 DF        4   Analista   11000
## 5             5           Inês    25 DF        5    Auditor   10000
## 6             6          Saulo    30 DF        4   Analista   11000
## 7             7          Diego    30 RJ        6    Gerente   13000
## 8             8          Maria    35 SP        3  Consultor   15000
## 9             9           Jose    24 RS        1    Técnico    7000
## 10           10          Julia    31 SC        2 Assistente    4000</code></pre></div></p>

<p>No R base usamos <code>by.x</code> e <code>by.y</code> para especificar o nome do campo chave do primeiro e segundo data.frame. No <code>inner_join()</code> do dplyr usamos um vetor no formato <code>c("chave.x" = "chave.y")</code>.</p>

<p>Resumindo, o inner join retorna todos os campos de ambos os data.frames, mas somente as linhas em que as chaves são iguais.</p>

<h2 id="outer-join">Outer join</h2>

<p>O inner join despreza os registros de ambos os data.frames onde as chaves não coincidem. Mas existem situações em que esse descarte de registro não é interessante. Nesses casos usamos Outer join.</p>

<p>Existem 3 tipos básicos de outer join: full outer join (ou apenas full join), left outer join (ou só left join) e o right outer join (ou só right join).</p>

<p>Vejamos o seguinte exemplo:</p>

<ul>
  <li><code>pacientes</code>, com id do paciente, nome abreviado, e resultados de exame A, B e C</li>
</ul>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">id.paciente</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="m">1</span><span class="o">:</span><span class="m">9</span>
<span class="n">nome.abreviado</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">c</span><span class="p">(</span><span class="err">“</span><span class="n">A.A.M</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">S.S.G.F</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">T.I.A</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">L.O.S.M</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">Y.Q.W</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">F.A</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">T.B.N</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">J.J.L</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">M.S.S</span><span class="err">”</span><span class="p">)</span>
<span class="n">exame.a</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">c</span><span class="p">(</span><span class="m">3.8</span><span class="p">,</span> <span class="m">3.8</span><span class="p">,</span> <span class="m">3.9</span><span class="p">,</span> <span class="m">4.0</span><span class="p">,</span> <span class="m">4.4</span><span class="p">,</span> <span class="m">3.8</span><span class="p">,</span> <span class="m">3.7</span><span class="p">,</span> <span class="m">3.6</span><span class="p">,</span> <span class="m">4.0</span><span class="p">)</span>
<span class="n">exame.b</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">c</span><span class="p">(</span><span class="m">109.98</span><span class="p">,</span> <span class="m">109.90</span><span class="p">,</span> <span class="m">109.89</span><span class="p">,</span> <span class="m">109.99</span><span class="p">,</span> <span class="m">110.01</span><span class="p">,</span> <span class="m">109.95</span><span class="p">,</span> <span class="m">109.98</span><span class="p">,</span> <span class="m">109.93</span><span class="p">,</span> <span class="m">110.00</span><span class="p">)</span>
<span class="n">exame.c</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">c</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">1</span><span class="p">)</span>
<span class="n">pacientes</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">data.frame</span><span class="p">(</span><span class="n">id.paciente</span><span class="p">,</span> <span class="n">nome.abreviado</span><span class="p">,</span> <span class="n">exame.a</span><span class="p">,</span> <span class="n">exame.b</span><span class="p">,</span> <span class="n">exame.c</span><span class="p">)</span>
<span class="n">pacientes</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##   id.paciente nome.abreviado exame.a exame.b exame.c
## 1           1          A.A.M     3.8  109.98       0
## 2           2        S.S.G.F     3.8  109.90       1
## 3           3          T.I.A     3.9  109.89       1
## 4           4        L.O.S.M     4.0  109.99       0
## 5           5          Y.Q.W     4.4  110.01       1
## 6           6            F.A     3.8  109.95       1
## 7           7          T.B.N     3.7  109.98       0
## 8           8          J.J.L     3.6  109.93       0
## 9           9          M.S.S     4.0  110.00       1</code></pre></div></p>

<ul>
  <li><code>controle</code>, com id do paciente, e o tipo de remédio que tomou</li>
</ul>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">id.paciente</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">c</span><span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="m">4</span><span class="p">,</span> <span class="m">5</span><span class="p">,</span> <span class="m">7</span><span class="p">,</span> <span class="m">8</span><span class="p">,</span> <span class="m">11</span><span class="p">,</span> <span class="m">15</span><span class="p">,</span> <span class="m">25</span><span class="p">)</span>
<span class="n">tipo.remedio</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">c</span><span class="p">(</span><span class="err">“</span><span class="n">A</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">B</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">A</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">B</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">A</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">A</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">B</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">B</span><span class="err">”</span><span class="p">)</span>
<span class="n">controle</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">data.frame</span><span class="p">(</span><span class="n">id.paciente</span><span class="p">,</span> <span class="n">tipo.remedio</span><span class="p">)</span>
<span class="n">controle</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##   id.paciente tipo.remedio
## 1           1            A
## 2           4            B
## 3           5            A
## 4           7            B
## 5           8            A
## 6          11            A
## 7          15            B
## 8          25            B</code></pre></div></p>

<p>Em <code>pacientes</code> temos uma lista de pessoas hospitalizadas com uma mesma doença e o resultado de seus exames. Em <code>controle</code> temos uma lista controlada de pessoas que participaram de um experimento tomando tipo A e tipo B de um remédio.</p>

<p>Você precisa montar um conjunto consolidado para avaliar o se houve impacto dos remédios nos exames dos pacientes hospitalizados, para isso, precisa comparar o exame dos que tomaram remédio e dos que não tomaram. Mas nesse caso queremos um join que preserve todos os registros dos <code>pacientes</code>, e queremos desprezar os registros de <code>controle</code> que não correspondem a pacientes hospitalizados.</p>

<h3 id="left-outer-join-left-join">Left outer join (Left join)</h3>

<p>Portanto, usaremos o left outer join (ou simplesmente left join):</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="p">(</span><span class="n">left.join.r.base</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">merge</span><span class="p">(</span><span class="n">pacientes</span><span class="p">,</span> <span class="n">controle</span><span class="p">,</span> <span class="n">all.x</span> <span class="o">=</span> <span class="n">TRUE</span><span class="p">))</span> <span class="c1"># left join com R base</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##   id.paciente nome.abreviado exame.a exame.b exame.c tipo.remedio
## 1           1          A.A.M     3.8  109.98       0            A
## 2           2        S.S.G.F     3.8  109.90       1         &lt;na&gt;
## 3           3          T.I.A     3.9  109.89       1         &lt;na&gt;
## 4           4        L.O.S.M     4.0  109.99       0            B
## 5           5          Y.Q.W     4.4  110.01       1            A
## 6           6            F.A     3.8  109.95       1         &lt;na&gt;
## 7           7          T.B.N     3.7  109.98       0            B
## 8           8          J.J.L     3.6  109.93       0            A
## 9           9          M.S.S     4.0  110.00       1         &lt;na&gt;</code></pre></div></na></na></na></na></p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="p">(</span><span class="n">left.join.dplyr</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">left_join</span><span class="p">(</span><span class="n">pacientes</span><span class="p">,</span> <span class="n">controle</span><span class="p">))</span> <span class="c1"># left join com dplyr</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##   id.paciente nome.abreviado exame.a exame.b exame.c tipo.remedio
## 1           1          A.A.M     3.8  109.98       0            A
## 2           2        S.S.G.F     3.8  109.90       1         &lt;na&gt;
## 3           3          T.I.A     3.9  109.89       1         &lt;na&gt;
## 4           4        L.O.S.M     4.0  109.99       0            B
## 5           5          Y.Q.W     4.4  110.01       1            A
## 6           6            F.A     3.8  109.95       1         &lt;na&gt;
## 7           7          T.B.N     3.7  109.98       0            B
## 8           8          J.J.L     3.6  109.93       0            A
## 9           9          M.S.S     4.0  110.00       1         &lt;na&gt;</code></pre></div></na></na></na></na></p>

<p>Repare que nos resultados temos todos os campos de <code>pacientes</code> e <code>controle</code> e temos também todos registros de <code>pacientes</code>. Quando não há ocorrência da chave <code>id.paciente</code> em <code>controle</code>, é colocado um <code>NA</code> no campo.</p>

<p>Chama-se LEFT outer join pois o “conjunto da esquerda”, <code>pacientes</code>, deve prevalecer além da interseção. Ou seja, retorna todos os registros onde as chaves são iguais com todos os campos preenchidos dos dois conjuntos, mas também retorna os registros onde as chaves não são iguais sem valor para os campos do conjunto à direita.</p>

<h3 id="right-outer-join-right-join">Right outer join (Right join)</h3>

<p>O princípio é EXATAMENTE o mesmo do left join. A única diferença é a permanência dos registros do conjunto da direita. Vamos simular o mesmo resultado, usando right join, apenas mudando os conjuntos de lugar na chamada da função:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="p">(</span><span class="n">right.join.r.base</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">merge</span><span class="p">(</span><span class="n">controle</span><span class="p">,</span> <span class="n">pacientes</span><span class="p">,</span> <span class="n">all.y</span> <span class="o">=</span> <span class="n">TRUE</span><span class="p">))</span> <span class="c1"># left join com R base</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##   id.paciente tipo.remedio nome.abreviado exame.a exame.b exame.c
## 1           1            A          A.A.M     3.8  109.98       0
## 2           2         &lt;na&gt;        S.S.G.F     3.8  109.90       1
## 3           3         &lt;na&gt;          T.I.A     3.9  109.89       1
## 4           4            B        L.O.S.M     4.0  109.99       0
## 5           5            A          Y.Q.W     4.4  110.01       1
## 6           6         &lt;na&gt;            F.A     3.8  109.95       1
## 7           7            B          T.B.N     3.7  109.98       0
## 8           8            A          J.J.L     3.6  109.93       0
## 9           9         &lt;na&gt;          M.S.S     4.0  110.00       1</code></pre></div></na></na></na></na></p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="p">(</span><span class="n">right.join.dplyr</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">right_join</span><span class="p">(</span><span class="n">controle</span><span class="p">,</span> <span class="n">pacientes</span><span class="p">))</span> <span class="c1"># left join com dplyr</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##   id.paciente tipo.remedio nome.abreviado exame.a exame.b exame.c
## 1           1            A          A.A.M     3.8  109.98       0
## 2           2         &lt;na&gt;        S.S.G.F     3.8  109.90       1
## 3           3         &lt;na&gt;          T.I.A     3.9  109.89       1
## 4           4            B        L.O.S.M     4.0  109.99       0
## 5           5            A          Y.Q.W     4.4  110.01       1
## 6           6         &lt;na&gt;            F.A     3.8  109.95       1
## 7           7            B          T.B.N     3.7  109.98       0
## 8           8            A          J.J.L     3.6  109.93       0
## 9           9         &lt;na&gt;          M.S.S     4.0  110.00       1</code></pre></div></na></na></na></na></p>

<p>Temos o mesmo conteúdo, apenas mudando a ordem dos data.frames e ajustando alguns parâmetros na função.</p>

<p>Tanto o left quanto o right join são usados pra preservar todos os registros de apenas “um lado” do join, trazendo os demais campos do outro conjunto como vazio, e preenchido apenas os registros em que as chaves forem iguais.</p>

<h3 id="full-outer-join-full-join">Full outer join (Full join)</h3>

<p>Há situações em que é necessário preservar todos os registros de ambos os conjuntos de dados. Vamos testar o seguinte exemplo:</p>

<ul>
  <li><code>exportacoes</code>, com produto e valor exportado</li>
</ul>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">produto</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">c</span><span class="p">(</span><span class="err">“</span><span class="n">A</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">C</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">D</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">H</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">I</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">J</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">K</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">O</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">Y</span><span class="err">”</span><span class="p">)</span>
<span class="n">valor</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">c</span><span class="p">(</span><span class="m">993801</span><span class="p">,</span> <span class="m">1829300</span><span class="p">,</span> <span class="m">833952</span><span class="p">,</span> <span class="m">775831</span><span class="p">,</span> <span class="m">59143</span><span class="p">,</span> <span class="m">1192920</span><span class="p">,</span> <span class="m">6938018</span><span class="p">,</span> <span class="m">2927318</span><span class="p">,</span> <span class="m">393178</span><span class="p">)</span>
<span class="p">(</span><span class="n">exportacoes</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">data.frame</span><span class="p">(</span><span class="n">produto</span><span class="p">,</span> <span class="n">valor</span><span class="p">))</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##   produto   valor
## 1       A  993801
## 2       C 1829300
## 3       D  833952
## 4       H  775831
## 5       I   59143
## 6       J 1192920
## 7       K 6938018
## 8       O 2927318
## 9       Y  393178</code></pre></div></p>

<ul>
  <li><code>importacoes</code>, com produto e valor importado</li>
</ul>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">produto</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">c</span><span class="p">(</span><span class="err">“</span><span class="n">B</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">C</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">D</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">E</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">F</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">H</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">I</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">J</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">M</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">N</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">O</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">Z</span><span class="err">”</span><span class="p">)</span>
<span class="n">valor</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">c</span><span class="p">(</span><span class="m">983125</span><span class="p">,</span> <span class="m">71983</span><span class="p">,</span> <span class="m">61328</span><span class="p">,</span> <span class="m">51939</span><span class="p">,</span> <span class="m">10928810</span><span class="p">,</span> <span class="m">979192</span><span class="p">,</span> <span class="m">6019278</span><span class="p">,</span> <span class="m">352918</span><span class="p">,</span> <span class="m">178263</span><span class="p">,</span> <span class="m">64129229</span><span class="p">,</span> <span class="m">447009</span><span class="p">,</span> <span class="m">1620129</span><span class="p">)</span>
<span class="p">(</span><span class="n">importacoes</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">data.frame</span><span class="p">(</span><span class="n">produto</span><span class="p">,</span> <span class="n">valor</span><span class="p">))</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##    produto    valor
## 1        B   983125
## 2        C    71983
## 3        D    61328
## 4        E    51939
## 5        F 10928810
## 6        H   979192
## 7        I  6019278
## 8        J   352918
## 9        M   178263
## 10       N 64129229
## 11       O   447009
## 12       Z  1620129</code></pre></div></p>

<p>Você recebeu dois conjuntos de dados que representam as importações e as exportações de produtos de um pequeno país. Sua missão é fazer uma simples análise de saldo, balança e fluxo de comércio exterior desse país, e produzir alguns relatórios e gráficos comparando produto a produto.</p>

<p>Sendo assim, não é interessante perder nenhum registro de nenhum dos dois data.frames, ambos devem ser preservados para a comparação.</p>

<p>O join da vez é o full join (nome do blog!). Vejamos:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="p">(</span><span class="n">full.join.r.base</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">merge</span><span class="p">(</span><span class="n">exportacoes</span><span class="p">,</span> <span class="n">importacoes</span><span class="p">,</span> <span class="n">by.x</span> <span class="o">=</span> <span class="err">“</span><span class="n">produto</span><span class="err">”</span><span class="p">,</span> <span class="n">by.y</span> <span class="o">=</span> <span class="err">“</span><span class="n">produto</span><span class="err">”</span><span class="p">,</span> <span class="n">all.x</span> <span class="o">=</span> <span class="n">TRUE</span><span class="p">,</span> <span class="n">all.y</span> <span class="o">=</span> <span class="n">TRUE</span><span class="p">))</span> <span class="c1"># left join com R base</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##    produto valor.x  valor.y
## 1        A  993801       NA
## 2        C 1829300    71983
## 3        D  833952    61328
## 4        H  775831   979192
## 5        I   59143  6019278
## 6        J 1192920   352918
## 7        K 6938018       NA
## 8        O 2927318   447009
## 9        Y  393178       NA
## 10       B      NA   983125
## 11       E      NA    51939
## 12       F      NA 10928810
## 13       M      NA   178263
## 14       N      NA 64129229
## 15       Z      NA  1620129</code></pre></div></p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="p">(</span><span class="n">full.join.dplyr</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">full_join</span><span class="p">(</span><span class="n">exportacoes</span><span class="p">,</span> <span class="n">importacoes</span><span class="p">,</span> <span class="n">by</span> <span class="o">=</span> <span class="n">c</span><span class="p">(</span><span class="err">“</span><span class="n">produto</span><span class="err">”</span> <span class="o">=</span> <span class="err">“</span><span class="n">produto</span><span class="err">”</span><span class="p">)))</span> <span class="c1"># left join com dplyr</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##    produto valor.x  valor.y
## 1        A  993801       NA
## 2        C 1829300    71983
## 3        D  833952    61328
## 4        H  775831   979192
## 5        I   59143  6019278
## 6        J 1192920   352918
## 7        K 6938018       NA
## 8        O 2927318   447009
## 9        Y  393178       NA
## 10       B      NA   983125
## 11       E      NA    51939
## 12       F      NA 10928810
## 13       M      NA   178263
## 14       N      NA 64129229
## 15       Z      NA  1620129</code></pre></div></p>

<p>Repare que em nosso exemplo há uma particularidade com as chaves. Quando não explicitamos na função os nomes das chaves em <code>by</code>, o join é feito pelos campos com nomes iguais. Mas nesse caso, ambos os campos <code>produto</code> e <code>valor</code> têm nomes iguais nos dois data.frames. Precisamos então explicitar o que queremos que seja chave: apenas <code>produto</code>.</p>

<p>O full join preserva todos os registros de ambos os conjuntos. Quando as chaves são iguais, retorna preenchido em todos os campos, quando não são iguais, retorna <code>NA</code> em qualquer um dos “lados”.</p>

<p>Em nosso exemplo, alguns produtos foram somente exportados e alguns foram somente importados, bem como alguns foram exportados e importados. Como precisamos da totalidade das exportações e importações, o full join atende bem nossa necessidade. Com esse resultado já poderíamos partir para análise do comércio desse país.</p>

<h2 id="prximos-posts">Próximos posts</h2>

<p>Em breve faremos mais posts sobre joins, explicando alguns outros tipos menos comuns, como CROSS JOIN, SEMI JOIN, ANTI JOIN, SELF JOIN.</p>

<p>Até o momento apresentamos junções baseadas na igualdade de joins (equi joins), mas nos próximos posts sobre o assunto mostraremos exemplos onde a comparação das chaves não se da por relação de igualdade (theta join).</p>

<h2 id="referncias">Referências</h2>

<ul>
  <li><a href="http://stat545.com/bit001_dplyr-cheatsheet.html">Cheatsheet for dplyr join functions</a></li>
  <li><a href="http://www.rforexcelusers.com/book/shape-your-data/merging-data-frames/">R for Excel users: Merging Data Frames</a></li>
  <li><a href="http://www.dummies.com/how-to/content/how-to-use-the-merge-function-with-data-sets-in-r.html">How to Use the merge() Function with Data Sets in R</a></li>
  <li><a href="http://www.princeton.edu/~mattg/statar/join-and-reshape.html">R for Stat users: Join datasets</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Kit de sobrevivência em R - Parte 7: Avançando e Aprofundando]]></title>
    <link href="http://fulljoin.com.br/blog/2016/05/09/kit-de-sobrevivencia-em-r-parte-7/"/>
    <updated>2016-05-09T20:04:00-03:00</updated>
    <id>http://fulljoin.com.br/blog/2016/05/09/kit-de-sobrevivencia-em-r-parte-7</id>
    <content type="html"><![CDATA[<p>Chegamos ao fim do <a href="/blog/categories/introducao-ao-r">kit de sobrevivência em R</a>. Nesse último post da série vamos retomar alguns pontos que merecem ser complementados e revisados, além de apresentar um pouco mais de transformações e operações usando apenas funções básicas do R.</p>

<!-- More -->

<p>Se você seguiu a sequência e chegou até aqui, parabéns! Você provavelmente conhece o básico de R e o suficiente para começar a aprofundar em aspectos mais interessantes sobre operações com massas de dados.</p>

<h2 id="breve-reviso-sobre-pacotes">Breve revisão sobre pacotes</h2>

<p>Mostramos que pacotes são conjuntos de funções específicas agrupadas para objetivos temáticos: carregar dados, gráficos, machine learning. É muito simples carregar e utilizar pacotes. Vamos relembrar os principais comandos envolvidos:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="o">??</span><span class="n">dplyr</span> <span class="c1">#conhecendo um pacote que não foi carregado ainda</span>
<span class="n">install.packages</span><span class="p">(</span><span class="err">‘</span><span class="n">dplyr</span><span class="err">’</span><span class="p">)</span> <span class="c1">#instalando um pacote</span>
<span class="n">library</span><span class="p">(</span><span class="n">dplyr</span><span class="p">)</span> <span class="c1">#carregando um pacote para uso</span>
<span class="o">?</span><span class="n">dplyr</span><span class="o">::</span><span class="n">filter</span> <span class="c1">#conhecendo alguma função do pacote</span></code></pre></div></p>

<h2 id="carregando-dados">Carregando dados</h2>

<p>Lembre-se que antes de carregar um arquivo de dados você precisa informar onde o R deve ler o arquivo. Para isso usamos o comando <code>setwd()</code>.</p>

<p>A função mais básica para leitura de dados estruturados (csv, tabular, tamanho fixo, com separadores, etc.) é o famoso <code>read.table()</code>. Lembra dos principais parâmetros? Nome do arquivo, separador, se tem cabeçalho ou não, e, no caso de campos com tamanho fixo, o tamanho de cada campo.</p>

<p>Se quiser exercitar com diversos arquivos de dados diferentes, tente o <a href="http://dados.gov.br/">Portal Brasileiro de Dados Abertos</a> ou <a href="https://github.com/caesar0301/awesome-public-datasets">esse repositório de dados públicos</a> (em inglês).</p>

<p>Comentamos sobre algumas funções básicas para começar a explorar seus dados carregados. Você lembra?</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="o">?</span><span class="n">head</span><span class="p">()</span>
<span class="o">?</span><span class="n">tail</span><span class="p">()</span>
<span class="o">?</span><span class="n">str</span><span class="p">()</span></code></pre></div></p>

<blockquote>
  <p>Dica: se estiver usando o RStudio, tente visualizar seu data.frame com a função <code>View()</code> (com V maiúsculo). Ela cria uma planilha para ver melhor os dados!</p>
</blockquote>

<h2 id="tipos-e-estrutura-de-dados">Tipos e estrutura de dados</h2>

<p>Conhecer os tipos e estruturas de dados em R será fundamental daqui pra frente. Achamos importante revisar e apresentar alguns dos principais.</p>

<h3 id="tipos-bsicos">Tipos básicos</h3>

<table>
  <thead>
    <tr>
      <th>Tipo</th>
      <th style="text-align: left">Descrição</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><strong>logical</strong></td>
      <td style="text-align: left">Valor lógico, <code>TRUE</code> ou <code>FALSE</code>. Usado com os operadores lógicos <code>&amp;, |, ==, !=, &gt;, &lt;, &gt;=, &lt;=</code></td>
    </tr>
    <tr>
      <td><strong>integer</strong></td>
      <td style="text-align: left">Valores de números inteiros</td>
    </tr>
    <tr>
      <td><strong>numeric</strong></td>
      <td style="text-align: left">Valores de números decimais. Também representam números inteiros</td>
    </tr>
    <tr>
      <td><strong>character</strong></td>
      <td style="text-align: left">Valores textuais, também conhecidos como string</td>
    </tr>
  </tbody>
</table>

<p><br /></p>

<h3 id="converses">Conversões</h3>

<p>Existem algumas operações de conversões entre os tipos. São bastante usadas em transformações de campos. Por exemplo:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">as.numeric</span><span class="p">(</span><span class="err">“</span><span class="m">20</span><span class="err">”</span><span class="p">)</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">## [1] 20</code></pre></div></p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">as.character</span><span class="p">(</span><span class="m">20</span><span class="p">)</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">## [1] “20”</code></pre></div></p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">as.integer</span><span class="p">(</span><span class="m">3.14</span><span class="p">)</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">## [1] 3</code></pre></div></p>

<h3 id="estruturas-bsicas">Estruturas básicas</h3>

<p>Dominar as estruturas de dados do R será fundamental no desenvolvimento das suas análises. Inicialmente, a ideia de estrutura de dados pode parecer um pouco abstrata, mas conhecê-las e saber suas características será útil para você perceber quais são as possibilidades.</p>

<p>A tabela abaixo apresenta um resumo das estruturas básicas. Ela está baseada na explicação que está no livro do <a href="http://adv-r.had.co.nz/Data-structures.html"><em>Advanced R</em></a> do Hadley Wickham (leitura recomendada pra quem deseja aprofundar seus conhecimento em R).</p>

<table>
  <thead>
    <tr>
      <th>Tipo</th>
      <th style="text-align: left">Descrição</th>
      <th>Dimensões</th>
      <th>Homogêneo</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><strong>vector</strong></td>
      <td style="text-align: left">Coleção de elementos simples. Todos os elementos precisam ser do mesmo tipo básico de dado</td>
      <td>1</td>
      <td>Sim</td>
    </tr>
    <tr>
      <td><strong>array</strong></td>
      <td style="text-align: left">Coleção que se parece com o vector, mas é multidimensional</td>
      <td>n</td>
      <td>Sim</td>
    </tr>
    <tr>
      <td><strong>matrix</strong></td>
      <td style="text-align: left">Tipo especial de array com duas dimensões</td>
      <td>2</td>
      <td>Sim</td>
    </tr>
    <tr>
      <td><strong>list</strong></td>
      <td style="text-align: left">Objeto complexo com elementos que podem ser de diferentes tipos</td>
      <td>1</td>
      <td>Não</td>
    </tr>
    <tr>
      <td><strong>data.frame</strong></td>
      <td style="text-align: left">Tipo especial de lista onde cada coluna é um vetor de apenas um tipo e todos as colunas têm o mesmo número de registros. É o tipo mais utilizado se trabalhar com dados</td>
      <td>2</td>
      <td>Não</td>
    </tr>
    <tr>
      <td><strong>factor</strong></td>
      <td style="text-align: left">Tipo especial de vector que só contém valores pré definidos (levels) e categóricos (characters). Não é possível adicionar novas categorias sem criação de novos levels</td>
      <td>1</td>
      <td>Não</td>
    </tr>
  </tbody>
</table>

<p><br /></p>

<p>Do que se trata o campo <code>Dimensões</code> na tabela? Na prática, isso afetará como você usará partes desse objeto. Por exemplo, um objeto com duas dimensões tem linhas e colunas. Assim, você usará <code>[ , ]</code> (com vírgula separando linha e coluna, respectivamente) para acessar a dimensão que você deseja selecionar. Já um objeto unidimensional terá seus elementos acessados usando apenas <code>[ ]</code>. A lista, por sua vez, tem seus elementos acessados com <code>[[ ]]</code>.</p>

<p>E o campo <code>Homogêneo</code> da tabela? Trata-se de mais uma características das estruturas de dados. Diz respeito à variedade de tipos básicos que um objeto pode conter. Por exemplo, vetores só aceitam um tipo de dado. Assim, se você atribuir dois tipos diferentes, ele forçará para um único tipo. Listas e data frames aceitam diferentes tipos de dados.</p>

<h3 id="observaes-sobre-listas">Observações sobre listas</h3>

<p>Lista pode causar um pouco de confusão no começo. Daremos alguns exemplos para explicar melhor.</p>

<p>Iremos criar listas com duas bases de dados que já são fornecidas como exemplos no próprio R. Primeiramente, vamos carregar as duas bases de dados:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">data</span><span class="p">(</span><span class="err">“</span><span class="n">mtcars</span><span class="err">”</span><span class="p">)</span>
<span class="n">data</span><span class="p">(</span><span class="err">“</span><span class="n">iris</span><span class="err">”</span><span class="p">)</span>
<span class="n">class</span><span class="p">(</span><span class="n">mtcars</span><span class="p">)</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">## [1] “data.frame”</code></pre></div></p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">class</span><span class="p">(</span><span class="n">iris</span><span class="p">)</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">## [1] “data.frame”</code></pre></div></p>

<p>Veja que temos dois data frames. Agora, vamos criar um objeto único que irá receber essas duas bases. Além disso, a fim de mostrar a heterogeneidade, iremos incluir um objeto que será um vetor.</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">x</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="m">1</span><span class="o">:</span><span class="m">10</span>
<span class="n">lista.teste</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">list</span><span class="p">(</span><span class="n">mtcars</span><span class="p">,</span> <span class="n">iris</span><span class="p">,</span> <span class="n">x</span><span class="p">)</span></code></pre></div></p>

<p>Faça um teste e digite <code>lista.teste</code> no console para ver o resultado.</p>

<p>E como eu faço pra acessar partes específicas? Como dissemos a lista tem uma pequena diferença, será necessário usar o <code>[[ ]]</code>. Lembre-se que, como a lista é um objeto de dimensão 1, só precisaremos passar o índice que temos interesse. O vetor <code>x</code> é o terceiro elemento. Logo, para acessá-lo podemos fazer o seguinte:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">lista.teste</span><span class="p">[[</span><span class="m">3</span><span class="p">]]</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##  [1]  1  2  3  4  5  6  7  8  9 10</code></pre></div></p>

<p>Para terminar essa breve explicação sobre listas, vamos mostrar que cada objeto de uma lista pode ter um nome:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">lista.teste</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">list</span><span class="p">(</span><span class="n">base1</span> <span class="o">=</span> <span class="n">mtcars</span><span class="p">,</span> <span class="n">base2</span> <span class="o">=</span> <span class="n">iris</span><span class="p">,</span> <span class="n">vetor1</span> <span class="o">=</span> <span class="n">x</span><span class="p">)</span></code></pre></div></p>

<p>Dessa forma, você <em>também</em> poderá acessar usando o nome com o auxílio do <code>$</code>:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">lista.teste</span><span class="o">$</span><span class="n">vetor1</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##  [1]  1  2  3  4  5  6  7  8  9 10</code></pre></div></p>

<p><br /></p>

<h3 id="observaes-sobre-vectors">Observações sobre vectors</h3>

<p>Vectors possuem algumas propriedades muito úteis como <code>length()</code>, <code>typeof()</code> e <code>unique()</code>. Você também poderá usar o <code>length()</code> para saber o tamanho de uma lista.</p>

<h3 id="observaes-sobre-dataframes">Observações sobre data.frames</h3>

<p>As funções <code>nrow()</code> e <code>ncol()</code> podem ser usadas para saber, respectivamente, o número de linhas e colunas de um data.frame (ou de uma matriz).</p>

<p>Data.frames também podem ter o nome das colunas alterados. Veja o exemplo a seguir:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">head</span><span class="p">(</span><span class="n">iris</span><span class="p">)</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##   Sepal.Length Sepal.Width Petal.Length Petal.Width Species
## 1          5.1         3.5          1.4         0.2  setosa
## 2          4.9         3.0          1.4         0.2  setosa
## 3          4.7         3.2          1.3         0.2  setosa
## 4          4.6         3.1          1.5         0.2  setosa
## 5          5.0         3.6          1.4         0.2  setosa
## 6          5.4         3.9          1.7         0.4  setosa</code></pre></div></p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">names</span><span class="p">(</span><span class="n">iris</span><span class="p">)</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">## [1] “Sepal.Length” “Sepal.Width”  “Petal.Length” “Petal.Width” 
## [5] “Species”</code></pre></div></p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">names</span><span class="p">(</span><span class="n">iris</span><span class="p">)</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">c</span><span class="p">(</span><span class="err">“</span><span class="n">campo1</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">campo2</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">campo3</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">campo4</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">campo5</span><span class="err">”</span><span class="p">)</span>
<span class="n">head</span><span class="p">(</span><span class="n">iris</span><span class="p">)</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##   campo1 campo2 campo3 campo4 campo5
## 1    5.1    3.5    1.4    0.2 setosa
## 2    4.9    3.0    1.4    0.2 setosa
## 3    4.7    3.2    1.3    0.2 setosa
## 4    4.6    3.1    1.5    0.2 setosa
## 5    5.0    3.6    1.4    0.2 setosa
## 6    5.4    3.9    1.7    0.4 setosa</code></pre></div></p>

<h2 id="valores-faltantes-missing">Valores Faltantes (Missing)</h2>

<p>O R atribui <code>NA</code> para valores faltantes. Ou seja, se por acaso uma determinada posição de um vetor ou de uma coluna de um data.frame não possui valor algum, o R mostrará <code>NA</code>.</p>

<p>É muito comum lidar com conjuntos de dados que tenham ocorrências de <code>NA</code> em alguns campos. É importante saber o que fazer em casos de <code>NA</code>, e nem sempre a solução será a mesma, vai variar de acordo com as suas necessidades.</p>

<p>Em algumas bases de dados, quem gera o dado atribui valores genéricos como 999 ou até mesmo um “texto vazio” <code>' '</code>. Nesse caso, você provavelmente terá que substituir esses valores “omissos” por <code>NA</code>.</p>

<p>Vamos explicar as funções básicas para começar a lidar com <code>NA</code> no R.</p>

<p>Em primeiro lugar, criaremos um simples data.frame para exemplificar:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">data.ex</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">data.frame</span><span class="p">(</span><span class="n">col1</span> <span class="o">=</span> <span class="n">letters</span><span class="p">[</span><span class="m">1</span><span class="o">:</span><span class="m">6</span><span class="p">],</span> <span class="n">col2</span> <span class="o">=</span> <span class="n">c</span><span class="p">(</span><span class="m">10</span><span class="p">,</span> <span class="m">20</span><span class="p">,</span> <span class="m">30</span><span class="p">,</span> <span class="n">NA</span><span class="p">,</span> <span class="m">50</span><span class="p">,</span> <span class="n">NA</span><span class="p">))</span>
<span class="n">data.ex</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##   col1 col2
## 1    a   10
## 2    b   20
## 3    c   30
## 4    d   NA
## 5    e   50
## 6    f   NA</code></pre></div></p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">summary</span><span class="p">(</span><span class="n">data.ex</span><span class="p">)</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##  col1       col2   &lt;br /&gt;
##  a:1   Min.   :10.0&lt;br /&gt;
##  b:1   1st Qu.:17.5&lt;br /&gt;
##  c:1   Median :25.0&lt;br /&gt;
##  d:1   Mean   :27.5&lt;br /&gt;
##  e:1   3rd Qu.:35.0&lt;br /&gt;
##  f:1   Max.   :50.0&lt;br /&gt;
##        NA’s   :2</code></pre></div></p>

<p>Usamos o <code>letters</code> que é uma lista pré construída no R e que retorna as 26 letras do alfabeto. No caso, usamos só as seis primeiras. Na segunda coluna, colocamos alguns <code>NA</code>’s.</p>

<p>A função <code>summary</code> mostra que existem dois <code>NA</code>’s na <code>col2</code>. Nesse exemplo fica fácil para encontrar onde estão os <code>NA</code>’s e fazer alguma modificação caso deseje, mas considere um caso em que seu data.frame é grande. Você não iria conseguir identificar no olho. Assim, é necessário usar algumas funções. Vamos começar como o <code>is.na()</code>:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">is.na</span><span class="p">(</span><span class="n">data.ex</span><span class="o">$</span><span class="n">col2</span><span class="p">)</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">## [1] FALSE FALSE FALSE  TRUE FALSE  TRUE</code></pre></div></p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">which</span><span class="p">(</span><span class="n">is.na</span><span class="p">(</span><span class="n">data.ex</span><span class="o">$</span><span class="n">col2</span><span class="p">))</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">## [1] 4 6</code></pre></div></p>

<p>O <code>is.na()</code> realiza um teste para saber se cada elemento da variável <code>col2</code> é um missing. Além disso, se usarmos o <code>is.na()</code> dentro da função <code>which()</code> saberemos quais as posições que possuem o <code>NA</code>. Um detalhe importante sobre funções que retornam <code>TRUE</code> ou <code>FALSE</code> como o <code>is.na()</code> é que você pode usar a <code>!</code> para fazer o teste ao contrário. Isto é, se quisermos saber quais não são <code>NA</code>, faremos o seguinte:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="o">!</span><span class="n">is.na</span><span class="p">(</span><span class="n">data.ex</span><span class="o">$</span><span class="n">col2</span><span class="p">)</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">## [1]  TRUE  TRUE  TRUE FALSE  TRUE FALSE</code></pre></div></p>

<p>Notou que a função retornou o contrário de <code>is.na(data.ex$col2)</code>?</p>

<p>Agora iremos introduzir a função <code>complete.cases()</code>. Bastante utilizada, essa função retorna <code>TRUE</code> para as linhas em que todas as colunas possuem valores válidos e <code>FALSE</code> para as linhas em que em alguma coluna existe um <code>NA</code>. Ou seja, essa função diz quais são as linhas (amostras) completas em todas suas características (campos).</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">complete.cases</span><span class="p">(</span><span class="n">data.ex</span><span class="p">)</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">## [1]  TRUE  TRUE  TRUE FALSE  TRUE FALSE</code></pre></div></p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="o">!</span><span class="n">complete.cases</span><span class="p">(</span><span class="n">data.ex</span><span class="p">)</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">## [1] FALSE FALSE FALSE  TRUE FALSE  TRUE</code></pre></div></p>

<p>Podemos usar o retorno dessa função para selecionar linhas do nosso data.frame:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">data.ex</span><span class="p">[</span><span class="o">!</span><span class="n">complete.cases</span><span class="p">(</span><span class="n">data.ex</span><span class="p">),]</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##   col1 col2
## 4    d   NA
## 6    f   NA</code></pre></div></p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">data.ex</span><span class="p">[</span><span class="n">complete.cases</span><span class="p">(</span><span class="n">data.ex</span><span class="p">),]</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##   col1 col2
## 1    a   10
## 2    b   20
## 3    c   30
## 5    e   50</code></pre></div></p>

<p>Você poderia usar a função <code>na.omit()</code> para obter o mesmo resultado da seleção de linhas com o <code>complete.cases()</code>:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">na.omit</span><span class="p">(</span><span class="n">data.ex</span><span class="p">)</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##   col1 col2
## 1    a   10
## 2    b   20
## 3    c   30
## 5    e   50</code></pre></div></p>

<p>Por fim, iremos imputar a média da <code>col2</code> nas linhas em que há <code>NA</code>. Para isso, usaremos o <code>ifelse()</code> que tratamos na <a href="/blog/2016/05/01/kit-de-sobrevivencia-em-r-parte-6/">parte 6</a> e o <code>is.na()</code>, além da função <code>mean()</code>.</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="c1"># Calcular a média da col2</span>
<span class="n">media.col2</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">mean</span><span class="p">(</span><span class="n">data.ex</span><span class="o">$</span><span class="n">col2</span><span class="p">,</span> <span class="n">na.rm</span> <span class="o">=</span> <span class="n">TRUE</span><span class="p">)</span>
<span class="n">media.col2</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">## [1] 27.5</code></pre></div></p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">data.ex</span><span class="o">$</span><span class="n">col2</span><span class="p">[</span><span class="n">is.na</span><span class="p">(</span><span class="n">data.ex</span><span class="o">$</span><span class="n">col2</span><span class="p">)]</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">media.col2</span>
<span class="n">data.ex</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##   col1 col2
## 1    a 10.0
## 2    b 20.0
## 3    c 30.0
## 4    d 27.5
## 5    e 50.0
## 6    f 27.5</code></pre></div></p>

<p>Note que na função <code>mean()</code> usamos o argumento <code>na.rm</code>. Ele significa “remover <code>NA</code>”, o que é necessário nesse cálculo, pois se os <code>NA</code>’s não forem retirados, a média será <code>NA</code> também.</p>

<p>Imputar dados em casos de <code>NA</code> é uma das várias estratégias para lidar com ocorrência de missing no conjunto dos dados.</p>

<h2 id="exemplo-final-titanic">Exemplo final: Titanic</h2>

<p>Vamos dar um exemplo final de algumas transformações e manipulações de dados na tentativa de resumir todos os aspectos tratados no kit de sobrevivência em R.</p>

<p>Escolhemos a base de dados dos passageiros do Titanic! É uma base muito utilizada como tutorial de machine learning onde o objetivo é criar um modelo para prever os sobreviventes do acidente. Se você pretende aprender machine learning, certamente vai esbarrar (ou já esbarrou) com essa base de dados. Inclusive há uma série de <a href="https://www.kaggle.com/c/titanic">tutoriais de machine learning com essa base no Kaggle</a>.</p>

<p>Nosso objetivo não é criar nenhum modelo nem ensinar a fazer isso, vamos apenas explorar a base, manipular, transformar e criar algumas variáveis. Teremos muitos posts em breve sobre modelos preditivos e machine learning!</p>

<p>Primeiro criamos um novo script, lembre-se sempre de salvar o seu trabalho para não perder nada. Em seguida vamos limpar o ambiente de memória para começar.</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">rm</span><span class="p">(</span><span class="n">list</span> <span class="o">=</span> <span class="n">ls</span><span class="p">())</span></code></pre></div></p>

<p>Vamos instalar e carregar o pacote R que disponibiliza os dados.</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">install.packages</span><span class="p">(</span><span class="err">‘</span><span class="n">titanic</span><span class="err">’</span><span class="p">)</span>
<span class="n">library</span><span class="p">(</span><span class="n">titanic</span><span class="p">)</span></code></pre></div></p>

<p>O data frame que iremos usar já estará carregado na memória e se chama <code>titanic_train</code>. Trata-se da base de treinamento usada para treinar modelos. Vamos dar uma olhada. As bases de treinamento já vem com a resposta na variável que você quer descobrir na base de teste. Nesse caso os modelos que usam essa base são treinados para descobrir a variável <code>Survived</code>.</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">str</span><span class="p">(</span><span class="n">titanic_train</span><span class="p">)</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">## ‘data.frame’:	891 obs. of  12 variables:
##  $ PassengerId: int  1 2 3 4 5 6 7 8 9 10 …
##  $ Survived   : int  0 1 1 1 0 0 0 0 1 1 …
##  $ Pclass     : int  3 1 3 1 3 3 1 3 3 2 …
##  $ Name       : chr  “Braund, Mr. Owen Harris” “Cumings, Mrs. John Bradley (Florence Briggs Thayer)” “Heikkinen, Miss. Laina” “Futrelle, Mrs. Jacques Heath (Lily May Peel)” …
##  $ Sex        : chr  “male” “female” “female” “female” …
##  $ Age        : num  22 38 26 35 35 NA 54 2 27 14 …
##  $ SibSp      : int  1 1 0 1 0 0 0 3 0 1 …
##  $ Parch      : int  0 0 0 0 0 0 0 1 2 0 …
##  $ Ticket     : chr  “A/5 21171” “PC 17599” “STON/O2. 3101282” “113803” …
##  $ Fare       : num  7.25 71.28 7.92 53.1 8.05 …
##  $ Cabin      : chr  “” “C85” “” “C123” …
##  $ Embarked   : chr  “S” “C” “S” “S” …</code></pre></div></p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">head</span><span class="p">(</span><span class="n">titanic_train</span><span class="p">)</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##   PassengerId Survived Pclass
## 1           1        0      3
## 2           2        1      1
## 3           3        1      3
## 4           4        1      1
## 5           5        0      3
## 6           6        0      3
##                                                  Name    Sex Age
## 1                             Braund, Mr. Owen Harris   male  22
## 2 Cumings, Mrs. John Bradley (Florence Briggs Thayer) female  38
## 3                              Heikkinen, Miss. Laina female  26
## 4        Futrelle, Mrs. Jacques Heath (Lily May Peel) female  35
## 5                            Allen, Mr. William Henry   male  35
## 6                                    Moran, Mr. James   male  NA
##   SibSp Parch           Ticket    Fare Cabin Embarked
## 1     1     0        A/5 21171  7.2500              S
## 2     1     0         PC 17599 71.2833   C85        C
## 3     0     0 STON/O2. 3101282  7.9250              S
## 4     1     0           113803 53.1000  C123        S
## 5     0     0           373450  8.0500              S
## 6     0     0           330877  8.4583              Q</code></pre></div></p>

<p>Repare que cada linha representa um passageiro e cada campo representa uma característica desse passageiro. As variáveis (campos) estão em inglês e talvez não sejam tão óbvias. Segue explicação de cada uma:</p>

<table>
  <thead>
    <tr>
      <th>Nome do campo</th>
      <th style="text-align: left">Descrição do campo</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><strong>Survived</strong></td>
      <td style="text-align: left">Passageiro sobrevivente (1) ou morto (0)</td>
    </tr>
    <tr>
      <td><strong>Pclass</strong></td>
      <td style="text-align: left">Classe do passageiro</td>
    </tr>
    <tr>
      <td><strong>Name</strong></td>
      <td style="text-align: left">Nome do passageiro</td>
    </tr>
    <tr>
      <td><strong>Sex</strong></td>
      <td style="text-align: left">Gênero do passageiro (male ou female)</td>
    </tr>
    <tr>
      <td><strong>Age</strong></td>
      <td style="text-align: left">Idade do passageiro</td>
    </tr>
    <tr>
      <td><strong>SibSp</strong></td>
      <td style="text-align: left">Número de irmãos ou cônjuges a bordo</td>
    </tr>
    <tr>
      <td><strong>Parch</strong></td>
      <td style="text-align: left">Número de pais ou filhos a bordo</td>
    </tr>
    <tr>
      <td><strong>Ticket</strong></td>
      <td style="text-align: left">Número do tíquete</td>
    </tr>
    <tr>
      <td><strong>Fare</strong></td>
      <td style="text-align: left">Preço do tíquete</td>
    </tr>
    <tr>
      <td><strong>Cabin</strong></td>
      <td style="text-align: left">Cabine</td>
    </tr>
    <tr>
      <td><strong>Embarked</strong></td>
      <td style="text-align: left">Portão de embarque</td>
    </tr>
  </tbody>
</table>

<p><br /></p>

<p>Vamos traduzir os nomes dos campos para facilitar o entendimento. Para isso usaremos a função <code>names()</code></p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">names</span><span class="p">(</span><span class="n">titanic_train</span><span class="p">)</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##  [1] “PassengerId” “Survived”    “Pclass”      “Name”     &lt;br /&gt;
##  [5] “Sex”         “Age”         “SibSp”       “Parch”    &lt;br /&gt;
##  [9] “Ticket”      “Fare”        “Cabin”       “Embarked”</code></pre></div></p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">names</span><span class="p">(</span><span class="n">titanic_train</span><span class="p">)</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">c</span><span class="p">(</span><span class="err">‘</span><span class="n">id_passageiro</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">sobrevivente</span><span class="err">’</span><span class="p">,</span> 
			<span class="err">‘</span><span class="n">classe</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">nome</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">sexo</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">idade</span><span class="err">’</span><span class="p">,</span>
			<span class="err">‘</span><span class="n">irmaos_conjuge</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">pais_filhos</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">numero_ticket</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">valor_ticket</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">cabine</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">porta_embarque</span><span class="err">’</span><span class="p">)</span></code></pre></div></p>

<p>Como o objetivo dessa base de dados é treinar um modelo para descobrir se um passageiro vai sobreviver ou não, vamos manipular e criar variáveis para tentar ajudar a atingir esse objetivo. O ideal é fazer uma bela análise exploratória dos dados, com auxílio de gráficos e estatística básica, mas nosso foco agora é apenas na transformação de dados, portanto, tentaremos um pouco de intuição e criatividade para criar variáveis possivelmente úteis.</p>

<p>Vamos começar com a variável <code>idade</code>. Há um comportamento interessante nessa variável: missings!</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">unique</span><span class="p">(</span><span class="n">titanic_train</span><span class="o">$</span><span class="n">idade</span><span class="p">)</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##  [1] 22.00 38.00 26.00 35.00    NA 54.00  2.00 27.00 14.00  4.00 58.00
## [12] 20.00 39.00 55.00 31.00 34.00 15.00 28.00  8.00 19.00 40.00 66.00
## [23] 42.00 21.00 18.00  3.00  7.00 49.00 29.00 65.00 28.50  5.00 11.00
## [34] 45.00 17.00 32.00 16.00 25.00  0.83 30.00 33.00 23.00 24.00 46.00
## [45] 59.00 71.00 37.00 47.00 14.50 70.50 32.50 12.00  9.00 36.50 51.00
## [56] 55.50 40.50 44.00  1.00 61.00 56.00 50.00 36.00 45.50 20.50 62.00
## [67] 41.00 52.00 63.00 23.50  0.92 43.00 60.00 10.00 64.00 13.00 48.00
## [78]  0.75 53.00 57.00 80.00 70.00 24.50  6.00  0.67 30.50  0.42 34.50
## [89] 74.00</code></pre></div></p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">sum</span><span class="p">(</span><span class="n">is.na</span><span class="p">(</span><span class="n">titanic_train</span><span class="o">$</span><span class="n">idade</span><span class="p">))</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">## [1] 177</code></pre></div></p>

<p>Usando <code>sum()</code> junto com <code>is.na()</code> conseguimos contar a quantidade total de <code>NA</code> na variável.</p>

<p>Nesse nosso caso específico, vamos interpretar <code>NA</code> como se o passageiro tivesse a idade desconhecida, seja lá qual for o motivo. Dependendo do algoritmo de machine learning que será aplicado a esses dados, a presença de <code>NA</code> não é bem vinda. Portanto, precisamos lidar com os <code>NA</code>s dessa variável.</p>

<p>A título de exemplificação, vamos adicionar a média geral das idades quando não soubermos a idade do passageiro. (Veja, essa nem sempre é uma boa estratégia para imputação de dados. Vamos usá-la agora apenas por ser bem simples).</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">media</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">mean</span><span class="p">(</span><span class="n">titanic_train</span><span class="o">$</span><span class="n">idade</span><span class="p">,</span> <span class="n">na.rm</span> <span class="o">=</span> <span class="n">TRUE</span><span class="p">)</span>
<span class="n">media</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">## [1] 29.69912</code></pre></div></p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">titanic_train</span><span class="o">$</span><span class="n">idade</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">ifelse</span><span class="p">(</span><span class="n">is.na</span><span class="p">(</span><span class="n">titanic_train</span><span class="o">$</span><span class="n">idade</span><span class="p">),</span> <span class="n">round</span><span class="p">(</span><span class="n">media</span><span class="p">),</span> <span class="n">titanic_train</span><span class="o">$</span><span class="n">idade</span><span class="p">)</span></code></pre></div></p>

<p>Calculamos a média desconsiderando ocorrências de <code>NA</code>, em seguida atribuímos a média (arredondada) às ocorrências de <code>NA</code>.</p>

<p>Agora todos os passageiros tem idade, alguns a idade correta, outros uma idade atribuída. Vamos criar agora uma classificação de <code>jovem</code>, <code>adulto</code> ou <code>idoso</code> para essa variável.</p>

<p>Pode ser que isso ajude algum algoritmo a prever melhor quem vive ou quem morre no acidente, pois, intuitivamente, talvez jovens sejam imaturos fiquem mais assustados, talvez idosos tenham menos habilidade de fuga e adultos talvez lidem melhor com situações de emergência.</p>

<p>Sendo assim, até 20 anos chamaremos de <code>jovem</code>, de 21 a 54 chamaremos de <code>adulto</code>, e acima de 55 chamaremos de <code>idoso</code>. Vamos chamar essa variável de <code>faixa_etaria</code>.</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">titanic_train</span><span class="o">$</span><span class="n">faixa_etaria</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">ifelse</span><span class="p">(</span><span class="n">titanic_train</span><span class="o">$</span><span class="n">idade</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">=</span> <span class="m">20</span><span class="p">,</span> <span class="err">‘</span><span class="n">jovem</span><span class="err">’</span><span class="p">,</span> <span class="n">ifelse</span><span class="p">(</span><span class="n">titanic_train</span><span class="o">$</span><span class="n">idade</span> <span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="m">21</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="n">titanic_train</span><span class="o">$</span><span class="n">idade</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span> <span class="m">55</span><span class="p">,</span> <span class="err">‘</span><span class="n">adulto</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">idoso</span><span class="err">’</span><span class="p">))</span>
<span class="n">head</span><span class="p">(</span><span class="n">titanic_train</span><span class="p">[,</span><span class="n">c</span><span class="p">(</span><span class="err">‘</span><span class="n">idade</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">faixa_etaria</span><span class="err">’</span><span class="p">)],</span> <span class="m">15</span><span class="p">)</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##    idade faixa_etaria
## 1     22       adulto
## 2     38       adulto
## 3     26       adulto
## 4     35       adulto
## 5     35       adulto
## 6     30       adulto
## 7     54       adulto
## 8      2        jovem
## 9     27       adulto
## 10    14        jovem
## 11     4        jovem
## 12    58        idoso
## 13    20        jovem
## 14    39       adulto
## 15    14        jovem</code></pre></div></p>

<p>Uma outra variável que pode ser interessante para ajudar modelos preditivos pode ser o total de parentes. Será que quanto mais parentes o passageiro tiver, mais ele se preocupe em salvar a vida dos seus entes queridos, botando a sua vida em risco? Ou será que a prioridade “mulheres e crianças primeiro” ajudou quem tinha família a sobreviver?</p>

<p>Há uma variável para irmãos e cônjuges, e outra para crianças ou pais. Vamos somá-las e criar o <code>total_parentes</code>.</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">titanic_train</span><span class="o">$</span><span class="n">total_parentes</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">titanic_train</span><span class="o">$</span><span class="n">irmaos_conjuge</span> <span class="o">+</span> <span class="n">titanic_train</span><span class="o">$</span><span class="n">pais_filhos</span></code></pre></div></p>

<p>Para complementar essa ideia, vamos tentar distinguir quem tinha família e quem não tinha, criando uma variável categórica simplesmente indicando se o passageiro tem família ou não:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">titanic_train</span><span class="o">$</span><span class="n">familia</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">ifelse</span><span class="p">(</span><span class="n">titanic_train</span><span class="o">$</span><span class="n">total_parentes</span> <span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="m">0</span><span class="p">,</span> <span class="err">‘</span><span class="n">Sim</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">Nao</span><span class="err">’</span><span class="p">)</span></code></pre></div></p>

<p>Seguindo com as transformações, o título do passageiro pode dizer algo sobre ele. Vamos tentar isolar o título em uma variável para explicitar isso aos possíveis algoritmos:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">titanic_train</span><span class="o">$</span><span class="n">titulo</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">lapply</span><span class="p">(</span><span class="n">strsplit</span><span class="p">(</span><span class="n">titanic_train</span><span class="o">$</span><span class="n">nome</span><span class="p">,</span> <span class="err">‘</span><span class="p">[,</span><span class="err">.</span><span class="p">]</span><span class="err">’</span><span class="p">),</span> <span class="err">“</span><span class="p">[</span><span class="err">”</span><span class="p">,</span> <span class="m">2</span><span class="p">)</span>
<span class="n">head</span><span class="p">(</span><span class="n">titanic_train</span><span class="p">[,</span><span class="n">c</span><span class="p">(</span><span class="err">‘</span><span class="n">nome</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">titulo</span><span class="err">’</span><span class="p">)],</span> <span class="m">15</span><span class="p">)</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##                                                   nome  titulo
## 1                              Braund, Mr. Owen Harris      Mr
## 2  Cumings, Mrs. John Bradley (Florence Briggs Thayer)     Mrs
## 3                               Heikkinen, Miss. Laina    Miss
## 4         Futrelle, Mrs. Jacques Heath (Lily May Peel)     Mrs
## 5                             Allen, Mr. William Henry      Mr
## 6                                     Moran, Mr. James      Mr
## 7                              McCarthy, Mr. Timothy J      Mr
## 8                       Palsson, Master. Gosta Leonard  Master
## 9    Johnson, Mrs. Oscar W (Elisabeth Vilhelmina Berg)     Mrs
## 10                 Nasser, Mrs. Nicholas (Adele Achem)     Mrs
## 11                     Sandstrom, Miss. Marguerite Rut    Miss
## 12                            Bonnell, Miss. Elizabeth    Miss
## 13                      Saundercock, Mr. William Henry      Mr
## 14                         Andersson, Mr. Anders Johan      Mr
## 15                Vestrom, Miss. Hulda Amanda Adolfina    Miss</code></pre></div></p>

<p>O comando usado talvez seja um pouco avançado, mas vamos tentar explicar por partes. Primeiramente usamos o <code>strsplit()</code>, uma função que lida com caracteres e divide uma string baseado numa marcação. Nesse caso, estamos dividindo o nome do passageiro em dois pontos: vírgula <code>,</code> e ponto <code>.</code>, que é justamente o padrão textual que separa o título no nome.</p>

<p>O resultado do <code>strsplit()</code> é uma lista com as partes da separação. Para acessar exatamente o segundo elemento da lista, que é onde está o título, usamos o <code>lapply()</code>, uma função da família <code>apply</code>, que executa um comando repetidamente ao longo de uma estrutura (coluna, array, listas, matrizes, etc…). O efeito prático das funções da família <code>apply</code> se assemelha muito à loops.</p>

<p>Dominar a família <code>apply</code> pode ser muito interessante para se tornar um bom analista de dados. Certamente faremos uma sequência de posts explicando detalhadamente todas as funções da família <code>apply</code>, aguarde!</p>

<h2 id="concluso">Conclusão</h2>

<p>E é isso pessoal. Chegamos ao fim da sequência. Esperamos que tenha gostado e aprendido o kit básico de sobrevivência em R. Daqui em diante os posts serão intermediários e avançados, tratando de questões mais profundas como junção de dados, visualização de dados, análise exploratória, estatística, machine learning.</p>

<h2 id="referncias">Referências</h2>

<ul>
  <li><a href="http://www.uni-kiel.de/psychologie/rexrepos/posts/missingData.html">Deal with missing data</a></li>
  <li><a href="http://www.statmethods.net/input/missingdata.html">Missing data</a></li>
  <li><a href="https://nsaunders.wordpress.com/2010/08/20/a-brief-introduction-to-apply-in-r/">A brief introduction to “apply” in R</a></li>
  <li><a href="https://www.datacamp.com/community/tutorials/r-tutorial-apply-family">R tutorial on the Apply family of functions</a></li>
</ul>

<h2 id="demais-posts-da-sequncia">Demais posts da sequência:</h2>

<ul>
  <li><a href="/blog/2016/03/23/kit-de-sobrevivencia-em-r-parte-1">Kit de sobrevivência em R - Parte 1: Visão Geral e Instalação</a></li>
  <li><a href="/blog/2016/04/03/kit-de-sobrevivencia-em-r-parte-2">Kit de sobrevivência em R - Parte 2: Operações, Variáveis e Funções</a></li>
  <li><a href="/blog/2016/04/03/kit-de-sobrevivencia-em-r-parte-3">Kit de sobrevivência em R - Parte 3: Pacotes</a></li>
  <li><a href="/blog/2016/04/12/kit-de-sobrevivencia-em-r-parte-4">Kit de sobrevivência em R - Parte 4: Carregando Dados</a></li>
  <li><a href="/blog/2016/04/21/kit-de-sobrevivencia-em-r-parte-5">Kit de sobrevivência em R - Parte 5: Tipos de Dados e Transformações</a></li>
  <li><a href="/blog/2016/05/01/kit-de-sobrevivencia-em-r-parte-6">Kit de sobrevivência em R - Parte 6: Estruturas de Controle</a></li>
  <li><a href="/blog/2016/05/09/kit-de-sobrevivencia-em-r-parte-7">Kit de sobrevivência em R - Parte 7: Avançando e Aprofundando</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Kit de sobrevivência em R - Parte 6: Estruturas de Controle]]></title>
    <link href="http://fulljoin.com.br/blog/2016/05/01/kit-de-sobrevivencia-em-r-parte-6/"/>
    <updated>2016-05-01T20:04:00-03:00</updated>
    <id>http://fulljoin.com.br/blog/2016/05/01/kit-de-sobrevivencia-em-r-parte-6</id>
    <content type="html"><![CDATA[<p>No último post, você aprendeu um pouco sobre os tipos de dados e como realizar algumas transformações. Neste post, trataremos um pouco sobre estruturas de controles (for, if, else, while etc.). Estruturas de controles serão bastante usadas durante o processo de análise de dados, sendo importante que você domine esse tópico.</p>

<!-- More -->

<p>Para exemplificar, utilizaremos os dados de taxas de desemprego que estão disponíveis <a href="https://www.dropbox.com/s/4tedgnkd85c5q5s/desemprego_uf_pnad.zip?dl=0">neste link</a>.</p>

<p>Antes de mais nada, carregue os dados:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">desemprego.uf</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">read.table</span><span class="p">(</span><span class="err">“</span><span class="n">desemprego_uf_espaco.txt</span><span class="err">”</span><span class="p">,</span> <span class="n">sep</span> <span class="o">=</span> <span class="err">“</span> <span class="err">“</span><span class="p">,</span> <span class="n">dec</span> <span class="o">=</span> <span class="err">“</span><span class="p">,</span><span class="err">”</span><span class="p">,</span> <span class="n">stringsAsFactors</span> <span class="o">=</span> <span class="n">FALSE</span><span class="p">)</span></code></pre></div>
# Intuição sobre Loops</p>

<p>Trata-se de um dos conceitos mais importantes de qualquer linguagem de programação. Em R não é diferente. Loops (ou laços) repetem uma sequência de comando quantas vezes você desejar, ou até que uma condição aconteça, variando alguns aspectos entre uma repetição e outra.</p>

<p>Supondo que você queira testar uma simples expressão para 5 valores diferentes, por exemplo:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">x</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="m">2</span>
<span class="n">x</span> <span class="o">+</span> <span class="n">x</span><span class="o">*</span><span class="m">2</span> <span class="o">+</span> <span class="n">x</span><span class="o">^</span><span class="m">2</span> <span class="o">+</span> <span class="n">x</span><span class="o">^</span><span class="n">x</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">## [1] 14</code></pre></div></p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">x</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="m">3</span>
<span class="n">x</span> <span class="o">+</span> <span class="n">x</span><span class="o">*</span><span class="m">2</span> <span class="o">+</span> <span class="n">x</span><span class="o">^</span><span class="m">2</span> <span class="o">+</span> <span class="n">x</span><span class="o">^</span><span class="n">x</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">## [1] 45</code></pre></div></p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">x</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="m">4</span>
<span class="n">x</span> <span class="o">+</span> <span class="n">x</span><span class="o">*</span><span class="m">2</span> <span class="o">+</span> <span class="n">x</span><span class="o">^</span><span class="m">2</span> <span class="o">+</span> <span class="n">x</span><span class="o">^</span><span class="n">x</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">## [1] 284</code></pre></div></p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">x</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="m">5</span>
<span class="n">x</span> <span class="o">+</span> <span class="n">x</span><span class="o">*</span><span class="m">2</span> <span class="o">+</span> <span class="n">x</span><span class="o">^</span><span class="m">2</span> <span class="o">+</span> <span class="n">x</span><span class="o">^</span><span class="n">x</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">## [1] 3165</code></pre></div></p>

<p>Repare que você executou 5 vezes o mesmo comando alterando apenas o valor da variável <code>x</code>. 5 ainda parece uma quantidade pequena, mas vamos supor que você gostaria de testar essa expressão para 1000 valores? Você a escreveria 1000 vezes? Apesar de você poder calcular todos esses valores a partir de um vetor <code>x &lt;- 2:5</code>, em uma situação específica você pode ser ver obrigado a usar um loop pra não ter que ficar fazendo repetições cansativas.</p>

<h2 id="for">for()</h2>

<p>O <code>for()</code> é usado para realizar uma série de ordens para uma determinada sequência ou índices. Aplicando ao exemplo acima, temos a seguinte sintaxe:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="k">for</span><span class="p">(</span><span class="n">x</span> <span class="k">in</span> <span class="m">2</span><span class="o">:</span><span class="m">5</span><span class="p">)</span> <span class="p">{</span>
  <span class="n">print</span><span class="p">(</span><span class="n">x</span> <span class="o">+</span> <span class="n">x</span><span class="o">*</span><span class="m">2</span> <span class="o">+</span> <span class="n">x</span><span class="o">^</span><span class="m">2</span> <span class="o">+</span> <span class="n">x</span><span class="o">^</span><span class="n">x</span><span class="p">)</span>
<span class="p">}</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">## [1] 14
## [1] 45
## [1] 284
## [1] 3165</code></pre></div>
Repare, você escreveu bem menos e o resultado foi idêntico: “para cada <code>x</code> igual a cada item na sequência <code>2:5</code>, execute <code>print(x + x*2 + x^2 + x^x)</code>”. O <code>for()</code> irá repetir todas as instruções dentro das chaves <code>{ }</code> para cada elemento da sua sequência (vetor).</p>

<p>Você também pode passar números que poderão ser usados como índices.</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">x</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">c</span><span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="m">4</span><span class="p">,</span> <span class="m">5</span><span class="p">,</span> <span class="m">6</span><span class="p">,</span> <span class="m">10</span><span class="p">)</span>
<span class="k">for</span><span class="p">(</span><span class="n">i</span> <span class="k">in</span> <span class="m">1</span><span class="o">:</span><span class="m">5</span><span class="p">){</span>
  <span class="n">print</span><span class="p">(</span><span class="n">x</span><span class="p">[</span><span class="n">i</span><span class="p">])</span>
<span class="p">}</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">## [1] 1
## [1] 4
## [1] 5
## [1] 6
## [1] 10</code></pre></div></p>

<p>Vamos a um exemplo mais útil que deixa mais claro como o <code>for()</code> funciona. Suponha que você necessita gerar um único plot com quatro gráficos, um para cada trimestre de 2015, da taxa de desemprego por unidade da federação.</p>

<p>Para facilitar, iremos criar um novo data.frame em que estejam selecionadas somente as linhas em que a variável ano é igual a 2015:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">desemprego.uf.2015</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">desemprego.uf</span><span class="p">[</span><span class="n">desemprego.uf</span><span class="o">$</span><span class="n">Ano</span> <span class="o">==</span> <span class="m">2015</span><span class="p">,]</span></code></pre></div></p>

<p>Perceba que no código base do R, para selecionar as linhas de um data.frame, você utiliza o <code>[ , ]</code>. A vírgula divide as duas dimensões do data.frame. Assim, se o desejo é selecionar linhas, são utilizadas condições antes da vírgula. Para selecionar colunas, serão necessários códigos após a vírgula. Funciona de maneira similar a uma matriz.</p>

<p>No entanto, esta não é a única maneira de realizar esse filtro nos dados. Por exemplo, você poderia obter o mesmo resultado usando a função <code>subset()</code>. Dê uma olhadinha no help.</p>

<p>Além disso, iremos criar um vetor com os trimestres que serão usados como base para realização do loop.</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="c1"># Selecionar valores únicos da coluna Trimestre</span>
<span class="n">trimestre</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">unique</span><span class="p">(</span><span class="n">desemprego.uf.2015</span><span class="o">$</span><span class="n">Trimestre</span><span class="p">)</span>
<span class="n">trimestre</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">## [1] jan-fev-mar abr-mai-jun jul-ago-set out-nov-dez
## Levels: abr-mai-jun jan-fev-mar jul-ago-set out-nov-dez</code></pre></div></p>

<p>Vamos treinar o <code>for()</code> exibindo todos os valores da variável <code>trimestre</code>.</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="k">for</span><span class="p">(</span><span class="n">i</span> <span class="k">in</span> <span class="n">trimestre</span><span class="p">){</span>
  <span class="n">print</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
<span class="p">}</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">## [1] “jan-fev-mar”
## [1] “abr-mai-jun”
## [1] “jul-ago-set”
## [1] “out-nov-dez”</code></pre></div></p>

<p>Agora vamos definir alguns parâmetros do plot. Aqui usaremos o recurso base do R para geração dos gráficos. Atualmente, uma boa parte dos usuários (inclusive a gente) utiliza o <a href="http://docs.ggplot2.org/current/">ggplot2</a>.</p>

<p>Com um pouco de criatividade e com uma boa base de dados, você poderá criar gráficos como o que está <a href="https://medium.com/airbnb-engineering/using-r-packages-and-education-to-scale-data-science-at-airbnb-906faa58e12d#.z39ukskpb">neste post</a> do Airbnb. Não entraremos em detalhes sobre gráficos agora, mas prometemos uma sequência de posts ensinando todos os principais aspectos da confecção de gráficos, aguarde!</p>

<p>Os parâmetros do plot serão definidos usando a função <code>par()</code>. Utilize o <code>?par</code> para ver mais detalhes sobre esta função e as opções disponíveis.</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">par</span><span class="p">(</span><span class="n">mfrow</span> <span class="o">=</span> <span class="n">c</span><span class="p">(</span><span class="m">2</span><span class="p">,</span><span class="m">2</span><span class="p">),</span> <span class="c1"># O plot terá 2 linhas e 2 colunas</span>
    <span class="n">mar</span> <span class="o">=</span> <span class="n">c</span><span class="p">(</span><span class="m">8</span><span class="p">,</span> <span class="m">5</span><span class="p">,</span> <span class="m">4</span><span class="p">,</span> <span class="m">2</span><span class="p">),</span> <span class="c1"># margens inferior, esquerda, superior, direita</span>
    <span class="n">las</span> <span class="o">=</span> <span class="m">2</span><span class="p">)</span> <span class="c1"># rótulos perpendicular aos eixos</span></code></pre></div></p>

<p>O código abaixo traz o loop. Temos 4 operações dentro do loop:</p>

<ul>
  <li>Criar o data.frame <code>dados.tmp</code> a partir de um filtro no data.frame <code>desemprego.uf.2015</code>. Queremos somente as linhas em que o Trimestre é igual a <code>i</code>.</li>
  <li>Usando a função <code>order()</code>, ordenar as linhas dos <code>dados.tmp</code> de forma decrescente pelo valor da taxa de desemprego. Vide <code>?order()</code>.</li>
  <li>Criar um objeto de texto que trará o título de cada gráfico. Usamos a função <code>paste()</code> que tem o papel de concatenar o que for passado como argumento. Usamos espaço como separador, mas você pode passar qualquer separador entre as aspas. Esta função tem mais um parâmetro: <code>collapse</code>. Não precisaremos desse parâmetro aqui, mas dê uma olhada no help para ver alguns exemplos. Note também que ele já tem um valor padrão <code>NULL</code>.</li>
  <li>Por fim, usamos o <code>barplot()</code> para criar o gráfico de barra. Vide <code>?barplot()</code>.</li>
</ul>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="k">for</span><span class="p">(</span><span class="n">i</span> <span class="k">in</span> <span class="n">trimestre</span><span class="p">){</span>
  <span class="n">dados.tmp</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">desemprego.uf.2015</span><span class="p">[</span><span class="n">desemprego.uf.2015</span><span class="o">$</span><span class="n">Trimestre</span> <span class="o">==</span> <span class="n">i</span><span class="p">,</span>
                                  <span class="n">c</span><span class="p">(</span><span class="err">‘</span><span class="n">UF</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">Taxa_Desemprego</span><span class="err">’</span><span class="p">)]</span>
  <span class="n">dados.tmp</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">dados.tmp</span><span class="p">[</span><span class="n">order</span><span class="p">(</span><span class="n">dados.tmp</span><span class="o">$</span><span class="n">Taxa_Desemprego</span><span class="p">,</span> <span class="n">decreasing</span> <span class="o">=</span> <span class="n">T</span><span class="p">),]</span>
  <span class="c1"># Cria o título do plot</span>
  <span class="n">title</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">paste</span><span class="p">(</span><span class="err">“</span><span class="n">Taxa</span> <span class="n">de</span> <span class="n">Desemprego</span> <span class="m">2015</span><span class="o">:</span><span class="err">”</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">sep</span> <span class="o">=</span> <span class="err">“</span> <span class="err">“</span><span class="p">)</span>
  <span class="c1"># Gera o gráfico de barras</span>
  <span class="n">barplot</span><span class="p">(</span><span class="n">dados.tmp</span><span class="o">$</span><span class="n">Taxa_Desemprego</span><span class="p">,</span> <span class="n">names.arg</span> <span class="o">=</span> <span class="n">dados.tmp</span><span class="o">$</span><span class="n">UF</span><span class="p">,</span>
          <span class="n">col</span> <span class="o">=</span> <span class="err">“</span><span class="n">dodgerblue</span><span class="err">”</span><span class="p">,</span> <span class="n">border</span> <span class="o">=</span> <span class="n">NA</span><span class="p">,</span> <span class="n">main</span> <span class="o">=</span> <span class="n">title</span><span class="p">,</span>
          <span class="n">ylab</span><span class="o">=</span><span class="err">”</span><span class="o">%</span><span class="err">”</span><span class="p">)</span>
<span class="p">}</span></code></pre></div></p>

<p>Veja o resultado:</p>

<p><img src="/figures/source/2016-05-01-kit-de-sobrevivencia-em-r-parte-6/unnamed-chunk-11-1.png" alt="plot of chunk unnamed-chunk-11" /></p>

<p>O gif abaixo mostra como o R vai inserindo gráfico a gráfico. Adicionei o comando <code>Sys.sleep()</code> para que a execução fosse suspensa durante 1,5 segundo para ficar mais claro a criação de cada gráfico e ter a sensação do loop criando um por um (na realidade isso acontece quase instantaneamente!).</p>

<p><img src="/images/forloop.gif" alt="alt Usando o for" title="Usando o for" /></p>

<h2 id="if-e-else">if e else</h2>

<p>Outro clássico conceito de programação que você usará muito é o if e else. É uma estrutura condicional, que usa os operadores lógicos apresentados <a href="/blog/2016/04/21/kit-de-sobrevivencia-em-r-parte-5/">no post anterior</a>. Se a condição do <code>if()</code> for verdadeira, executa os comandos dentro das chaves <code>{ }</code>, se for falsa, executa os comando da chave do <code>else { }</code></p>

<p>Para exemplificar o uso do if e else, vamos continuar com o exemplo anterior, mas desta vez queremos que as barras para o trimestre <code>out-nov-dez</code> sejam vermelhas. Dessa forma, usaremos os controles if e else. A ideia é realizar um teste sobre <code>i</code> que assume um valor do vetor <code>trimestre</code>. Assim, se <code>i</code> for igual a <code>out-nov-dez</code>, a cor será ver vermelha (<code>col = red</code>), caso contrário utilizaremos o azul (<code>col = dodgerblue</code>).</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">par</span><span class="p">(</span><span class="n">mfrow</span> <span class="o">=</span> <span class="n">c</span><span class="p">(</span><span class="m">2</span><span class="p">,</span><span class="m">2</span><span class="p">),</span> <span class="c1"># O plot terá 2 linas e 2 colunas</span>
    <span class="n">mar</span> <span class="o">=</span> <span class="n">c</span><span class="p">(</span><span class="m">10</span><span class="p">,</span> <span class="m">5</span><span class="p">,</span> <span class="m">4</span><span class="p">,</span> <span class="m">2</span><span class="p">),</span> <span class="c1"># margens inferior, esquerda, superior, direita</span>
    <span class="n">las</span> <span class="o">=</span> <span class="m">2</span><span class="p">)</span> <span class="c1"># rótulos perpendicular aos eixos</span>
<span class="k">for</span><span class="p">(</span><span class="n">i</span> <span class="k">in</span> <span class="n">trimestre</span><span class="p">){</span>
  <span class="n">dados.tmp</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">desemprego.uf.2015</span><span class="p">[</span><span class="n">desemprego.uf.2015</span><span class="o">$</span><span class="n">Trimestre</span> <span class="o">==</span> <span class="n">i</span><span class="p">,</span>
                                  <span class="n">c</span><span class="p">(</span><span class="err">‘</span><span class="n">UF</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">Taxa_Desemprego</span><span class="err">’</span><span class="p">)]</span>
  <span class="n">dados.tmp</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">dados.tmp</span><span class="p">[</span><span class="n">order</span><span class="p">(</span><span class="n">dados.tmp</span><span class="o">$</span><span class="n">Taxa_Desemprego</span><span class="p">,</span> <span class="n">decreasing</span> <span class="o">=</span> <span class="n">T</span><span class="p">),]</span>
  <span class="n">title</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">paste</span><span class="p">(</span><span class="err">“</span><span class="n">Taxa</span> <span class="n">de</span> <span class="n">Desemprego</span> <span class="m">2015</span><span class="o">:</span><span class="err">”</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">sep</span> <span class="o">=</span> <span class="err">“</span> <span class="err">“</span><span class="p">)</span>
  <span class="k">if</span><span class="p">(</span><span class="n">i</span> <span class="o">==</span> <span class="err">‘</span><span class="n">out</span><span class="o">-</span><span class="n">nov</span><span class="o">-</span><span class="n">dez</span><span class="err">’</span><span class="p">){</span>
    <span class="n">barplot</span><span class="p">(</span><span class="n">dados.tmp</span><span class="o">$</span><span class="n">Taxa_Desemprego</span><span class="p">,</span> <span class="n">names.arg</span> <span class="o">=</span> <span class="n">dados.tmp</span><span class="o">$</span><span class="n">UF</span><span class="p">,</span>
          <span class="n">col</span> <span class="o">=</span> <span class="err">“</span><span class="n">red</span><span class="err">”</span><span class="p">,</span> <span class="n">border</span> <span class="o">=</span> <span class="n">NA</span><span class="p">,</span> <span class="n">main</span> <span class="o">=</span> <span class="n">title</span><span class="p">,</span>
          <span class="n">ylab</span><span class="o">=</span><span class="err">”</span><span class="o">%</span><span class="err">”</span><span class="p">)</span>
  <span class="p">}</span><span class="k">else</span><span class="p">{</span>
     <span class="n">barplot</span><span class="p">(</span><span class="n">dados.tmp</span><span class="o">$</span><span class="n">Taxa_Desemprego</span><span class="p">,</span> <span class="n">names.arg</span> <span class="o">=</span> <span class="n">dados.tmp</span><span class="o">$</span><span class="n">UF</span><span class="p">,</span>
          <span class="n">col</span> <span class="o">=</span> <span class="err">“</span><span class="n">dodgerblue</span><span class="err">”</span><span class="p">,</span> <span class="n">border</span> <span class="o">=</span> <span class="n">NA</span><span class="p">,</span> <span class="n">main</span> <span class="o">=</span> <span class="n">title</span><span class="p">,</span>
          <span class="n">ylab</span><span class="o">=</span><span class="err">”</span><span class="o">%</span><span class="err">”</span><span class="p">)</span>
  <span class="p">}</span>
<span class="p">}</span></code></pre></div></p>

<p><img src="/figures/source/2016-05-01-kit-de-sobrevivencia-em-r-parte-6/unnamed-chunk-12-1.png" alt="plot of chunk unnamed-chunk-12" /></p>

<p>Podemos reescrever o código acima com o comando <code>ifelse()</code> e obter o mesmo resultado (veja <code>?ifelse()</code>). Para isso, iremos usar o comando <code>ifelse()</code> no argumento <code>col</code>. O primeiro argumento dessa função é o teste que você deseja realizar (saber se o trimestre é ou não é igual a <code>out-nov-dez</code>), o segundo é o valor desejado caso seja verdade e o último é o valor a ser retornado caso a condição não seja satisfeita.</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">par</span><span class="p">(</span><span class="n">mfrow</span> <span class="o">=</span> <span class="n">c</span><span class="p">(</span><span class="m">2</span><span class="p">,</span><span class="m">2</span><span class="p">),</span> <span class="c1"># O plot terá 2 linas e 2 colunas</span>
    <span class="n">mar</span> <span class="o">=</span> <span class="n">c</span><span class="p">(</span><span class="m">10</span><span class="p">,</span> <span class="m">5</span><span class="p">,</span> <span class="m">4</span><span class="p">,</span> <span class="m">2</span><span class="p">),</span> <span class="c1"># margens inferior, esquerda, superior, direita</span>
    <span class="n">las</span> <span class="o">=</span> <span class="m">2</span><span class="p">)</span> <span class="c1"># rótulos perpendicular aos eixos</span>
<span class="k">for</span><span class="p">(</span><span class="n">i</span> <span class="k">in</span> <span class="n">trimestre</span><span class="p">){</span>
  <span class="n">dados.tmp</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">desemprego.uf.2015</span><span class="p">[</span><span class="n">desemprego.uf.2015</span><span class="o">$</span><span class="n">Trimestre</span> <span class="o">==</span> <span class="n">i</span><span class="p">,</span>
                                  <span class="n">c</span><span class="p">(</span><span class="err">‘</span><span class="n">UF</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">Taxa_Desemprego</span><span class="err">’</span><span class="p">)]</span>
  <span class="n">dados.tmp</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">dados.tmp</span><span class="p">[</span><span class="n">order</span><span class="p">(</span><span class="n">dados.tmp</span><span class="o">$</span><span class="n">Taxa_Desemprego</span><span class="p">,</span> <span class="n">decreasing</span> <span class="o">=</span> <span class="n">T</span><span class="p">),]</span>
  <span class="n">title</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">paste</span><span class="p">(</span><span class="err">“</span><span class="n">Taxa</span> <span class="n">de</span> <span class="n">Desemprego</span> <span class="m">2015</span><span class="o">:</span><span class="err">”</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">sep</span> <span class="o">=</span> <span class="err">“</span> <span class="err">“</span><span class="p">)</span>
  <span class="n">barplot</span><span class="p">(</span><span class="n">dados.tmp</span><span class="o">$</span><span class="n">Taxa_Desemprego</span><span class="p">,</span> <span class="n">names.arg</span> <span class="o">=</span> <span class="n">dados.tmp</span><span class="o">$</span><span class="n">UF</span><span class="p">,</span>
          <span class="n">col</span> <span class="o">=</span> <span class="n">ifelse</span><span class="p">(</span><span class="n">i</span> <span class="o">==</span> <span class="err">‘</span><span class="n">out</span><span class="o">-</span><span class="n">nov</span><span class="o">-</span><span class="n">dez</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">red</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">dodgerblue</span><span class="err">’</span><span class="p">),</span>
          <span class="n">border</span> <span class="o">=</span> <span class="n">NA</span><span class="p">,</span> <span class="n">main</span> <span class="o">=</span> <span class="n">title</span><span class="p">,</span>
          <span class="n">ylab</span><span class="o">=</span><span class="err">”</span><span class="o">%</span><span class="err">”</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span></code></pre></div></p>

<p><img src="/figures/source/2016-05-01-kit-de-sobrevivencia-em-r-parte-6/unnamed-chunk-13-1.png" alt="plot of chunk unnamed-chunk-13" /></p>

<p>O <code>ifelse()</code> tem uma característica importante. Enquanto o <code>if()</code> aceita apenas um único teste (comprimento um), o <code>ifelse</code> pode receber um vetor para testes e aplicar as condições para este conjunto de teste. Para ficar mais claro veja o exemplo abaixo.</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">desemprego.uf.2015</span><span class="o">$</span><span class="n">Maior.que.9</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">ifelse</span><span class="p">(</span><span class="n">desemprego.uf.2015</span><span class="o">$</span><span class="n">Taxa_Desemprego</span> <span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="m">9</span><span class="p">,</span>
                                         <span class="err">“</span><span class="n">Maior</span> <span class="n">que</span> <span class="m">9</span><span class="err">”</span><span class="p">,</span>
                                         <span class="err">“</span><span class="n">Menor</span> <span class="n">ou</span> <span class="n">igual</span> <span class="n">a</span> <span class="m">9</span><span class="err">”</span><span class="p">)</span>
<span class="n">head</span><span class="p">(</span><span class="n">desemprego.uf.2015</span><span class="p">,</span> <span class="m">10</span><span class="p">)</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##     Ano   Trimestre       UF Taxa_Desemprego        Maior.que.9
## 13 2015 jan-fev-mar Rondônia           4.396 Menor ou igual a 9
## 14 2015 abr-mai-jun Rondônia           4.919 Menor ou igual a 9
## 15 2015 jul-ago-set Rondônia           6.679 Menor ou igual a 9
## 16 2015 out-nov-dez Rondônia           6.276 Menor ou igual a 9
## 29 2015 jan-fev-mar     Acre           8.722 Menor ou igual a 9
## 30 2015 abr-mai-jun     Acre           8.723 Menor ou igual a 9
## 31 2015 jul-ago-set     Acre           8.759 Menor ou igual a 9
## 32 2015 out-nov-dez     Acre           7.588 Menor ou igual a 9
## 45 2015 jan-fev-mar Amazonas           9.358        Maior que 9
## 46 2015 abr-mai-jun Amazonas           9.457        Maior que 9</code></pre></div></p>

<h2 id="while-repeat-break-next">while, repeat, break, next</h2>

<p>Além do <code>for()</code>, temos também outras estruturas de loop que funcionam de maneira semelhante, mudando somente a condição para execução das repetições.</p>

<p>O <code>while()</code> é uma estrutura de controle utilizada para realizar um loop enquanto uma condição for satisfeita. Aqui realizaremos um loop simples somente para demonstrar o funcionamento do <code>while()</code>. Será criado um objeto <code>i</code> igual a 1 e iremos mostrá-lo no console enquanto for menor ou igual a 5. A cada iteração será adicionado 1 ao valor de <code>i</code>.</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">i</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="m">1</span>
<span class="k">while</span><span class="p">(</span><span class="n">i</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">=</span> <span class="m">5</span><span class="p">){</span>
  <span class="n">print</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
  <span class="n">i</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">i</span> <span class="o">+</span> <span class="m">1</span>
<span class="p">}</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">## [1] 1
## [1] 2
## [1] 3
## [1] 4
## [1] 5</code></pre></div></p>

<p>Como você notou no exemplo do <code>if</code> e <code>else</code>, o R permite que um loop seja elaborado com várias estruturas de controle. Usaremos isto para exemplificar o funcionamento do <code>repeat</code> e do <code>break</code>.</p>

<p>O <code>repeat</code> realiza as operações que estão entre <code>{ }</code> indefinidamente. Obviamente, não iremos querer executar nada para sempre, iremos querer que o loop termine caso alguma coisa aconteça. Dessa forma, temos que criar uma condição para que ele pare e uma instrução dizendo que o loop deve terminar caso a condição seja satisfeita.</p>

<p>No exemplo abaixo, iremos novamente incrementar o objeto <code>i</code>, mas queremos que estas operações parem se ele superar 6, ou seja, no meio da execução vamos verificar se a condição de parada acontece. Veja o código abaixo:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">i</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="m">1</span>
<span class="k">repeat</span><span class="p">{</span>
  <span class="n">print</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
  <span class="n">i</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">i</span> <span class="o">+</span> <span class="m">1</span>
  <span class="k">if</span><span class="p">(</span><span class="n">i</span> <span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="m">6</span><span class="p">){</span>
    <span class="k">break</span> <span class="c1"># Se a condição é satisfeita, encerra o loop.</span>
  <span class="p">}</span>
<span class="p">}</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">## [1] 1
## [1] 2
## [1] 3
## [1] 4
## [1] 5
## [1] 6</code></pre></div></p>

<p>Por fim, o <code>next</code> é usado para pular para a próxima iteração caso uma determinada condição seja satisfeita. É muito usado quando você quer ignorar certas repetições, por exemplo:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="k">for</span><span class="p">(</span><span class="n">i</span> <span class="k">in</span> <span class="m">1</span><span class="o">:</span><span class="m">10</span><span class="p">){</span>
  <span class="k">if</span><span class="p">(</span><span class="n">i</span> <span class="o">&amp;</span><span class="n">gt</span><span class="p">;</span> <span class="m">2</span> <span class="o">&amp;</span><span class="n">amp</span><span class="p">;</span> <span class="n">i</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">=</span> <span class="m">4</span><span class="p">)</span> <span class="k">next</span>
  <span class="n">print</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
<span class="p">}</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">## [1] 1
## [1] 2
## [1] 5
## [1] 6
## [1] 7
## [1] 8
## [1] 9
## [1] 10</code></pre></div></p>

<p>Perceba que não há necessidade das <code>{ }</code> se a operação a ser executada em um estrutura de controle estiver na mesma linha. Você também poderia usar normalmente o <code>{ }</code>.</p>

<h2 id="algumas-observaes">Algumas observações</h2>

<p>Muitas operações que usam loops podem ser realizadas a partir de outros comandos de maneira mais rápida (família <code>apply()</code>, por exemplo). Os loops no R são conhecidos por serem lentos e dependendo do seu problema eles se tornam inviáveis. No entanto, existem algumas práticas que tornam os loops mais rápidos. Não iremos tratar disso por agora, mas aqueles que tiverem mais curiosidade podem encontrar mais informações <a href="https://www.datacamp.com/community/tutorials/tutorial-on-loops-in-r">aqui</a>.</p>

<h2 id="desafio">Desafio</h2>

<p>Fugindo um pouco dos exemplos dos gráficos, vamos lançar um desafio em relação ao método de <a href="https://pt.wikipedia.org/wiki/M%C3%A9todo_de_Newton-Raphson">Newton-Raphson</a> para que seja encontrada a raiz de uma determinada função. O método consiste em um processo iterativo em que a cada período o valor da variável é atualizado de acordo com uma fórmula e há convergência quando o valor absoluto da função para aquele determinado é inferior a um nível de tolerância.</p>

<p>O objetivo é encontrar a raiz da função:
<script type="math/tex">f(x) = x^3 - 2x - 6</script></p>

<p>Partindo de um valor inicial, o processo de iteração é o seguinte:</p>

<script type="math/tex; mode=display">x_{n+1} = x_n - \frac{f(x_n)}{f'(x_n)} = x_n - \frac{x_n^3 - 2x_n - 6}{3x_n^2 - 2}</script>

<p>Use como critério de parada se $|f(x_n)| &lt; 0.000001$ e como valor inicial $x_0 = -10$.</p>

<h2 id="referncias">Referências</h2>

<ul>
  <li><a href="http://datascienceplus.com/how-to-write-the-loop-in-r/">How to write the first for loop in R</a></li>
  <li><a href="http://rforpublichealth.blogspot.com.br/2013/01/for-loops-and-how-to-avoid-them.html">For loops (and how to avoid them)</a></li>
  <li><a href="http://stackoverflow.com/questions/2908822/speed-up-the-loop-operation-in-r">Speed up the loop operation in R</a></li>
</ul>

<h2 id="demais-posts-da-sequncia">Demais posts da sequência:</h2>

<ul>
  <li><a href="/blog/2016/03/23/kit-de-sobrevivencia-em-r-parte-1">Kit de sobrevivência em R - Parte 1: Visão Geral e Instalação</a></li>
  <li><a href="/blog/2016/04/03/kit-de-sobrevivencia-em-r-parte-2">Kit de sobrevivência em R - Parte 2: Operações, Variáveis e Funções</a></li>
  <li><a href="/blog/2016/04/03/kit-de-sobrevivencia-em-r-parte-3">Kit de sobrevivência em R - Parte 3: Pacotes</a></li>
  <li><a href="/blog/2016/04/12/kit-de-sobrevivencia-em-r-parte-4">Kit de sobrevivência em R - Parte 4: Carregando Dados</a></li>
  <li><a href="/blog/2016/04/21/kit-de-sobrevivencia-em-r-parte-5">Kit de sobrevivência em R - Parte 5: Tipos de Dados e Transformações</a></li>
  <li><a href="/blog/2016/05/01/kit-de-sobrevivencia-em-r-parte-6">Kit de sobrevivência em R - Parte 6: Estruturas de Controle</a></li>
  <li><a href="/blog/2016/05/09/kit-de-sobrevivencia-em-r-parte-7">Kit de sobrevivência em R - Parte 7: Avançando e Aprofundando</a></li>
</ul>
]]></content>
  </entry>
  
</feed>
