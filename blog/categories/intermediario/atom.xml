<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[intermediário | Full Join]]></title>
  <link href="http://fulljoin.com.br/blog/categories/intermediario/atom.xml" rel="self"/>
  <link href="http://fulljoin.com.br/"/>
  <updated>2017-01-28T16:40:38-02:00</updated>
  <id>http://fulljoin.com.br/</id>
  <author>
    <name><![CDATA[Full Join]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Introdução a Modelos no R]]></title>
    <link href="http://fulljoin.com.br/blog/2016/07/10/intro-modelos-r/"/>
    <updated>2016-07-10T11:44:00-03:00</updated>
    <id>http://fulljoin.com.br/blog/2016/07/10/intro-modelos-r</id>
    <content type="html"><![CDATA[<p>Neste post, vamos introduzir alguns conceitos para começar a trabalhar com modelos no R. Abordaremos o modelo linear de regressão utilizando a função <code>lm()</code>. Aprender a estrutura básica de modelos a partir do modelo linear será bastante útil para entender e utilizar outros modelos mais complexos.</p>

<!-- More -->

<h2 id="o-que-so-modelos">O que são modelos?</h2>

<p>Se você já tem uma noção do que é modelagem matemática, pule para o próximo tópico <strong>Dados</strong>.</p>

<p>Modelos são representações da realidade. São usados nas ciências sociais e exatas na tentativa de estudar e entender como o mundo funciona.</p>

<p>Um modelo matemático é uma representação, em linguagem matemática, do comportamento de algo. Por se tratar de representações, obviamente modelos matemáticos são bem mais simples do que a realidade, mas isso não significa dizer que um bom modelo não sirva para descrever e entender determinados aspectos e comportamentos reais.</p>

<p>Modelo de regressão linear talvez seja uma das formas mais simples de modelagem estatística. É uma abordagem que tenta representar a relação entre variáveis, uma chamada variável dependente (y), e uma ou mais denominadas de variáveis explicativas (<strong>x</strong>). Adicionalmente, o modelo também inclui um termo aleatório, o que o torna um modelo estatístico.</p>

<p>Usa-se o termo “regressão” pois o modelo tenta descrever o comportamento de y em relação a x em situações desconhecidas tomando como base situações conhecidas, ou seja, o modelo calcula um fator de forma que se você conhece o(s) valor(es) de x, consegue estimar o valor de y. O termo linear deve-se ao fato de como os parâmetros e o termo aleatório entram na equação estimada. A relação linear deve existir entre $y$ e $x$ ou entre $y$ e alguma função de $x$. Ou seja, se o modelo a ser estimado é <script type="math/tex">y_i = \alpha + \beta\ln(x_i) + e_i</script>, fica evidente que o efeito de $x$ em $y$ não é linear, mas o efeito de $\ln(x)$, sim.</p>

<p>Também é importante notar que, como todo modelo, o modelo de regressão linear tem uma série de hipóteses, e as inferências em relação aos parâmetros são realizadas sob essas hipóteses. Se elas são violadas de alguma maneira, a inferência que está sendo realizada pode estar errada.</p>

<p>Feita essa pequena introdução sobre modelos, iremos para a parte prática de como estimar o modelo linear usando o R.</p>

<h2 id="dados">Dados</h2>

<p>Primeiramente, precisaremos de uma base de dados para exemplificar como podemos usar um modelo no R. Vamos utilizar a base de dados <code>Carseats</code> que está disponível no pacote <code>ISLR</code>, que é um pacote complementar ao livro <a href="http://www-bcf.usc.edu/~gareth/ISL/getbook.html">Introduction to Statistical Learning with Applications in R</a>. Trata-se de um conjunto de dados simulados de vendas de cadeirinhas de carros para crianças. A tabela abaixo lista as variáveis presente nessa base de dados:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">library</span><span class="p">(</span><span class="n">ISLR</span><span class="p">)</span> <span class="c1"># Instale o pacote se necessário install.packages(“ISLR”)</span>
<span class="n">data</span><span class="p">(</span><span class="err">“</span><span class="n">Carseats</span><span class="err">”</span><span class="p">)</span></code></pre></div></p>

<table>
  <thead>
    <tr>
      <th style="text-align: left">Nome</th>
      <th style="text-align: left">Descrição</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">Sales</td>
      <td style="text-align: left">Milhares de unidades vendidas em cada local</td>
    </tr>
    <tr>
      <td style="text-align: left">CompPrice</td>
      <td style="text-align: left">Preço cobrado pelo competidor em cada local</td>
    </tr>
    <tr>
      <td style="text-align: left">Income</td>
      <td style="text-align: left">Nível de renda local (milhares de dólares)</td>
    </tr>
    <tr>
      <td style="text-align: left">Advertising</td>
      <td style="text-align: left">Orçamento disponível para publicidade em cada local (milhares de dólares)</td>
    </tr>
    <tr>
      <td style="text-align: left">Population</td>
      <td style="text-align: left">Tamanho da população regional (mil)</td>
    </tr>
    <tr>
      <td style="text-align: left">Price</td>
      <td style="text-align: left">Preço da empresa em cada local</td>
    </tr>
    <tr>
      <td style="text-align: left">ShelveLoc</td>
      <td style="text-align: left">Fator com três níveis: ruim, bom e médio. Indica a qualidade do local da prateleira para as cadeiras de carro em cada loja</td>
    </tr>
    <tr>
      <td style="text-align: left">Age</td>
      <td style="text-align: left">Idade média da população local</td>
    </tr>
    <tr>
      <td style="text-align: left">Education</td>
      <td style="text-align: left">Nível educacional de cada local</td>
    </tr>
    <tr>
      <td style="text-align: left">Urban</td>
      <td style="text-align: left">Fator com dois níveis: sim e não. Indica se a loja está localizada em um área urbana ou rural</td>
    </tr>
    <tr>
      <td style="text-align: left">US</td>
      <td style="text-align: left">Fator com dois níveis: sim e não. Indica se a loja está localizada nos Estados Unidos ou não</td>
    </tr>
  </tbody>
</table>

<p>Para termos uma ideia da “cara” dos dados, vamos olhar as primeiras linhas usando o <code>head()</code>.</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">head</span><span class="p">(</span><span class="n">Carseats</span><span class="p">)</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##   Sales CompPrice Income Advertising Population Price ShelveLoc Age
## 1  9.50       138     73          11        276   120       Bad  42
## 2 11.22       111     48          16        260    83      Good  65
## 3 10.06       113     35          10        269    80    Medium  59
## 4  7.40       117    100           4        466    97    Medium  55
## 5  4.15       141     64           3        340   128       Bad  38
## 6 10.81       124    113          13        501    72       Bad  78
##   Education Urban  US
## 1        17   Yes Yes
## 2        10   Yes Yes
## 3        12   Yes Yes
## 4        14   Yes Yes
## 5        13   Yes  No
## 6        16    No Yes</code></pre></div></p>

<p>Essa base dados é interessante, pois possui variáveis quantitativas e qualitativas/categóricas. Se você quiser ver algumas estatísticas sobre cada coluna dos seus dados, pode-se usar o <code>summary()</code>.</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">summary</span><span class="p">(</span><span class="n">Carseats</span><span class="p">)</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##      Sales          CompPrice       Income        Advertising  &lt;br /&gt;
##  Min.   : 0.000   Min.   : 77   Min.   : 21.00   Min.   : 0.000&lt;br /&gt;
##  1st Qu.: 5.390   1st Qu.:115   1st Qu.: 42.75   1st Qu.: 0.000&lt;br /&gt;
##  Median : 7.490   Median :125   Median : 69.00   Median : 5.000&lt;br /&gt;
##  Mean   : 7.496   Mean   :125   Mean   : 68.66   Mean   : 6.635&lt;br /&gt;
##  3rd Qu.: 9.320   3rd Qu.:135   3rd Qu.: 91.00   3rd Qu.:12.000&lt;br /&gt;
##  Max.   :16.270   Max.   :175   Max.   :120.00   Max.   :29.000&lt;br /&gt;
##    Population        Price        ShelveLoc        Age     &lt;br /&gt;
##  Min.   : 10.0   Min.   : 24.0   Bad   : 96   Min.   :25.00&lt;br /&gt;
##  1st Qu.:139.0   1st Qu.:100.0   Good  : 85   1st Qu.:39.75&lt;br /&gt;
##  Median :272.0   Median :117.0   Medium:219   Median :54.50&lt;br /&gt;
##  Mean   :264.8   Mean   :115.8                Mean   :53.32&lt;br /&gt;
##  3rd Qu.:398.5   3rd Qu.:131.0                3rd Qu.:66.00&lt;br /&gt;
##  Max.   :509.0   Max.   :191.0                Max.   :80.00&lt;br /&gt;
##    Education    Urban       US   &lt;br /&gt;
##  Min.   :10.0   No :118   No :142&lt;br /&gt;
##  1st Qu.:12.0   Yes:282   Yes:258&lt;br /&gt;
##  Median :14.0                    &lt;br /&gt;
##  Mean   :13.9                    &lt;br /&gt;
##  3rd Qu.:16.0                    &lt;br /&gt;
##  Max.   :18.0</code></pre></div></p>

<h2 id="modelo-linear">Modelo Linear</h2>

<p>Usar o modelo de regressão linear no R é bastante simples. Vamos estimar um modelo linear (função <code>lm()</code>) em que a variável dependente (y) é a variável de vendas, <em>Sales</em>, e utilizaremos duas variáveis independentes (<em>features</em>), <em>Price</em> e <em>CompPrice</em>.</p>

<p>A função <code>lm()</code> utiliza a estrutura de fórmula para definição do modelo. Essa estrutura é uma organização muito comum em diversas funções de modelo no R. A estrutura de fórmula separa a variável dependente das demais variáveis explicativas pelo símbolo <code>~</code>. À esquerda de <code>~</code> fica a variável dependente que você deseja estimar, e à direita as demais variáveis explicativas.</p>

<p>No parâmetro <code>data</code>, é informado o conjunto de dados que contém as variáveis que estão listadas na fórmula. Essa função possui outros parâmetros opcionais que estão listados no <em>help</em> (<code>?lm</code>).</p>

<p>Apesar de comum, é importante ressaltar que a estrutura de fórmula não é utilizada em todos os modelos no R. Em alguns casos, o modelo pode ser definido por dois parâmetros, <code>x</code> e <code>y</code>, que recebem os valores das variáveis independentes e dependente, respectivamente. Eventualmente, iremos trabalhar com algum modelo que está estruturado dessa forma. Podem existir outras formas de estruturação de um modelo no R, mas são mais raras.</p>

<p>Como dito, usar o modelo linear em R é muito simples:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">fit</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">lm</span><span class="p">(</span><span class="n">Sales</span> <span class="o">~</span> <span class="n">Price</span> <span class="o">+</span> <span class="n">CompPrice</span><span class="p">,</span> <span class="n">data</span> <span class="o">=</span> <span class="n">Carseats</span><span class="p">)</span>
<span class="n">fit</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">## 
## Call:
## lm(formula = Sales ~ Price + CompPrice, data = Carseats)
## 
## Coefficients:
## (Intercept)        Price    CompPrice&lt;br /&gt;
##     6.27869     -0.08746      0.09078</code></pre></div></p>

<p>Bem, como quase tudo no R, não existe uma única forma de executar essa função. Você poderia estimar o modelo direto sem informar o parâmetro <code>data</code>:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">fit</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">lm</span><span class="p">(</span><span class="n">Carseats</span><span class="o">$</span><span class="n">Sales</span> <span class="o">~</span> <span class="n">Carseats</span><span class="o">$</span><span class="n">Price</span> <span class="o">+</span> <span class="n">Carseats</span><span class="o">$</span><span class="n">CompPrice</span><span class="p">)</span>
<span class="n">fit</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">## 
## Call:
## lm(formula = Carseats$Sales ~ Carseats$Price + Carseats$CompPrice)
## 
## Coefficients:
##        (Intercept)      Carseats$Price  Carseats$CompPrice&lt;br /&gt;
##            6.27869            -0.08746             0.09078</code></pre></div></p>

<p>Percebeu que o resultado foi igual? Além disso, considerando que as vendas estão controladas só por esses dois fatores, você vê que as vendas são negativamente afetadas pelo próprio preço e positivamente afetas pelo preço do competidor. Porém, não estamos vendo os desvios-padrão para fazer a análise mais correta. Como fazer pra ver mais detalhes. Novamente, usaremos o <code>summary()</code>.</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">fit</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">lm</span><span class="p">(</span><span class="n">Sales</span> <span class="o">~</span> <span class="n">Price</span> <span class="o">+</span> <span class="n">CompPrice</span><span class="p">,</span> <span class="n">data</span> <span class="o">=</span> <span class="n">Carseats</span><span class="p">)</span>
<span class="n">summary</span><span class="p">(</span><span class="n">fit</span><span class="p">)</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">## 
## Call:
## lm(formula = Sales ~ Price + CompPrice, data = Carseats)
## 
## Residuals:
##     Min      1Q  Median      3Q     Max 
## -5.5285 -1.6207 -0.2404  1.5269  6.2437 
## 
## Coefficients:
##              Estimate Std. Error t value Pr(&amp;gt;|t|)  &lt;br /&gt;
## (Intercept)  6.278692   0.932774   6.731 5.91e-11 &lt;strong&gt;*
## Price       -0.087458   0.005914 -14.788  &amp;lt; 2e-16 ***
## CompPrice    0.090777   0.009132   9.941  &amp;lt; 2e-16 ***
## —
## Signif. codes:  0 ‘&lt;/strong&gt;&lt;em&gt;’ 0.001 ‘**’ 0.01 ‘&lt;/em&gt;’ 0.05 ‘.’ 0.1 ‘ ‘ 1
## 
## Residual standard error: 2.269 on 397 degrees of freedom
## Multiple R-squared:  0.3578,	Adjusted R-squared:  0.3546 
## F-statistic: 110.6 on 2 and 397 DF,  p-value: &amp;lt; 2.2e-16</code></pre></div></p>

<p>Se você tiver que usar todas as variáveis e sua base dados possuir um grande número de colunas (variáveis), não é necessário explicitá-las uma a uma. Basta utilizar <code>.</code>.</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">fit</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">lm</span><span class="p">(</span><span class="n">Sales</span> <span class="o">~</span> <span class="err">.</span><span class="p">,</span> <span class="n">data</span> <span class="o">=</span> <span class="n">Carseats</span><span class="p">)</span>
<span class="n">summary</span><span class="p">(</span><span class="n">fit</span><span class="p">)</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">## 
## Call:
## lm(formula = Sales ~ ., data = Carseats)
## 
## Residuals:
##     Min      1Q  Median      3Q     Max 
## -2.8692 -0.6908  0.0211  0.6636  3.4115 
## 
## Coefficients:
##                   Estimate Std. Error t value Pr(&amp;gt;|t|)  &lt;br /&gt;
## (Intercept)      5.6606231  0.6034487   9.380  &amp;lt; 2e-16 &lt;strong&gt;*
## CompPrice        0.0928153  0.0041477  22.378  &amp;lt; 2e-16 ***
## Income           0.0158028  0.0018451   8.565 2.58e-16 ***
## Advertising      0.1230951  0.0111237  11.066  &amp;lt; 2e-16 ***
## Population       0.0002079  0.0003705   0.561    0.575  &lt;br /&gt;
## Price           -0.0953579  0.0026711 -35.700  &amp;lt; 2e-16 ***
## ShelveLocGood    4.8501827  0.1531100  31.678  &amp;lt; 2e-16 ***
## ShelveLocMedium  1.9567148  0.1261056  15.516  &amp;lt; 2e-16 ***
## Age             -0.0460452  0.0031817 -14.472  &amp;lt; 2e-16 ***
## Education       -0.0211018  0.0197205  -1.070    0.285  &lt;br /&gt;
## UrbanYes         0.1228864  0.1129761   1.088    0.277  &lt;br /&gt;
## USYes           -0.1840928  0.1498423  -1.229    0.220  &lt;br /&gt;
## —
## Signif. codes:  0 ‘&lt;/strong&gt;&lt;em&gt;’ 0.001 ‘**’ 0.01 ‘&lt;/em&gt;’ 0.05 ‘.’ 0.1 ‘ ‘ 1
## 
## Residual standard error: 1.019 on 388 degrees of freedom
## Multiple R-squared:  0.8734,	Adjusted R-squared:  0.8698 
## F-statistic: 243.4 on 11 and 388 DF,  p-value: &amp;lt; 2.2e-16</code></pre></div></p>

<p>E se você quiser excluir alguma variável da análise? Da mesma forma que você utiliza o <code>+</code> pra adicionar variáveis, o <code>-</code> pode ser utilizado pra excluí-las.</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">fit</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">lm</span><span class="p">(</span><span class="n">Sales</span> <span class="o">~</span> <span class="err">.</span> <span class="o">-</span> <span class="n">Urban</span><span class="p">,</span> <span class="n">data</span> <span class="o">=</span> <span class="n">Carseats</span><span class="p">)</span>
<span class="n">summary</span><span class="p">(</span><span class="n">fit</span><span class="p">)</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">## 
## Call:
## lm(formula = Sales ~ . - Urban, data = Carseats)
## 
## Residuals:
##     Min      1Q  Median      3Q     Max 
## -2.8498 -0.6992  0.0300  0.6436  3.4616 
## 
## Coefficients:
##                   Estimate Std. Error t value Pr(&amp;gt;|t|)  &lt;br /&gt;
## (Intercept)      5.7267269  0.6005220   9.536   &amp;lt;2e-16 &lt;strong&gt;*
## CompPrice        0.0930440  0.0041433  22.457   &amp;lt;2e-16 ***
## Income           0.0158656  0.0018447   8.601   &amp;lt;2e-16 ***
## Advertising      0.1235923  0.0111169  11.118   &amp;lt;2e-16 ***
## Population       0.0001822  0.0003698   0.493    0.622  &lt;br /&gt;
## Price           -0.0953182  0.0026715 -35.680   &amp;lt;2e-16 ***
## ShelveLocGood    4.8365318  0.1526307  31.688   &amp;lt;2e-16 ***
## ShelveLocMedium  1.9458754  0.1257409  15.475   &amp;lt;2e-16 ***
## Age             -0.0459156  0.0031802 -14.438   &amp;lt;2e-16 ***
## Education       -0.0219546  0.0197095  -1.114    0.266  &lt;br /&gt;
## USYes           -0.1836133  0.1498769  -1.225    0.221  &lt;br /&gt;
## —
## Signif. codes:  0 ‘&lt;/strong&gt;&lt;em&gt;’ 0.001 ‘**’ 0.01 ‘&lt;/em&gt;’ 0.05 ‘.’ 0.1 ‘ ‘ 1
## 
## Residual standard error: 1.019 on 389 degrees of freedom
## Multiple R-squared:  0.873,	Adjusted R-squared:  0.8698 
## F-statistic: 267.5 on 10 and 389 DF,  p-value: &amp;lt; 2.2e-16</code></pre></div></p>

<h2 id="acessando-os-resultados">Acessando os resultados</h2>

<p>O objeto <code>fit</code> que foi criado a partir da função <code>lm()</code> carrega consigo uma série de resultados que podem ser recuperados a qualquer momento. Se você quiser acessar os resíduos, existem duas formas:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="c1"># vamos mostrar apenas os 10 primeiros</span>
<span class="n">fit</span><span class="o">$</span><span class="n">residuals</span><span class="p">[</span><span class="m">1</span><span class="o">:</span><span class="m">10</span><span class="p">]</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##          1          2          3          4          5          6 
##  2.2886707 -1.1584731  0.8147224 -1.0624075 -1.9131450  1.0342126 
##          7          8          9         10 
##  0.4669361  0.3339878  0.3492739 -1.2152188</code></pre></div></p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">residuals</span><span class="p">(</span><span class="n">fit</span><span class="p">)[</span><span class="m">1</span><span class="o">:</span><span class="m">10</span><span class="p">]</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##          1          2          3          4          5          6 
##  2.2886707 -1.1584731  0.8147224 -1.0624075 -1.9131450  1.0342126 
##          7          8          9         10 
##  0.4669361  0.3339878  0.3492739 -1.2152188</code></pre></div></p>

<p>Para acessar os valores previstos (com dados utilizados na estimação), também existem duas formas:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="c1"># vamos mostrar apenas os 10 primeiros</span>
<span class="n">fit</span><span class="o">$</span><span class="n">fitted.values</span><span class="p">[</span><span class="m">1</span><span class="o">:</span><span class="m">10</span><span class="p">]</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##         1         2         3         4         5         6         7 
##  7.211329 12.378473  9.245278  8.462407  6.063145  9.775787  6.163064 
##         8         9        10 
## 11.516012  6.190726  5.905219</code></pre></div></p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">fitted</span><span class="p">(</span><span class="n">fit</span><span class="p">)[</span><span class="m">1</span><span class="o">:</span><span class="m">10</span><span class="p">]</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##         1         2         3         4         5         6         7 
##  7.211329 12.378473  9.245278  8.462407  6.063145  9.775787  6.163064 
##         8         9        10 
## 11.516012  6.190726  5.905219</code></pre></div></p>

<p>O mesmo vale para acessar os coeficientes estimados.</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">coef</span><span class="p">(</span><span class="n">fit</span><span class="p">)</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##     (Intercept)       CompPrice          Income     Advertising 
##    5.7267268794    0.0930440486    0.0158655664    0.1235923300 
##      Population           Price   ShelveLocGood ShelveLocMedium 
##    0.0001822397   -0.0953181549    4.8365318149    1.9458754343 
##             Age       Education           USYes 
##   -0.0459156254   -0.0219546072   -0.1836132570</code></pre></div></p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">fit</span><span class="o">$</span><span class="n">coefficients</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##     (Intercept)       CompPrice          Income     Advertising 
##    5.7267268794    0.0930440486    0.0158655664    0.1235923300 
##      Population           Price   ShelveLocGood ShelveLocMedium 
##    0.0001822397   -0.0953181549    4.8365318149    1.9458754343 
##             Age       Education           USYes 
##   -0.0459156254   -0.0219546072   -0.1836132570</code></pre></div></p>

<p>Para verificar tudo que está disponível no objeto <code>fit</code>, podemos listar seus nomes usando a função <code>names()</code>. O objeto <code>fit</code> é uma lista na verdade em que são alocados vários objetos de diversos tipos diferentes.</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">names</span><span class="p">(</span><span class="n">fit</span><span class="p">)</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##  [1] “coefficients”  “residuals”     “effects”       “rank”       &lt;br /&gt;
##  [5] “fitted.values” “assign”        “qr”            “df.residual”&lt;br /&gt;
##  [9] “contrasts”     “xlevels”       “call”          “terms”      &lt;br /&gt;
## [13] “model”</code></pre></div></p>

<p>Outro ponto importante é sobre o <code>summary()</code> aplicado ao <code>fit</code>. Como você notou, ele apresenta os resultados de uma maneira diferente. Para acessar os resultados do <code>summary(fit)</code>, podemos fazer o seguinte:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">summary.fit</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">summary</span><span class="p">(</span><span class="n">fit</span><span class="p">)</span>
<span class="n">names</span><span class="p">(</span><span class="n">summary.fit</span><span class="p">)</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##  [1] “call”          “terms”         “residuals”     “coefficients” 
##  [5] “aliased”       “sigma”         “df”            “r.squared”  &lt;br /&gt;
##  [9] “adj.r.squared” “fstatistic”    “cov.unscaled”</code></pre></div></p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">summary.fit</span><span class="o">$</span><span class="n">coefficients</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##                      Estimate   Std. Error     t value      Pr(&amp;gt;|t|)
## (Intercept)      5.7267268794 0.6005219791   9.5362486  1.650454e-19
## CompPrice        0.0930440486 0.0041432948  22.4565357  3.210578e-72
## Income           0.0158655664 0.0018446501   8.6008540  1.965977e-16
## Advertising      0.1235923300 0.0111169041  11.1175134  4.032236e-25
## Population       0.0001822397 0.0003697923   0.4928164  6.224204e-01
## Price           -0.0953181549 0.0026714558 -35.6802286 9.833525e-125
## ShelveLocGood    4.8365318149 0.1526306709  31.6878107 8.259393e-110
## ShelveLocMedium  1.9458754343 0.1257408746  15.4752815  1.955843e-42
## Age             -0.0459156254 0.0031802330 -14.4378181  3.870315e-38
## Education       -0.0219546072 0.0197095406  -1.1139076  2.660066e-01
## USYes           -0.1836132570 0.1498769114  -1.2250937  2.212812e-01</code></pre></div></p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">summary.fit</span><span class="o">$</span><span class="n">adj.r.squared</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">## [1] 0.8697633</code></pre></div></p>

<h2 id="variveis-categricas">Variáveis Categóricas</h2>

<p>Se você prestou atenção, você percebeu que o R tratou automaticamente as variáveis categóricas, escolhendo um nível como base e estimando um parâmetro para os demais níveis. O efeito seria o mesmo de você modificar sua base para transformar cada nível em uma variável <em>dummy</em> (0 ou 1) e excluir um determinado nível no momento de estimação do modelo.</p>

<p>O R automaticamente considera o primeiro nível como base. Veja que para a variável <em>ShelveLoc</em> o nível <em>Bad</em> foi escolhido como base. Para verificarmos se ele é realmente o primeiro nível, façamos o seguinte:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">levels</span><span class="p">(</span><span class="n">Carseats</span><span class="o">$</span><span class="n">ShelveLoc</span><span class="p">)</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">## [1] “Bad”    “Good”   “Medium”</code></pre></div></p>

<p>Para mudar o nível de referência, vamos utilizar a função <code>contrast()</code>. Basicamente, essa função irá criar os atributos que serão utilizados pela função <code>lm()</code> no momento de estimação do modelo. Por exemplo:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">contrasts</span><span class="p">(</span><span class="n">Carseats</span><span class="o">$</span><span class="n">ShelveLoc</span><span class="p">)</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##        Good Medium
## Bad       0      0
## Good      1      0
## Medium    0      1</code></pre></div></p>

<p>Para alterar o nível de referência podemos a função <code>contr.treatment()</code>:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">contrasts</span><span class="p">(</span><span class="n">Carseats</span><span class="o">$</span><span class="n">ShelveLoc</span><span class="p">)</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">contr.treatment</span><span class="p">(</span><span class="n">n</span> <span class="o">=</span> <span class="n">levels</span><span class="p">(</span><span class="n">Carseats</span><span class="o">$</span><span class="n">ShelveLoc</span><span class="p">),</span>
                                                 <span class="n">base</span> <span class="o">=</span> <span class="m">2</span><span class="p">)</span>
<span class="n">contrasts</span><span class="p">(</span><span class="n">Carseats</span><span class="o">$</span><span class="n">ShelveLoc</span><span class="p">)</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##        Bad Medium
## Bad      1      0
## Good     0      0
## Medium   0      1</code></pre></div>
Informamos quais eram os níveis e dissemos que queremos que o segundo (<em>Good</em>) seja usado como referência.</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">fit</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">lm</span><span class="p">(</span><span class="n">Sales</span> <span class="o">~</span> <span class="err">.</span><span class="p">,</span> <span class="n">data</span> <span class="o">=</span> <span class="n">Carseats</span><span class="p">)</span>
<span class="n">summary</span><span class="p">(</span><span class="n">fit</span><span class="p">)</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">## 
## Call:
## lm(formula = Sales ~ ., data = Carseats)
## 
## Residuals:
##     Min      1Q  Median      3Q     Max 
## -2.8692 -0.6908  0.0211  0.6636  3.4115 
## 
## Coefficients:
##                   Estimate Std. Error t value Pr(&amp;gt;|t|)  &lt;br /&gt;
## (Intercept)     10.5108058  0.6039582  17.403  &amp;lt; 2e-16 &lt;strong&gt;*
## CompPrice        0.0928153  0.0041477  22.378  &amp;lt; 2e-16 ***
## Income           0.0158028  0.0018451   8.565 2.58e-16 ***
## Advertising      0.1230951  0.0111237  11.066  &amp;lt; 2e-16 ***
## Population       0.0002079  0.0003705   0.561    0.575  &lt;br /&gt;
## Price           -0.0953579  0.0026711 -35.700  &amp;lt; 2e-16 ***
## ShelveLocBad    -4.8501827  0.1531100 -31.678  &amp;lt; 2e-16 ***
## ShelveLocMedium -2.8934679  0.1308928 -22.106  &amp;lt; 2e-16 ***
## Age             -0.0460452  0.0031817 -14.472  &amp;lt; 2e-16 ***
## Education       -0.0211018  0.0197205  -1.070    0.285  &lt;br /&gt;
## UrbanYes         0.1228864  0.1129761   1.088    0.277  &lt;br /&gt;
## USYes           -0.1840928  0.1498423  -1.229    0.220  &lt;br /&gt;
## —
## Signif. codes:  0 ‘&lt;/strong&gt;&lt;em&gt;’ 0.001 ‘**’ 0.01 ‘&lt;/em&gt;’ 0.05 ‘.’ 0.1 ‘ ‘ 1
## 
## Residual standard error: 1.019 on 388 degrees of freedom
## Multiple R-squared:  0.8734,	Adjusted R-squared:  0.8698 
## F-statistic: 243.4 on 11 and 388 DF,  p-value: &amp;lt; 2.2e-16</code></pre></div></p>

<p>Para retornar para estrutura de <em>contrast</em> padrão é preciso definir como <code>NULL</code> o atributo <code>contrasts</code> da variável <code>ShelveLoc</code>.</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">attr</span><span class="p">(</span><span class="n">Carseats</span><span class="o">$</span><span class="n">ShelveLoc</span><span class="p">,</span> <span class="err">“</span><span class="n">contrasts</span><span class="err">”</span><span class="p">)</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">NULL</span></code></pre></div></p>

<h2 id="interaes-entre-variveis">Interações entre variáveis</h2>

<p>Para realizar interações entre variáveis, utiliza-se o símbolo <code>*</code>. Ou seja, se você quiser a interação entre as variáveis <code>V1</code> e <code>V2</code> no seu modelo basta incluir <code>V1 * V2</code> na fórmula do seu modelo.</p>

<p>Voltando ao nosso exemplo, podemos fazer a interação entre as variáveis <code>Price</code> e <code>Urban</code> da seguinte forma:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">fit</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">lm</span><span class="p">(</span><span class="n">Sales</span> <span class="o">~</span> <span class="err">.</span> <span class="o">+</span> <span class="n">Price</span><span class="o">*</span><span class="n">Urban</span><span class="p">,</span> <span class="n">data</span> <span class="o">=</span> <span class="n">Carseats</span><span class="p">)</span>
<span class="n">summary</span><span class="p">(</span><span class="n">fit</span><span class="p">)</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">## 
## Call:
## lm(formula = Sales ~ . + Price * Urban, data = Carseats)
## 
## Residuals:
##     Min      1Q  Median      3Q     Max 
## -2.8723 -0.7011  0.0298  0.6723  3.3937 
## 
## Coefficients:
##                   Estimate Std. Error t value Pr(&amp;gt;|t|)  &lt;br /&gt;
## (Intercept)      5.5386942  0.7371346   7.514 4.02e-13 &lt;strong&gt;*
## CompPrice        0.0928744  0.0041576  22.338  &amp;lt; 2e-16 ***
## Income           0.0157950  0.0018475   8.549 2.91e-16 ***
## Advertising      0.1233524  0.0111724  11.041  &amp;lt; 2e-16 ***
## Population       0.0002072  0.0003709   0.559    0.577  &lt;br /&gt;
## Price           -0.0943707  0.0043411 -21.739  &amp;lt; 2e-16 ***
## ShelveLocGood    4.8492903  0.1533223  31.628  &amp;lt; 2e-16 ***
## ShelveLocMedium  1.9557229  0.1263016  15.485  &amp;lt; 2e-16 ***
## Age             -0.0461214  0.0031964 -14.429  &amp;lt; 2e-16 ***
## Education       -0.0206165  0.0198153  -1.040    0.299  &lt;br /&gt;
## UrbanYes         0.2845509  0.5712614   0.498    0.619  &lt;br /&gt;
## USYes           -0.1855349  0.1501027  -1.236    0.217  &lt;br /&gt;
## Price:UrbanYes  -0.0014091  0.0048808  -0.289    0.773  &lt;br /&gt;
## —
## Signif. codes:  0 ‘&lt;/strong&gt;&lt;em&gt;’ 0.001 ‘**’ 0.01 ‘&lt;/em&gt;’ 0.05 ‘.’ 0.1 ‘ ‘ 1
## 
## Residual standard error: 1.02 on 387 degrees of freedom
## Multiple R-squared:  0.8734,	Adjusted R-squared:  0.8695 
## F-statistic: 222.6 on 12 and 387 DF,  p-value: &amp;lt; 2.2e-16</code></pre></div></p>

<p>Um detalhe importante é que esse tipo de interação não funciona quando o objetivo é elevar uma variável contínuo ao quadrado. Por exemplo: <code>Price * Price</code> ou <code>Price^2</code>. Para conseguir obter o resultado pretendido usamos o <code>I(.)</code>.</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">fit</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">lm</span><span class="p">(</span><span class="n">Sales</span> <span class="o">~</span> <span class="err">.</span> <span class="o">+</span> <span class="n">I</span><span class="p">(</span><span class="n">Price</span><span class="o">^</span><span class="m">2</span><span class="p">),</span> <span class="n">data</span> <span class="o">=</span> <span class="n">Carseats</span><span class="p">,</span> <span class="n">x</span> <span class="o">=</span> <span class="n">TRUE</span><span class="p">)</span>
<span class="n">summary</span><span class="p">(</span><span class="n">fit</span><span class="p">)</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">## 
## Call:
## lm(formula = Sales ~ . + I(Price^2), data = Carseats, x = TRUE)
## 
## Residuals:
##     Min      1Q  Median      3Q     Max 
## -2.8593 -0.7138  0.0228  0.6729  3.3583 
## 
## Coefficients:
##                   Estimate Std. Error t value Pr(&amp;gt;|t|)  &lt;br /&gt;
## (Intercept)      6.247e+00  9.648e-01   6.475 2.87e-10 &lt;strong&gt;*
## CompPrice        9.296e-02  4.154e-03  22.379  &amp;lt; 2e-16 ***
## Income           1.578e-02  1.846e-03   8.545 3.01e-16 ***
## Advertising      1.232e-01  1.113e-02  11.070  &amp;lt; 2e-16 ***
## Population       2.133e-04  3.707e-04   0.575    0.565  &lt;br /&gt;
## Price           -1.060e-01  1.392e-02  -7.618 2.00e-13 ***
## ShelveLocGood    4.845e+00  1.533e-01  31.602  &amp;lt; 2e-16 ***
## ShelveLocMedium  1.957e+00  1.262e-01  15.513  &amp;lt; 2e-16 ***
## Age             -4.593e-02  3.187e-03 -14.412  &amp;lt; 2e-16 ***
## Education       -2.296e-02  1.987e-02  -1.155    0.249  &lt;br /&gt;
## UrbanYes         1.196e-01  1.131e-01   1.057    0.291  &lt;br /&gt;
## USYes           -1.793e-01  1.500e-01  -1.195    0.233  &lt;br /&gt;
## I(Price^2)       4.638e-05  5.948e-05   0.780    0.436  &lt;br /&gt;
## —
## Signif. codes:  0 ‘&lt;/strong&gt;&lt;em&gt;’ 0.001 ‘**’ 0.01 ‘&lt;/em&gt;’ 0.05 ‘.’ 0.1 ‘ ‘ 1
## 
## Residual standard error: 1.019 on 387 degrees of freedom
## Multiple R-squared:  0.8736,	Adjusted R-squared:  0.8697 
## F-statistic: 222.9 on 12 and 387 DF,  p-value: &amp;lt; 2.2e-16</code></pre></div></p>

<h2 id="realizando-predies">Realizando predições</h2>

<p>Concluindo essa primeira explanação sobre modelos no R, vamos falar sobre predições. No caso, da função <code>predict()</code>. Como o <code>summary()</code>, a função <code>predict()</code> é uma função genérica. Isto significa que ela se adapta ao objeto que está sendo passado para função. Isto é, ela não é exclusiva da função <code>lm()</code>, podendo ser utilizada com outros modelos.</p>

<p>Vamos separar os dados em dois grupos, um para estimar o modelo e outro para realizar as predições. No desenvolvimento de modelos de aprendizado de máquina (<em>machine learning</em>) esses grupos são chamados, respectivamente, de grupo de treinamento e grupo de teste.</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="c1"># Número de observações</span>
<span class="n">N</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">nrow</span><span class="p">(</span><span class="n">Carseats</span><span class="p">)</span> 
<span class="c1"># Fixar a seed para reproduzir os resultados</span>
<span class="n">set.seed</span><span class="p">(</span><span class="m">3943</span><span class="p">)</span>
<span class="c1"># índices para separar dados de treinamento/teste</span>
<span class="n">idx</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">sample</span><span class="p">(</span><span class="m">1</span><span class="o">:</span><span class="n">N</span><span class="p">,</span> <span class="n">round</span><span class="p">(</span><span class="m">0.8</span><span class="o">*</span><span class="n">N</span><span class="p">),</span> <span class="n">replace</span> <span class="o">=</span> <span class="n">FALSE</span><span class="p">)</span>
<span class="c1"># Base de dados de treinamento </span>
<span class="n">Carseats.train</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">Carseats</span><span class="p">[</span><span class="n">idx</span><span class="p">,]</span>
<span class="c1"># Base de dados de teste</span>
<span class="c1"># As linhas que estão listadas no objeto idx são excluídas</span>
<span class="n">Carseats.test</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">Carseats</span><span class="p">[</span><span class="o">-</span><span class="n">idx</span><span class="p">,]</span>
<span class="c1"># Estima o modelo</span>
<span class="n">fit</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">lm</span><span class="p">(</span><span class="n">Sales</span> <span class="o">~</span> <span class="err">.</span><span class="p">,</span> <span class="n">data</span> <span class="o">=</span> <span class="n">Carseats.train</span><span class="p">)</span>
<span class="c1"># Predição a partir do modelo estimado</span>
<span class="n">pred</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">predict</span><span class="p">(</span><span class="n">object</span> <span class="o">=</span> <span class="n">fit</span><span class="p">,</span> <span class="n">newdata</span> <span class="o">=</span> <span class="n">Carseats.test</span><span class="p">)</span>
<span class="n">head</span><span class="p">(</span><span class="n">pred</span><span class="p">)</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##         3         7        14        15        22        25 
##  9.229138  6.157952 11.786486  9.517201 11.078857 10.037942</code></pre></div></p>

<p>Um fato importante sobre o argumento <code>newdata</code> é que é necessário que ele possua todas as variáveis que estão no modelo original. Se mais variáveis forem providas, elas serão desconsideradas pela função.</p>

<h2 id="diagnsticos">Diagnósticos</h2>

<p>Após a estimação do modelo, é comum verificar se algumas hipóteses realmente são válidas. Uma maneira informal de se fazer isso é checar alguns gráficos. O R fornece uma série de diagnósticos ao passar o objeto que contém o modelo estimado (<code>fit</code> no nosso caso) na função <code>plot()</code>.</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">plot</span><span class="p">(</span><span class="n">fit</span><span class="p">)</span></code></pre></div></p>

<p><img src="/figures/source/2016-06-06-intro-modelos-r/unnamed-chunk-22-1.png" alt="plot of chunk unnamed-chunk-22" /><img src="/figures/source/2016-06-06-intro-modelos-r/unnamed-chunk-22-2.png" alt="plot of chunk unnamed-chunk-22" /><img src="/figures/source/2016-06-06-intro-modelos-r/unnamed-chunk-22-3.png" alt="plot of chunk unnamed-chunk-22" /><img src="/figures/source/2016-06-06-intro-modelos-r/unnamed-chunk-22-4.png" alt="plot of chunk unnamed-chunk-22" /></p>

<p>A função retornará 4 gráficos que auxiliarão a análise sobre a violação de alguma hipótese. Testes formais também podem ser realizados, mas vamos nos restringir aqui a essa análise gráfica.</p>

<p>O primeiro plot (canto superior esquerdo) tem o objetivo de identificar a possível existência de não-linearidade nos dados.</p>

<p>O segundo gráfico tenta evidenciar se o resíduos são normalmente distribuídos. Se os valores se afastam da linha traçada, é sinal de não-normalidade dos resíduos.</p>

<p>O terceiro plot (canto inferior esquerdo) dá um indicativo sobre a violação ou não da hipótese de homocedasticidade (variância constante do termo aleatório). Quanto mais horizontal for a linha vermelha, mais forte é a evidência de homocedasticidade.</p>

<p>Por último, o quarto gráfico auxilia a identificação de pontos (valores extremos ou <em>outliers</em>) que influenciam consideravelmente a reta de regressão. Nem todo <em>outlier</em> afetará a reta, mas aqueles que alteram podem afetar consideravelmente o poder de generalização do modelo. Assim, pode ser necessário excluí-los do processo de estimação do modelo.</p>

<p>No nosso caso, os limites calculados para identificação de outliers não aparecem no gráfico, indicando que não há valores extremos que estão influenciando a reta estimada. No entanto, caso esse limite apareça e algum ponto esteja além desse limite, há indicação de que aquele ponto pode estar exercendo influência sobre a reta.</p>

<p>Para testes formais, dê uma olhada no pacote <code>lmtest</code>.</p>

<h2 id="interpretando-os-resultados-e-consideraes-finais">Interpretando os resultados e considerações finais</h2>

<p>Nosso objetivo com esse post foi explicar o uso básico de modelos no R com a função <code>lm()</code>. Interpretar os resultados de um modelo envolvem alguns conceitos estatísticos que talvez mereçam posts específicos.</p>

<p>Porém, para ajudar no entendimento e dar mais sentido à alguns detalhes do <code>summary()</code> usado para ver resultados de um modelo, segue alguns links com ótimas explicações de como entender e interpretar modelos.</p>

<ul>
  <li><a href="http://www.theanalysisfactor.com/interpreting-regression-coefficients/">Interpreting Regression Coefficients</a></li>
  <li><a href="http://blog.yhat.com/posts/r-lm-summary.html">Interpreting Linear Models in R</a></li>
  <li><a href="https://rstudio-pubs-static.s3.amazonaws.com/119859_a290e183ff2f46b2858db66c3bc9ed3a.html">Interpreting Simple Linear Model Output in R</a></li>
  <li><a href="https://pt.wikipedia.org/wiki/Desvio_padr%C3%A3o">Desvio Padrão</a></li>
  <li><a href="https://pt.wikipedia.org/wiki/Valor-p">P-Valor</a></li>
</ul>

<p>A ideia até aqui é que tenha sido quebrada a primeira barreira e que você já consiga estimar o modelo de regressão linear no R.</p>

<p>Provavelmente, você necessitará usar outros modelos nas suas análises, mas entender como funciona o modelo linear já é uma grande ajuda para estimação de diversos outros modelos.</p>

<p>Como dito, esse é um assunto que merece diversos outros posts mais detalhados e específicos, e eles virão com o tempo. Até lá, deixe seu comentário com sugestões ou dúvidas para que possamos ajudar!</p>

<h2 id="referncias">Referências</h2>

<ul>
  <li><a href="http://data.princeton.edu/R/linearModels.html">Linear Models</a></li>
  <li><a href="http://www.statmethods.net/stats/regression.html">Multiple (Linear) Regression</a></li>
  <li><a href="http://www.montefiore.ulg.ac.be/~kvansteen/GBIO0009-1/ac20092010/Class8/Using%20R%20for%20linear%20regression.pdf">Using R for Linear Regression</a></li>
  <li><a href="http://www.statmethods.net/stats/rdiagnostics.html">Regression Diagnostics</a></li>
</ul>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tudo sobre Joins (merge) em R]]></title>
    <link href="http://fulljoin.com.br/blog/2016/05/25/tudo-sobre-joins/"/>
    <updated>2016-05-25T21:00:00-03:00</updated>
    <id>http://fulljoin.com.br/blog/2016/05/25/tudo-sobre-joins</id>
    <content type="html"><![CDATA[<p>Nessa sequência de posts aprenderemos tudo sobre Joins (merges) em R, abordando questões teóricas e práticas, com exemplos usando R base e o pacote dplyr. Após ler esse post, você vai saber o que é, para que serve, quando e como usar diversos tipo de joins.</p>

<!-- More -->

<p>Join é um conceito bastante comum para quem já trabalha com bancos de dados (principalmente com SQL). Porém, para quem está se desenvolvendo em Análise de Dados sem um background em programação de sistemas, talvez esse conceito não seja básico.</p>

<h2 id="afinal-o-que--join-ou-merge">Afinal, o que é Join (ou merge)?</h2>

<p>Nada mais é do que juntar dois conjuntos de dados por meio de um ou mais campos em comum. Esses campos em comum são geralmente chamados de chaves.</p>

<p>Existem vários tipos de joins, dos mais simples aos mais complexos, cada um com sua utilidade e momento certo de uso. Além disso existem várias questões que devem ser observadas no uso de joins, como a granularidade dos dados e ocorrência das amostras nos dois conjuntos de dados.</p>

<h2 id="por-que-usar-joins">Por que usar joins?</h2>

<p>Se você é novo no mundo da manipulação de dados, talvez já tenha se perguntado: “De onde vem essa necessidade de usar joins? Por que insistem em usar tantos códigos e separar os dados uns dos outros em tabelas e arquivos diferentes? Por que não simplificar as coisas?”.</p>

<p>Pois saiba que o uso dos joins é uma consequência direta de uma boa prática imposta pelos bancos de dados relacionais: a normalização. Normalização são “regras” para estruturar seus dados de forma que eles ocupem o menor espaço possível e fiquem bastante consistentes na hora de inserir, alterar ou excluir dados.</p>

<p>No entanto, essas regras adicionam complexidade à estrutura dos dados, e graças a essa complexidade estrutural que surge a necessidade dos joins: juntar dados separados num lugar só.</p>

<p>Em um conjunto de dados normalizado (praticamente TODOS originados de sistemas), existe o conceito de chave: um código que representa uma ocorrência de forma única e inconfundível. Exemplos intuitivos de chave seriam o CPF, o CNPJ, código de um produto, o título de eleitor, etc…</p>

<p>Existem vários tipos de chaves (chave natural, surrogate, chave estrangeira, etc…), mas não vamos entrar nesse nível de detalhe. Para aprofundar mais sobre isso, sugiro <a href="http://www.programmerinterview.com/index.php/database-sql/differences-between-primary-and-foreign-keys/">essa leitura</a>.</p>

<p>Apenas mais uma observação: Os termos e conceitos usados a seguir são originários do mundo dos bancos de dados e SQL, mas, acredite, vale muito a pena conhecer os termos. Portanto, não se assuste! Os conceitos e a utilidade dos tipos de junções são mais importantes do que as nomenclaturas.</p>

<blockquote>
  <p>Dica: se você tem familiaridade com Excel, join nada mais é do que o famoso PROCV().</p>
</blockquote>

<h2 id="inner-join-ou-apenas-join">Inner join (ou apenas join)</h2>

<p>Trata-se do join mais simples, mais básico e mais usado dentre todos os outros tipos. Vamos explicar com um exemplo bem simples. Primeiro, vamos montar o conjunto de dados e carregar o pacote <code>dplyr</code>:</p>

<ul>
  <li><code>empregados</code>, com id, nome, idade, uf e id de um cargo</li>
</ul>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">library</span><span class="p">(</span><span class="n">dplyr</span><span class="p">)</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>

<span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">id.empregado</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="m">1</span><span class="o">:</span><span class="m">11</span>
<span class="n">nome.empregado</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">c</span><span class="p">(</span><span class="err">‘</span><span class="n">Renato</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">Miguel</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">Paulo</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">Patr</span><span class="err">í</span><span class="n">cia</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">In</span><span class="err">ê</span><span class="n">s</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">Saulo</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">Diego</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">Maria</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">Jose</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">Julia</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">Tiago</span><span class="err">’</span><span class="p">)</span>
<span class="n">idade</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">c</span><span class="p">(</span><span class="m">30</span><span class="p">,</span> <span class="m">31</span><span class="p">,</span> <span class="m">29</span><span class="p">,</span> <span class="m">30</span><span class="p">,</span> <span class="m">25</span><span class="p">,</span> <span class="m">30</span><span class="p">,</span> <span class="m">30</span><span class="p">,</span> <span class="m">35</span><span class="p">,</span> <span class="m">24</span><span class="p">,</span> <span class="m">31</span><span class="p">,</span> <span class="m">29</span><span class="p">)</span>
<span class="n">uf</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">c</span><span class="p">(</span><span class="err">‘</span><span class="n">MG</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">DF</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">CE</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">DF</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">DF</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">DF</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">RJ</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">SP</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">RS</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">SC</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">BA</span><span class="err">’</span><span class="p">)</span>
<span class="n">id.cargo</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">c</span><span class="p">(</span><span class="m">4</span><span class="p">,</span> <span class="m">4</span><span class="p">,</span> <span class="m">4</span><span class="p">,</span> <span class="m">4</span><span class="p">,</span> <span class="m">5</span><span class="p">,</span> <span class="m">4</span><span class="p">,</span> <span class="m">6</span><span class="p">,</span> <span class="m">3</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="m">2</span><span class="p">,</span> <span class="m">8</span><span class="p">)</span>
<span class="p">(</span><span class="n">empregados</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">data.frame</span><span class="p">(</span><span class="n">id.empregado</span><span class="p">,</span> <span class="n">nome.empregado</span><span class="p">,</span> <span class="n">idade</span><span class="p">,</span> <span class="n">uf</span><span class="p">,</span> <span class="n">id.cargo</span><span class="p">))</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##    id.empregado nome.empregado idade uf id.cargo
## 1             1         Renato    30 MG        4
## 2             2         Miguel    31 DF        4
## 3             3          Paulo    29 CE        4
## 4             4       Patrícia    30 DF        4
## 5             5           Inês    25 DF        5
## 6             6          Saulo    30 DF        4
## 7             7          Diego    30 RJ        6
## 8             8          Maria    35 SP        3
## 9             9           Jose    24 RS        1
## 10           10          Julia    31 SC        2
## 11           11          Tiago    29 BA        8</code></pre></div></p>

<ul>
  <li><code>cargos</code>, com id, nome, e salário do cargo</li>
</ul>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">id.cargo</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="m">1</span><span class="o">:</span><span class="m">7</span>
<span class="n">nome.cargo</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">c</span><span class="p">(</span><span class="err">‘</span><span class="n">T</span><span class="err">é</span><span class="n">cnico</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">Assistente</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">Consultor</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">Analista</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">Auditor</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">Gerente</span><span class="err">’</span><span class="p">,</span> <span class="err">‘</span><span class="n">Gestor</span><span class="err">’</span><span class="p">)</span>
<span class="n">salario</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">c</span><span class="p">(</span><span class="m">7000</span><span class="p">,</span> <span class="m">4000</span><span class="p">,</span> <span class="m">15000</span><span class="p">,</span> <span class="m">11000</span><span class="p">,</span> <span class="m">10000</span><span class="p">,</span> <span class="m">13000</span><span class="p">,</span> <span class="m">20000</span><span class="p">)</span>
<span class="p">(</span><span class="n">cargos</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">data.frame</span><span class="p">(</span><span class="n">id.cargo</span><span class="p">,</span> <span class="n">nome.cargo</span><span class="p">,</span> <span class="n">salario</span><span class="p">))</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##   id.cargo nome.cargo salario
## 1        1    Técnico    7000
## 2        2 Assistente    4000
## 3        3  Consultor   15000
## 4        4   Analista   11000
## 5        5    Auditor   10000
## 6        6    Gerente   13000
## 7        7     Gestor   20000</code></pre></div></p>

<p>Imagine que você recebeu essas dois conjuntos de dados será necessário calcular uma média salarial dos empregados por UF.</p>

<p>Se olharmos apenas <code>empregados</code>, cada ocorrência possui um código de cargo que ocupa, mas não temos nem o nome nem o salário do cargo. Se olharmos apenas <code>cargos</code>, cada ocorrência possui código de cargo mas não informações de quem o ocupa.</p>

<p>Para calcular a média por UF, precisaremos juntar esses dois conjuntos. Nesse caso, faremos isso usando o <em>INNER JOIN</em>.</p>

<p>Esse tipo de join cria um data frame com todos os campos de ambos conjuntos, mas  retornando somente as ocorrências (linhas) que possuem chaves iguais. Nossa chave é o campo <code>id.cargo</code>. Veja:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="p">(</span><span class="n">merge.r.base</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">merge</span><span class="p">(</span><span class="n">empregados</span><span class="p">,</span> <span class="n">cargos</span><span class="p">))</span> <span class="c1"># inner join com R Base</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##    id.cargo id.empregado nome.empregado idade uf nome.cargo salario
## 1         1            9           Jose    24 RS    Técnico    7000
## 2         2           10          Julia    31 SC Assistente    4000
## 3         3            8          Maria    35 SP  Consultor   15000
## 4         4            1         Renato    30 MG   Analista   11000
## 5         4            2         Miguel    31 DF   Analista   11000
## 6         4            4       Patrícia    30 DF   Analista   11000
## 7         4            6          Saulo    30 DF   Analista   11000
## 8         4            3          Paulo    29 CE   Analista   11000
## 9         5            5           Inês    25 DF    Auditor   10000
## 10        6            7          Diego    30 RJ    Gerente   13000</code></pre></div></p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="p">(</span><span class="n">join.dplyr</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">inner_join</span><span class="p">(</span><span class="n">empregados</span><span class="p">,</span> <span class="n">cargos</span><span class="p">))</span> <span class="c1"># inner join com Dplyr</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##    id.empregado nome.empregado idade uf id.cargo nome.cargo salario
## 1             1         Renato    30 MG        4   Analista   11000
## 2             2         Miguel    31 DF        4   Analista   11000
## 3             3          Paulo    29 CE        4   Analista   11000
## 4             4       Patrícia    30 DF        4   Analista   11000
## 5             5           Inês    25 DF        5    Auditor   10000
## 6             6          Saulo    30 DF        4   Analista   11000
## 7             7          Diego    30 RJ        6    Gerente   13000
## 8             8          Maria    35 SP        3  Consultor   15000
## 9             9           Jose    24 RS        1    Técnico    7000
## 10           10          Julia    31 SC        2 Assistente    4000</code></pre></div></p>

<blockquote>
  <p>Dica: coloque parênteses entre as atribuições e o R mostrará o resultado dela imediatamente</p>
</blockquote>

<p>Repare que nenhuma pessoa tem o cargo de <code>id.cargo</code> 7, então o cargo <code>Gestor</code> não aparece no conjunto final já que não há chave igual. Repare também que a pessoa <code>Tiago</code> possui <code>id.cargo</code> 8, que não é igual a nenhum cargo, então ele também não aparece.</p>

<p>Tanto o <code>merge()</code> do R base quanto o <code>inner_join()</code> do dplyr tentam descobrir as chaves em comum buscando campos com o mesmo nome. Mas vamos supor que os campos chave tivessem nomes diferentes (o que é bem comum!). Para simular, trocaremos o nome <code>id.cargo</code> em <code>cargos</code>:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">names</span><span class="p">(</span><span class="n">cargos</span><span class="p">)</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">c</span><span class="p">(</span><span class="err">“</span><span class="n">cargo</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">nome.cargo</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">salario</span><span class="err">”</span><span class="p">)</span> 
<span class="p">(</span><span class="n">merge.r.base</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">merge</span><span class="p">(</span><span class="n">empregados</span><span class="p">,</span> <span class="n">cargos</span><span class="p">,</span> <span class="n">by.x</span> <span class="o">=</span> <span class="err">“</span><span class="n">id.cargo</span><span class="err">”</span><span class="p">,</span> <span class="n">by.y</span> <span class="o">=</span> <span class="err">“</span><span class="n">cargo</span><span class="err">”</span><span class="p">))</span> <span class="c1"># inner join com R Base, com nomes de chaves diferentes</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##    id.cargo id.empregado nome.empregado idade uf nome.cargo salario
## 1         1            9           Jose    24 RS    Técnico    7000
## 2         2           10          Julia    31 SC Assistente    4000
## 3         3            8          Maria    35 SP  Consultor   15000
## 4         4            1         Renato    30 MG   Analista   11000
## 5         4            2         Miguel    31 DF   Analista   11000
## 6         4            4       Patrícia    30 DF   Analista   11000
## 7         4            6          Saulo    30 DF   Analista   11000
## 8         4            3          Paulo    29 CE   Analista   11000
## 9         5            5           Inês    25 DF    Auditor   10000
## 10        6            7          Diego    30 RJ    Gerente   13000</code></pre></div></p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="p">(</span><span class="n">join.dplyr</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">inner_join</span><span class="p">(</span><span class="n">empregados</span><span class="p">,</span> <span class="n">cargos</span><span class="p">,</span> <span class="n">by</span> <span class="o">=</span> <span class="n">c</span><span class="p">(</span><span class="err">“</span><span class="n">id.cargo</span><span class="err">”</span> <span class="o">=</span> <span class="err">“</span><span class="n">cargo</span><span class="err">”</span><span class="p">)))</span> <span class="c1"># inner join com Dplyr com nomes de chaves diferentes</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##    id.empregado nome.empregado idade uf id.cargo nome.cargo salario
## 1             1         Renato    30 MG        4   Analista   11000
## 2             2         Miguel    31 DF        4   Analista   11000
## 3             3          Paulo    29 CE        4   Analista   11000
## 4             4       Patrícia    30 DF        4   Analista   11000
## 5             5           Inês    25 DF        5    Auditor   10000
## 6             6          Saulo    30 DF        4   Analista   11000
## 7             7          Diego    30 RJ        6    Gerente   13000
## 8             8          Maria    35 SP        3  Consultor   15000
## 9             9           Jose    24 RS        1    Técnico    7000
## 10           10          Julia    31 SC        2 Assistente    4000</code></pre></div></p>

<p>No R base usamos <code>by.x</code> e <code>by.y</code> para especificar o nome do campo chave do primeiro e segundo data.frame. No <code>inner_join()</code> do dplyr usamos um vetor no formato <code>c("chave.x" = "chave.y")</code>.</p>

<p>Resumindo, o inner join retorna todos os campos de ambos os data.frames, mas somente as linhas em que as chaves são iguais.</p>

<h2 id="outer-join">Outer join</h2>

<p>O inner join despreza os registros de ambos os data.frames onde as chaves não coincidem. Mas existem situações em que esse descarte de registro não é interessante. Nesses casos usamos Outer join.</p>

<p>Existem 3 tipos básicos de outer join: full outer join (ou apenas full join), left outer join (ou só left join) e o right outer join (ou só right join).</p>

<p>Vejamos o seguinte exemplo:</p>

<ul>
  <li><code>pacientes</code>, com id do paciente, nome abreviado, e resultados de exame A, B e C</li>
</ul>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">id.paciente</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="m">1</span><span class="o">:</span><span class="m">9</span>
<span class="n">nome.abreviado</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">c</span><span class="p">(</span><span class="err">“</span><span class="n">A.A.M</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">S.S.G.F</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">T.I.A</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">L.O.S.M</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">Y.Q.W</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">F.A</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">T.B.N</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">J.J.L</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">M.S.S</span><span class="err">”</span><span class="p">)</span>
<span class="n">exame.a</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">c</span><span class="p">(</span><span class="m">3.8</span><span class="p">,</span> <span class="m">3.8</span><span class="p">,</span> <span class="m">3.9</span><span class="p">,</span> <span class="m">4.0</span><span class="p">,</span> <span class="m">4.4</span><span class="p">,</span> <span class="m">3.8</span><span class="p">,</span> <span class="m">3.7</span><span class="p">,</span> <span class="m">3.6</span><span class="p">,</span> <span class="m">4.0</span><span class="p">)</span>
<span class="n">exame.b</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">c</span><span class="p">(</span><span class="m">109.98</span><span class="p">,</span> <span class="m">109.90</span><span class="p">,</span> <span class="m">109.89</span><span class="p">,</span> <span class="m">109.99</span><span class="p">,</span> <span class="m">110.01</span><span class="p">,</span> <span class="m">109.95</span><span class="p">,</span> <span class="m">109.98</span><span class="p">,</span> <span class="m">109.93</span><span class="p">,</span> <span class="m">110.00</span><span class="p">)</span>
<span class="n">exame.c</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">c</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">1</span><span class="p">)</span>
<span class="n">pacientes</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">data.frame</span><span class="p">(</span><span class="n">id.paciente</span><span class="p">,</span> <span class="n">nome.abreviado</span><span class="p">,</span> <span class="n">exame.a</span><span class="p">,</span> <span class="n">exame.b</span><span class="p">,</span> <span class="n">exame.c</span><span class="p">)</span>
<span class="n">pacientes</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##   id.paciente nome.abreviado exame.a exame.b exame.c
## 1           1          A.A.M     3.8  109.98       0
## 2           2        S.S.G.F     3.8  109.90       1
## 3           3          T.I.A     3.9  109.89       1
## 4           4        L.O.S.M     4.0  109.99       0
## 5           5          Y.Q.W     4.4  110.01       1
## 6           6            F.A     3.8  109.95       1
## 7           7          T.B.N     3.7  109.98       0
## 8           8          J.J.L     3.6  109.93       0
## 9           9          M.S.S     4.0  110.00       1</code></pre></div></p>

<ul>
  <li><code>controle</code>, com id do paciente, e o tipo de remédio que tomou</li>
</ul>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">id.paciente</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">c</span><span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="m">4</span><span class="p">,</span> <span class="m">5</span><span class="p">,</span> <span class="m">7</span><span class="p">,</span> <span class="m">8</span><span class="p">,</span> <span class="m">11</span><span class="p">,</span> <span class="m">15</span><span class="p">,</span> <span class="m">25</span><span class="p">)</span>
<span class="n">tipo.remedio</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">c</span><span class="p">(</span><span class="err">“</span><span class="n">A</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">B</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">A</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">B</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">A</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">A</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">B</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">B</span><span class="err">”</span><span class="p">)</span>
<span class="n">controle</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">data.frame</span><span class="p">(</span><span class="n">id.paciente</span><span class="p">,</span> <span class="n">tipo.remedio</span><span class="p">)</span>
<span class="n">controle</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##   id.paciente tipo.remedio
## 1           1            A
## 2           4            B
## 3           5            A
## 4           7            B
## 5           8            A
## 6          11            A
## 7          15            B
## 8          25            B</code></pre></div></p>

<p>Em <code>pacientes</code> temos uma lista de pessoas hospitalizadas com uma mesma doença e o resultado de seus exames. Em <code>controle</code> temos uma lista controlada de pessoas que participaram de um experimento tomando tipo A e tipo B de um remédio.</p>

<p>Você precisa montar um conjunto consolidado para avaliar o se houve impacto dos remédios nos exames dos pacientes hospitalizados, para isso, precisa comparar o exame dos que tomaram remédio e dos que não tomaram. Mas nesse caso queremos um join que preserve todos os registros dos <code>pacientes</code>, e queremos desprezar os registros de <code>controle</code> que não correspondem a pacientes hospitalizados.</p>

<h3 id="left-outer-join-left-join">Left outer join (Left join)</h3>

<p>Portanto, usaremos o left outer join (ou simplesmente left join):</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="p">(</span><span class="n">left.join.r.base</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">merge</span><span class="p">(</span><span class="n">pacientes</span><span class="p">,</span> <span class="n">controle</span><span class="p">,</span> <span class="n">all.x</span> <span class="o">=</span> <span class="n">TRUE</span><span class="p">))</span> <span class="c1"># left join com R base</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##   id.paciente nome.abreviado exame.a exame.b exame.c tipo.remedio
## 1           1          A.A.M     3.8  109.98       0            A
## 2           2        S.S.G.F     3.8  109.90       1         &lt;na&gt;
## 3           3          T.I.A     3.9  109.89       1         &lt;na&gt;
## 4           4        L.O.S.M     4.0  109.99       0            B
## 5           5          Y.Q.W     4.4  110.01       1            A
## 6           6            F.A     3.8  109.95       1         &lt;na&gt;
## 7           7          T.B.N     3.7  109.98       0            B
## 8           8          J.J.L     3.6  109.93       0            A
## 9           9          M.S.S     4.0  110.00       1         &lt;na&gt;</code></pre></div></na></na></na></na></p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="p">(</span><span class="n">left.join.dplyr</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">left_join</span><span class="p">(</span><span class="n">pacientes</span><span class="p">,</span> <span class="n">controle</span><span class="p">))</span> <span class="c1"># left join com dplyr</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##   id.paciente nome.abreviado exame.a exame.b exame.c tipo.remedio
## 1           1          A.A.M     3.8  109.98       0            A
## 2           2        S.S.G.F     3.8  109.90       1         &lt;na&gt;
## 3           3          T.I.A     3.9  109.89       1         &lt;na&gt;
## 4           4        L.O.S.M     4.0  109.99       0            B
## 5           5          Y.Q.W     4.4  110.01       1            A
## 6           6            F.A     3.8  109.95       1         &lt;na&gt;
## 7           7          T.B.N     3.7  109.98       0            B
## 8           8          J.J.L     3.6  109.93       0            A
## 9           9          M.S.S     4.0  110.00       1         &lt;na&gt;</code></pre></div></na></na></na></na></p>

<p>Repare que nos resultados temos todos os campos de <code>pacientes</code> e <code>controle</code> e temos também todos registros de <code>pacientes</code>. Quando não há ocorrência da chave <code>id.paciente</code> em <code>controle</code>, é colocado um <code>NA</code> no campo.</p>

<p>Chama-se LEFT outer join pois o “conjunto da esquerda”, <code>pacientes</code>, deve prevalecer além da interseção. Ou seja, retorna todos os registros onde as chaves são iguais com todos os campos preenchidos dos dois conjuntos, mas também retorna os registros onde as chaves não são iguais sem valor para os campos do conjunto à direita.</p>

<h3 id="right-outer-join-right-join">Right outer join (Right join)</h3>

<p>O princípio é EXATAMENTE o mesmo do left join. A única diferença é a permanência dos registros do conjunto da direita. Vamos simular o mesmo resultado, usando right join, apenas mudando os conjuntos de lugar na chamada da função:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="p">(</span><span class="n">right.join.r.base</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">merge</span><span class="p">(</span><span class="n">controle</span><span class="p">,</span> <span class="n">pacientes</span><span class="p">,</span> <span class="n">all.y</span> <span class="o">=</span> <span class="n">TRUE</span><span class="p">))</span> <span class="c1"># left join com R base</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##   id.paciente tipo.remedio nome.abreviado exame.a exame.b exame.c
## 1           1            A          A.A.M     3.8  109.98       0
## 2           2         &lt;na&gt;        S.S.G.F     3.8  109.90       1
## 3           3         &lt;na&gt;          T.I.A     3.9  109.89       1
## 4           4            B        L.O.S.M     4.0  109.99       0
## 5           5            A          Y.Q.W     4.4  110.01       1
## 6           6         &lt;na&gt;            F.A     3.8  109.95       1
## 7           7            B          T.B.N     3.7  109.98       0
## 8           8            A          J.J.L     3.6  109.93       0
## 9           9         &lt;na&gt;          M.S.S     4.0  110.00       1</code></pre></div></na></na></na></na></p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="p">(</span><span class="n">right.join.dplyr</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">right_join</span><span class="p">(</span><span class="n">controle</span><span class="p">,</span> <span class="n">pacientes</span><span class="p">))</span> <span class="c1"># left join com dplyr</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##   id.paciente tipo.remedio nome.abreviado exame.a exame.b exame.c
## 1           1            A          A.A.M     3.8  109.98       0
## 2           2         &lt;na&gt;        S.S.G.F     3.8  109.90       1
## 3           3         &lt;na&gt;          T.I.A     3.9  109.89       1
## 4           4            B        L.O.S.M     4.0  109.99       0
## 5           5            A          Y.Q.W     4.4  110.01       1
## 6           6         &lt;na&gt;            F.A     3.8  109.95       1
## 7           7            B          T.B.N     3.7  109.98       0
## 8           8            A          J.J.L     3.6  109.93       0
## 9           9         &lt;na&gt;          M.S.S     4.0  110.00       1</code></pre></div></na></na></na></na></p>

<p>Temos o mesmo conteúdo, apenas mudando a ordem dos data.frames e ajustando alguns parâmetros na função.</p>

<p>Tanto o left quanto o right join são usados pra preservar todos os registros de apenas “um lado” do join, trazendo os demais campos do outro conjunto como vazio, e preenchido apenas os registros em que as chaves forem iguais.</p>

<h3 id="full-outer-join-full-join">Full outer join (Full join)</h3>

<p>Há situações em que é necessário preservar todos os registros de ambos os conjuntos de dados. Vamos testar o seguinte exemplo:</p>

<ul>
  <li><code>exportacoes</code>, com produto e valor exportado</li>
</ul>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">produto</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">c</span><span class="p">(</span><span class="err">“</span><span class="n">A</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">C</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">D</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">H</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">I</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">J</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">K</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">O</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">Y</span><span class="err">”</span><span class="p">)</span>
<span class="n">valor</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">c</span><span class="p">(</span><span class="m">993801</span><span class="p">,</span> <span class="m">1829300</span><span class="p">,</span> <span class="m">833952</span><span class="p">,</span> <span class="m">775831</span><span class="p">,</span> <span class="m">59143</span><span class="p">,</span> <span class="m">1192920</span><span class="p">,</span> <span class="m">6938018</span><span class="p">,</span> <span class="m">2927318</span><span class="p">,</span> <span class="m">393178</span><span class="p">)</span>
<span class="p">(</span><span class="n">exportacoes</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">data.frame</span><span class="p">(</span><span class="n">produto</span><span class="p">,</span> <span class="n">valor</span><span class="p">))</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##   produto   valor
## 1       A  993801
## 2       C 1829300
## 3       D  833952
## 4       H  775831
## 5       I   59143
## 6       J 1192920
## 7       K 6938018
## 8       O 2927318
## 9       Y  393178</code></pre></div></p>

<ul>
  <li><code>importacoes</code>, com produto e valor importado</li>
</ul>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">produto</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">c</span><span class="p">(</span><span class="err">“</span><span class="n">B</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">C</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">D</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">E</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">F</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">H</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">I</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">J</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">M</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">N</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">O</span><span class="err">”</span><span class="p">,</span> <span class="err">“</span><span class="n">Z</span><span class="err">”</span><span class="p">)</span>
<span class="n">valor</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">c</span><span class="p">(</span><span class="m">983125</span><span class="p">,</span> <span class="m">71983</span><span class="p">,</span> <span class="m">61328</span><span class="p">,</span> <span class="m">51939</span><span class="p">,</span> <span class="m">10928810</span><span class="p">,</span> <span class="m">979192</span><span class="p">,</span> <span class="m">6019278</span><span class="p">,</span> <span class="m">352918</span><span class="p">,</span> <span class="m">178263</span><span class="p">,</span> <span class="m">64129229</span><span class="p">,</span> <span class="m">447009</span><span class="p">,</span> <span class="m">1620129</span><span class="p">)</span>
<span class="p">(</span><span class="n">importacoes</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">data.frame</span><span class="p">(</span><span class="n">produto</span><span class="p">,</span> <span class="n">valor</span><span class="p">))</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##    produto    valor
## 1        B   983125
## 2        C    71983
## 3        D    61328
## 4        E    51939
## 5        F 10928810
## 6        H   979192
## 7        I  6019278
## 8        J   352918
## 9        M   178263
## 10       N 64129229
## 11       O   447009
## 12       Z  1620129</code></pre></div></p>

<p>Você recebeu dois conjuntos de dados que representam as importações e as exportações de produtos de um pequeno país. Sua missão é fazer uma simples análise de saldo, balança e fluxo de comércio exterior desse país, e produzir alguns relatórios e gráficos comparando produto a produto.</p>

<p>Sendo assim, não é interessante perder nenhum registro de nenhum dos dois data.frames, ambos devem ser preservados para a comparação.</p>

<p>O join da vez é o full join (nome do blog!). Vejamos:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="p">(</span><span class="n">full.join.r.base</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">merge</span><span class="p">(</span><span class="n">exportacoes</span><span class="p">,</span> <span class="n">importacoes</span><span class="p">,</span> <span class="n">by.x</span> <span class="o">=</span> <span class="err">“</span><span class="n">produto</span><span class="err">”</span><span class="p">,</span> <span class="n">by.y</span> <span class="o">=</span> <span class="err">“</span><span class="n">produto</span><span class="err">”</span><span class="p">,</span> <span class="n">all.x</span> <span class="o">=</span> <span class="n">TRUE</span><span class="p">,</span> <span class="n">all.y</span> <span class="o">=</span> <span class="n">TRUE</span><span class="p">))</span> <span class="c1"># left join com R base</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##    produto valor.x  valor.y
## 1        A  993801       NA
## 2        C 1829300    71983
## 3        D  833952    61328
## 4        H  775831   979192
## 5        I   59143  6019278
## 6        J 1192920   352918
## 7        K 6938018       NA
## 8        O 2927318   447009
## 9        Y  393178       NA
## 10       B      NA   983125
## 11       E      NA    51939
## 12       F      NA 10928810
## 13       M      NA   178263
## 14       N      NA 64129229
## 15       Z      NA  1620129</code></pre></div></p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="p">(</span><span class="n">full.join.dplyr</span> <span class="o">&amp;</span><span class="n">lt</span><span class="p">;</span><span class="o">-</span> <span class="n">full_join</span><span class="p">(</span><span class="n">exportacoes</span><span class="p">,</span> <span class="n">importacoes</span><span class="p">,</span> <span class="n">by</span> <span class="o">=</span> <span class="n">c</span><span class="p">(</span><span class="err">“</span><span class="n">produto</span><span class="err">”</span> <span class="o">=</span> <span class="err">“</span><span class="n">produto</span><span class="err">”</span><span class="p">)))</span> <span class="c1"># left join com dplyr</span></code></pre></div></p>

<p><div class="highlight"><pre><code class="language-text" data-lang="text">##    produto valor.x  valor.y
## 1        A  993801       NA
## 2        C 1829300    71983
## 3        D  833952    61328
## 4        H  775831   979192
## 5        I   59143  6019278
## 6        J 1192920   352918
## 7        K 6938018       NA
## 8        O 2927318   447009
## 9        Y  393178       NA
## 10       B      NA   983125
## 11       E      NA    51939
## 12       F      NA 10928810
## 13       M      NA   178263
## 14       N      NA 64129229
## 15       Z      NA  1620129</code></pre></div></p>

<p>Repare que em nosso exemplo há uma particularidade com as chaves. Quando não explicitamos na função os nomes das chaves em <code>by</code>, o join é feito pelos campos com nomes iguais. Mas nesse caso, ambos os campos <code>produto</code> e <code>valor</code> têm nomes iguais nos dois data.frames. Precisamos então explicitar o que queremos que seja chave: apenas <code>produto</code>.</p>

<p>O full join preserva todos os registros de ambos os conjuntos. Quando as chaves são iguais, retorna preenchido em todos os campos, quando não são iguais, retorna <code>NA</code> em qualquer um dos “lados”.</p>

<p>Em nosso exemplo, alguns produtos foram somente exportados e alguns foram somente importados, bem como alguns foram exportados e importados. Como precisamos da totalidade das exportações e importações, o full join atende bem nossa necessidade. Com esse resultado já poderíamos partir para análise do comércio desse país.</p>

<h2 id="prximos-posts">Próximos posts</h2>

<p>Em breve faremos mais posts sobre joins, explicando alguns outros tipos menos comuns, como CROSS JOIN, SEMI JOIN, ANTI JOIN, SELF JOIN.</p>

<p>Até o momento apresentamos junções baseadas na igualdade de joins (equi joins), mas nos próximos posts sobre o assunto mostraremos exemplos onde a comparação das chaves não se da por relação de igualdade (theta join).</p>

<h2 id="referncias">Referências</h2>

<ul>
  <li><a href="http://stat545.com/bit001_dplyr-cheatsheet.html">Cheatsheet for dplyr join functions</a></li>
  <li><a href="http://www.rforexcelusers.com/book/shape-your-data/merging-data-frames/">R for Excel users: Merging Data Frames</a></li>
  <li><a href="http://www.dummies.com/how-to/content/how-to-use-the-merge-function-with-data-sets-in-r.html">How to Use the merge() Function with Data Sets in R</a></li>
  <li><a href="http://www.princeton.edu/~mattg/statar/join-and-reshape.html">R for Stat users: Join datasets</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
