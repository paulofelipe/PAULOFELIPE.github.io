<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Full Join]]></title>
  <link href="http://fulljoin.com.br/atom.xml" rel="self"/>
  <link href="http://fulljoin.com.br/"/>
  <updated>2016-03-23T22:10:22-03:00</updated>
  <id>http://fulljoin.com.br/</id>
  <author>
    <name><![CDATA[Full Join]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Kit De Sobrevivência Em R - Parte 2]]></title>
    <link href="http://fulljoin.com.br/blog/2016/03/23/kit-de-sobrevivencia-em-r-parte-2/"/>
    <updated>2016-03-23T22:50:09-03:00</updated>
    <id>http://fulljoin.com.br/blog/2016/03/23/kit-de-sobrevivencia-em-r-parte-2</id>
    <content type="html"><![CDATA[<p>Seguindo a sequência do <em>Kit de sobrevivência em R</em>, vamos abordar um pouco sobre uma das partes iniciais de qualquer análise ou trabalho que vá ser feito no R: carregamento e leitura de dados.</p>

<!-- More -->


<p>Eis aqui uma notícia ruim: não existe um padrão dominante para armazenamento de dados. O que isso significa? Significa que, na vida real, você vai se deparar com os mais diferentes tipos de fontes de dados e mesmo assim vai ter que dar um jeito de analisá-las e estudá-las para concluir seus trabalhos.</p>

<p>Ou seja, existem diversas formas de carregar dados para trabalhar com eles no R. Em prol da objetividade, vamos tratar dos casos mais comuns e mais básicos primeiro. Esse assunto pode ser extremamente vasto, então, criaremos primeiro uma base para, em posts futuros, aprofundarmos em fontes de dados mais complexas.</p>

<h2>Estrutura dos dados</h2>

<p>Você vai encontrar dados disonbilizados basicamente em três formas básicas: estruturados, não estruturados e semi-estruturados.</p>

<p>Dados estruturados basicamente são conjuntos de informações organizadas em colunas (atribuos, variáveis, <em>features</em>, etc.) e linhas (registros, itens, observacões, etc.). São dados encontrados em bancos de dados, arquivos com algum tipo de separação entre as colunas, excel (nem todos!), arquivos com campos de tamanho fixo, etc. <em>foto de uma tabela??</em></p>

<p>Dados não estruturados, como o nome diz, não tem um estrutura previsível, ou seja, cada arquivo possui uma forma única de ser carregado e manejado. Geralmente são arquivos com forte teor textual. Podemos citar, por exemplo, emails, twitters, PDFs, imagens, etc. Muito usados em mineração de dados.</p>

<p>Já os arquivos semi-estruturados também possuem uma estrutura fixa, porém, não seguem o padrão de estrutura linha/coluna, ou seja, é uma estrutura mais complexa e flexível, geralmente hierárquica, estruturada em tags ou marcadores de campos. São exemplos de arquivos semi-estruturados: JSON, XML, HTML, YAML, etc. É o formato mais usado em troca de dados pela internet e consumo de APIs. <em>foto de um exemplo de JSON?</em>, <em>colocar links</em></p>

<p>Como dito anteriormente, trataremos primeiro dos arquivos estruturados. Em futuros posts vamos abordar os outros tipos, pois são abordagens um puco mais complexa e é sempre bom começar pelo básico!</p>

<h2>Preparando o ambiente</h2>

<h3>Limpando tudo</h3>

<p>(é correto falar de sessão? ou melhor &ldquo;ambiente&rdquo;?)
Antes de começar os trabalhos, é uma boa prática ter certeza de que não tem nada na sessão (entenda como memória RAM) impedindo o R de trabalhar. Um simples comando garante que está tudo limpo pronto para começar:</p>

<div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">rm</span><span class="p">(</span><span class="n">list</span><span class="o">=</span><span class="n">ls</span><span class="p">())</span></code></pre></div>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='r'><span class='line'><span class="kp">rm</span><span class="p">(</span><span class="kt">list</span><span class="o">=</span><span class="kp">ls</span><span class="p">())</span>
</span></code></pre></td></tr></table></div></figure>


<p>Lembra de onde os comandos em R devem ser digitados? Não? [Relembre aqui um pouco sobre RStudio]</p>

<p>Esse comando na verdade está usando outros dois comandos:</p>

<ul>
<li><p><code>rm()</code> é o comando para remover um objeto da sessão do R</p></li>
<li><p><code>ls()</code> é o comando para listar os nomes de todos objetos da sessão do R</p></li>
</ul>


<p>Os dois comandos conjugados significa dizer <em>remova tudo que estiver na lista de objetos da sessão do R.</em></p>

<p>Pronto. Seus ambiente está limpo.</p>

<h3>Definindo diretório de trabalho</h3>

<p>O R vai &ldquo;ler&rdquo; os dados de algum lugar do seu computador. Normalmente ele inicial em um diretório padrão, mas nem sempre os arquivos estarão nesse mesmo diretório. Para dizer ao R onde ele deve ler os arquivos, usaremos o comando <em>set working directory</em>:</p>

<div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">setwd</span><span class="p">(</span><span class="s2">"Local/Do/Seus/Arquivos/De/Trabalho/"</span><span class="p">)</span></code></pre></div>


<p>Também pode ser realizado pelos menus do RStudio em <code>Session &gt; Set Working Directory &gt; Choose Directory...</code> e escolha a pasta onde seus arquivos de dado estarão.</p>

<p>Ok! Agora si</p>

<h2>falar do caminho via RStudio tmb</h2>

<p>aproveitar e explicar getwd()</p>

<h2>falar sobre delimitadores</h2>

<p>campos e colunas
linhas e registros</p>

<h3>delimitador TAB</h3>

<p>read.table()</p>

<h3>csv</h3>

<p>read.csv()
atalho de read.table()</p>

<h3>outros delimitadores</h3>

<p>read.delim()
atalho de read.table()</p>

<h3>excel</h3>

<p>XLConnect?
readxl?
xls?</p>

<h3>campos de tamanho fixo?</h3>

<p>read.fwf()
dados de comércio exterior</p>

<h3>loaders para outros sistemas estatísticos</h3>

<p>spss
dta</p>

<h3>carregar um .Rdata ?</h3>

<h3>carregar de banco de dado??</h3>

<h3>JSON?</h3>

<h3>XML?</h3>

<h3>Deixas para mais um post sobre carregamento</h3>

<p>list.files() e loop de leitura
webscraping
PDF
SQL</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Kit De Sobrevivência Em R - Parte 1]]></title>
    <link href="http://fulljoin.com.br/blog/2016/03/23/kit-de-sobrevivencia-em-r-parte-1/"/>
    <updated>2016-03-23T21:14:06-03:00</updated>
    <id>http://fulljoin.com.br/blog/2016/03/23/kit-de-sobrevivencia-em-r-parte-1</id>
    <content type="html"><![CDATA[<p>Nesta sequênciade de posts, iremos tratar o básico necessário para quem deseja iniciar o aprendizado em <a href="https://www.r-project.org/about.html">R</a>. Trata-se de uma linguagem de programação muito usada para cálculos estatísticos. Neste e nos próximos posts, discutiremos tópicos como instalação, importação de dados, tipos de dados, etc.</p>

<p>A nossa expectativa é que, com essa sequência, seja quebrada a barreira inicial para aqueles que prentendem entrar nesse mundo (cuidado que esse é um caminho sem volta!).</p>

<!-- More -->


<h2>Por que aprender uma linguagem estatística?</h2>

<p>Qualquer um que trablhe um pouco mais com dados já esbarrou nas limitações do &ldquo;excel&rdquo; ou de softwares de planilha. Nada contra, são ótimos, mas as vezes eles dificultam mais do que ajudam. Abrir a mente e se permitir novas formas de trabalho pode render bons frutos.</p>

<p>Trabalhos de manipulação de dados, verificação, limpeza e junção de dados, ou até alguns cálculos com uma massa de dados um pouco maior podem se tornar um pouco traumáticos se você não usar as ferramentas mais adequadas.</p>

<p>As linguagens de programação estatística ajudam muito nesse sentido. São ferramentas poderosíssimas que praticamente derrubam os limites das possibilidades de se trabalhar com dados: você pode fazer praticamente qualquer coisa!</p>

<p>&ldquo;Eu trabalho com dados de forma básica, mas não quero me tornar um ciêntista de dados&hellip; ainda assim é útil?&rdquo;. Com certeza! Linguagens de programação estatística, mesmo que aprendendo apenas o básico, aumentam muito a produtividade.</p>

<p>Portanto, sugerimos fortemente que aprenda uma linguagem estatística o quanto antes!</p>

<h2>Por que o R?</h2>

<p>Um motivo básico é que o R é <strong>livre</strong>. Em circustâncias de restrição orçamentária, isso pode ser um fator determimante. No entanto, a escolha do R ultrapassa a questão dos custos. Algumas pessoas têm o costume de pensar que soluções livres são geralmente inferiores às proprietárias.</p>

<p>Todavia, no caso de ciência de dados, os softwares livres parecem que vieram para ficar em posição dominante. De acordo com <a href="http://blog.dominodatalab.com/open-source-winning-against-proprietary-data-science-vendors/">essa pesquisa</a>, o mercado da ciência de dados está sendo dominado por softwares livres.</p>

<p>Podemos dizer, então, que grande &ldquo;concorrente&rdquo; do R no momento é o Python, outro software livre.</p>

<p>E qual seria o melhor? Depende. Como tudo na vida, cada um apresenta vantagens e desvantagens. O importante é tirar proveito das diferenças. Sua necessidade dirá qual é o software mais adequado.</p>

<p>Se a sua necessidade é de realização de estudos e análises que não serão diretamente ligada a outras plataformas, como uma aplicação web por exemplo, o R é o ideal para você. O Python costuma ser mais indicado em casos de análises que resultarão em algo mais sistemático. Este post <a href="http://www.kdnuggets.com/2015/05/r-vs-python-data-science.html">aqui</a> pode ser útil se você desejar saber mais sobre esse ponto.</p>

<h2>Sobre o RStudio</h2>

<p>O <a href="https://www.rstudio.com/">RStudio</a> é uma interface muito útil pra quem deseja usar o R. Com certeza, a maioria dos usuários de R utilizam o RStudio como <a href="https://pt.wikipedia.org/wiki/Ambiente_de_desenvolvimento_integrado">IDE (integrated development environment)</a>. Nele, você terá um editor de código, um console, um dispositivo para gráficos, um <a href="https://pt.wikipedia.org/wiki/Depura%C3%A7%C3%A3o"><em>debugger</em></a>, além de outras funcionalidades.</p>

<p>Na figura abaixo, está a &ldquo;cara&rdquo; do RStudio. Note que há 4 janelas (ambientes) separadas. As posições delas podem ser alteradas nas opções (<code>tools</code> -> <code>global options</code>). Além disso, você pode alterar o tema e outras tantas opções.</p>

<table class="image">
<caption align="bottom">Visão geral do RStudio</caption>
<tr><td><img src="http://fulljoin.com.br/images/RStudio_001.png" alt="Uma visão geral do RStudio"/></td></tr>
</table>


<p></p>


<p>Vamos tratar, ainda que superficialmente, de algumas funcionalidades do RStudio.</p>

<h4>1. Editor de Código</h4>

<p>No editor de código, você poderá escrever e editar os scripts. <a href="https://pt.wikipedia.org/wiki/Linguagem_de_script">Script</a> nada mais é do que um conjunto de comandos que serão executados em sequência. O editor do RStudio oferece facilidades como indentação, <em>code complete</em>, destaque da sintaxe, etc.</p>

<h4>2. Console</h4>

<p>No console aparecerão os resultados dos comandos. Você também pode escrever no console e obter os resultados, sem uso do editor de código. Também pode-se chamar a ajuda diretamente pelo console. Por exemplo: <code>?lm</code>. Voltaremos a falar desse comando <code>?</code> mais pra frente.</p>

<h4>3. <em>Workspace</em> e <em>History</em></h4>

<p>No <em>Workspace</em> ficarão guardados todos os objetos que forem criados na sessão. Entenda sessão como o espaço de tempo entre o momento em que você inicia o R e o momento que finaliza. Nesse período tudo que você faz usa memória RAM e o processador do computador. E na aba <em>History</em>, como você deve imaginar, o RStudio cria um histórico de comandos.</p>

<h4>4. <em>Files</em>, <em>Plots</em>, <em>Packages</em>, <em>Help</em> e <em>Viewer</em>.</h4>

<p>Nessa janela, estão várias funcionalidades do RStudio. Na aba <em>Files</em>, você terá uma navegação de arquivos do seu computador. Também será possível definir o diretório de trabalho (você também pode definir diretamente no código, mas isto será tratado posteriormente), ou seja, o R  entende o seu diretório de trabalho como ponto de partida para localizar arquivos que sejam chamados no script.</p>

<p>A aba <em>Plots</em> trará os gráficos gerados, possibilitando a exportação para alguns formatos diferentes, como png e pdf.</p>

<p>Em <em>Packages</em>, estão listados os pacotes que estão instalados e você pode verificar quais estão carregados e, caso necessário, poderá carregar algum pacote necessário para a sua análise. Também é possível instalar e atualizar pacotes. Novamente, tudo isso é possível fazer diretamente no código.</p>

<p><em>Help</em> o nome já diz tudo. Essa aba será bastante utilizada por você. Saber usar o <em>help</em> é fundamental para evitar desperdiço de tempo. Os usuários de R, em geral, são bastante solícitos. Entretanto, uma olhadinha rápida no help pode evitar que você gaste &ldquo;créditos&rdquo; desnecessariamente.</p>

<p>Por fim, o <em>Viewer</em>. Essa funcionalidade é utilizada para visualizar localmente conteúdo web. O gráfico da figura está na aba <em>Viewer</em> porque é uma visualização em <a href="https://pt.wikipedia.org/wiki/JavaScript">javascript</a>, que pode ser adicionada a documentos htmls gerados usando o <a href="http://rmarkdown.rstudio.com/">RMarkdown</a> ou em aplicações web com suporte do <a href="http://shiny.rstudio.com/">Shiny</a>.</p>

<p>Bem, isso foi uma breve explicação. Se você quiser saber mais, esta <a href="http://www.rstudio.com/wp-content/uploads/2016/01/rstudio-IDE-cheatsheet.pdf"><em>cheat sheet</em></a> criada pelo time do RStudio é muito útil.</p>

<h2>Instalando o R e o RStudio</h2>

<h3>Windows</h3>

<p>Para instalar o R no windows basta realizar o download do executável <a href="https://cran.r-project.org/bin/windows/base/">aqui</a> e proceder a instalação como qualquer outro software.</p>

<p>O Rstudio pode ser baixado <a href="https://www.rstudio.com/products/rstudio/download/">neste link</a>. Novamente, a instalação deve ser tranquila, sem a necessidade de maiores detalhes.</p>

<h3>Ubuntu</h3>

<p>No ubuntu, você pode instalar o R via terminal ou pela central de programas.</p>

<p>Pelo terminal, tecle <code>ctrl + alt + T</code> e faça o seguinte:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-get update
</span><span class='line'>sudo apt-get install r-base</span></code></pre></td></tr></table></div></figure>


<p>Na central de aplicativos, basta buscar por <code>r-base</code>.</p>

<p>O RStudio pode ser baixado no mesmo <a href="https://www.rstudio.com/products/rstudio/download/">link</a> citado quando foi explicada a instalação no windows.</p>

<h3>Mac OS X</h3>

<p>Para instalar o R no Mac basta realizar o download da última versão do pacote (pkg) <a href="https://cran.rstudio.com/bin/macosx/">aqui</a>, de um duplo click e proceda com a instalação como qualquer outro pacote no Mac.</p>

<p>O Rstudio pode ser baixado <a href="https://www.rstudio.com/products/rstudio/download/">neste link</a>. Procure na lista o instalador para Mac Os. Dessa vez será um arquivo DMG. De um duplo click e arraste o ícone do Rstudio para a pasta Aplicações. Pronto!</p>

<h3>Buscando Ajuda</h3>

<p>Esta parte é fundamental. Independente do seu nível de conhecimento, sempre haverá a necessidade de buscar ajuda. A nossa experiência diz que é muito difícil você ficar sem uma solução. No entanto, saber procurar é fundamental tanto para você encontrar uma solução desejável quanto para economizar tempo.</p>

<p>Entre, as fontes de ajuda estão o próprio <em>help</em> do R, o bom e velho google para uma busca mais ampla, o <a href="http://stackoverflow.com/tags/r">stack overflow</a> (ou <a href="http://pt.stackoverflow.com/questions/tagged/r">em português</a>), o <a href="https://www.reddit.com/r/rprogramming">reddit</a> e, é claro, o <strong>full join</strong>. Estaremos aqui para te ajudar.</p>

<p>Se você puder, faça suas pesquisas em inglês. Isto porque as possibilidades de você encontrar alguém que teve uma mesma dúvida crescem consideravalmente.</p>

<p>Se você for realizar uma pergunta em algum fórum ou site de perguntas e respostas, é importante atentar para alguns pontos que deverão ser informados:</p>

<ul>
<li>Versão do R;</li>
<li>Sistema Operacional;</li>
<li>Forneça um exemplo replicável;</li>
<li>Veja se a sua dúvida já não foi abordada em outro tópico.</li>
</ul>


<p>Bom, por enquanto é isso! Nos próximos posts, iremos abordar partes específicas e iniciar a utilização de fato do R. Até lá!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Aplicando Ciência De Dados Parte 1 - Workflow]]></title>
    <link href="http://fulljoin.com.br/blog/2016/03/14/como-aplicar-ciencia-de-dados/"/>
    <updated>2016-03-14T00:11:56-03:00</updated>
    <id>http://fulljoin.com.br/blog/2016/03/14/como-aplicar-ciencia-de-dados</id>
    <content type="html"><![CDATA[<p>No geral, atividades envolvendo aplicação da ciência de dados assumem o formato de projeto: empreendimentos de esforços durante um tempo (início e fim), usando recursos (pessoas e ferramentas) para alcançar um objetivo específico.</p>

<!-- More -->


<p>Qualquer projeto precisa ter uma metodologia clara e um workflow mínimo para organizar os recurso, o trabalho e a equipe, aumentando assim as chances de ser concluído com sucesso.</p>

<p>Nesse sentido, projetos com aplicação de ciência de dados não são diferentes: é muito importante estruturar e organizar o fluxo de trabalho.</p>

<p>Não há &ldquo;o jeito certo&rdquo; e &ldquo;o jeito errado&rdquo; de se estruturar um projeto em ciência de dados, pois os problemas na prática são tão variados, com características tão diferentes, que fica difícil definir uma única forma de executar o trabalho e obter sucesso no final.</p>

<p>No entanto, existem modelos baseados em estudos e experências anteriores que auxiliam bastante na hora de estruturar um projeto desse tipo.</p>

<p>Segundo <a href="http://www.kdnuggets.com/polls/2014/analytics-data-mining-data-science-methodology.html">votação no KDnuggets (2014)</a> a metodologia <a href="https://en.wikipedia.org/wiki/Cross_Industry_Standard_Process_for_Data_Mining">CRISP-DM</a> é a mais utilizada para projetos em análise de dados, mineração de dados e ciência de dados. Cross Industry Standard Process for Data Mining é um modelo iterativo e incremental que define 6 grandes fases:</p>

<ul>
<li>Entendimento do negócio</li>
<li>Entendimento dos dados</li>
<li>Preparação dos dados</li>
<li>Modelagem</li>
<li>Avaliação e análise</li>
<li>Resultados e lançamento do produto</li>
</ul>


<p>Já o livro <a href="http://www.amazon.com/Practical-Data-Science-Nina-Zumel/dp/1617291560">Practical Data Science with R</a>, define 6 estágios, também iterativos, para o ciclo de vida de um projeto em ciência de dados:</p>

<ul>
<li>Definição do objetivo</li>
<li>Coleta de dados</li>
<li>Modelagem</li>
<li>Avaliação e crítica</li>
<li>Apresentação dos resultados</li>
<li>Lançamento do produto</li>
</ul>


<p>Repare que ambas as referências se parecem bastante ao definir as fases de um projeto.</p>

<p>Ok, então devemos pegar todos essas fases e estágios e delimitar cada momento do projeto? Não necessariamente!</p>

<p>É importante conhecer essas estruturas e saber o que acontece em cada fase, porém, na prática, todas as fases se sobrepõe em um grande loop com idas e vindas entre cada estágio e, dependendo do problema, uma ou outra fase ganha mais importância ou toma mais tempo.</p>

<p>Tentaremos fazer um resumo do que é importante ter e mente antes de começar (e durante!) um projeto com aplicação de ciência de dados.</p>

<h2>Tenha perguntas bem definidas</h2>

<p>O objetivo de um projeto desse tipo geralmente é responder uma pergunta (ou várias), descobrir ou prever algo, confirmar uma hipótese ou solucionar um problema.</p>

<p>Se antes de começar o projeto você conseguir resumir seu objetivo em uma pergunta clara e objetiva, você já vai começar muito bem! Se começar o projeto sem uma pergunta clara, então seus objetivos também não serão claros, com isso o projeto correrá sérios riscos de não obter sucesso.</p>

<p>Nesse momento é importante conhecer bem sobre o assunto do projeto. Conversas com os interessados e &ldquo;donos do problema&rdquo; são muito bem vindas. Habilidades em <a href="https://pt.wikipedia.org/wiki/An%C3%A1lise_de_requerimento_de_software">levantamento de requisitos</a> ajudam bastante a elucidar e entender bem o que se espera do projeto e o impacto do problema para o cliente. Entender verdadeiramente o problema é crucial para o sucesso do projeto.</p>

<h2>Obtenha os dados necessários</h2>

<p>Esse momento é muito interessante, pois o projeto pode terminar aqui mesmo se não for possível obter os dados necessários. Nem sempre é fácil observar se os dados obtidos são adequados para atingir o objetivo. Eventualmente, somente ao final do processo é possível concluir que os dados foram insuficientes ou inadequados.</p>

<p>Obtenção dos dados também pode ser um momento um pouco traumático, pois nem sempre os dados estão dispostos da melhor forma possível ou nem sempre é fácil obtê-los.</p>

<p>Por isso essa fase pode exigir alguns conhecimentos mais específicos, como entender de bancos de dados, dominar alguma linguagem de manipulação de dados, conhecer técnicas de limpeza e modelagem de dados, e eventualmente entender de <a href="https://en.wikipedia.org/wiki/Web_scraping">web scraping</a> ou usar APIs específicas para consumo de dados.</p>

<h2>Explore os dados</h2>

<p>Nessa fase é importante começar a investigar os dados em busca de insights, padrões e <a href="https://en.wikipedia.org/wiki/Outlier">outliers</a>, com o objetivo de aprofundar o conhecimento sobre os dados, entendendo melhor como eles se comportam.</p>

<p>Esse exercício muitas vezes exige a habilidade de plotar diferentes gráficos, extrair amostras e realizar análises estatísticas mais básicas.</p>

<h2>Escolha os modelos necessários</h2>

<p>A escolha dos modelos é um momento crucial no desenvolvimento do projeto. É aqui que serão utilizados conhecimentos mais robusto em estatística e aprendizado de máquina. É fundamental conhecer as estratégias e os tipos de modelos para escolher bem os que podem ajudar a alcançar o objetivo do projeto.</p>

<p>Outro aspecto importante é saber balancear &ldquo;complexidade e simplicidade&rdquo;. Como muitas vezes os beneficiários do projeto não serão pessoas especializadas nesse tipo de abordagem, o analista terá uma difícil missão de escolher um modelo que seja útil para o objetivo do projeto, mas que seja também, de certa forma, passível de explicação dos seus principais elementos.</p>

<p>Por exemplo, em um caso de desenvolvimento de um modelo de classificação, haverá um trade-off entre a melhoria da acurácia e a complexidade do modelo. Ou seja, pode ser que valha a pena escolher um modelo mais simples e mais fácil de explicar do que um modelo super complexo com resultados marginalmente melhores.</p>

<p>O bom entendimento dos objetivos do projeto e das necessidades do cliente vai repercutir positivamente na escolha correta dos modelos.</p>

<h2>Apresente os resultados</h2>

<p>Na apresentação dos resultados, é preciso ter em mente qual é a audiência que você enfrentará, ou que tipo de uso os clientes do projeto farão com o resultado.</p>

<p>Como na fase de exploração, a visualização pode ter um papel fundamental. Um bom gráfico, pode conseguir passar a mesma informação de dez tabelas diferentes. Ou, dependendo do objetivo, um dashboard dinâmico para o cliente &ldquo;explorar&rdquo; os resultados. Em algumas situações, o resultado poderá ser um algoritmo de uso mais amplo (sistema de recomendação, motor de previsões em tempo real, robô que monitora redes sociais, etc).</p>

<p>Outro ponto importante, é sempre deixar claro o que a análise realizada permite e o que ela não permite, aprensetando assim os resultados e suas limitações. É fundamental que os clientes tenham o mínimo de conhecimento sobre a capacidade do produto (relatório, dashboard, algoritmo&hellip;) que será entregue para que não haja mal entendidos ou frustrações.</p>

<p>Para apresentar bem os resultados não basta um bom trabalho analítico e bons modelos, é desejável uma boa habilidade de escrita, produzir gráficos interessantes, <a href="https://hbr.org/2013/03/a-data-scientists-real-job-sto/">&ldquo;story telling&rdquo;</a>, saber apresentar dados de maneira concisa e objetiva, habilidades interperssoais e, em alguns casos, até uma boa noção de design e interfaces gráficas.</p>

<h2>Faça loops entre as fases</h2>

<p>Em qualquer fase e a qualquer momento, é normal que se retorne a fases anteriores ou se avance a fases posteriores.</p>

<p>Por exemplo: redefinir os objetivos após a fase de exploração; necessidade de se obter mais dados ou explorar melhor os dados após a apresentação dos resultados; repensar os objetivos do projeto após o cliente usar o produto final; etc. Esse exercícios do loop é saudável para o projeto.</p>

<p>Tenha em mente que todas as fases são iterativas, parcialmente sobrepostas e complementares, de forma que, juntas, integram um grande loop de aprimoramento e refinamento até que se obtenha um resultado satisfatório.</p>

<p>Referências:</p>

<ul>
<li><a href="http://www.amazon.com/Practical-Data-Science-Nina-Zumel/dp/1617291560">Parte 1 - Capítulo 1 &ldquo;The data science process&rdquo; - Practical Data Science with R</a></li>
<li><a href="https://en.wikipedia.org/wiki/">Wikipedia - Cross Industry Standard Process for Data Mining</a></li>
<li><a href="http://guerrilla-analytics.net/2015/02/20/data-science-workflows-a-reality-check/">Data Science Workflows – A Reality Check</a></li>
<li><a href="http://cacm.acm.org/blogs/blog-cacm/169199-data-science-workflow-overview-and-challenges/fulltext">Data Science Workflow: Overview and Challenges</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello World]]></title>
    <link href="http://fulljoin.com.br/blog/2016/03/12/hello-world/"/>
    <updated>2016-03-12T23:27:00-03:00</updated>
    <id>http://fulljoin.com.br/blog/2016/03/12/hello-world</id>
    <content type="html"><![CDATA[<p>E nasce hoje o <strong>Full Join</strong>!</p>

<p>Um blog sobre data science e tudo mais que envolve a arte de trabalhar com dados.</p>

<p>A ideia é postar sobre programação, estatística, machine learning e análise de dados, buscando consolidar nosso conhecimento e ajudar quem está começando (ou evoluindo!) na carreira de Cientista de Dados.</p>

<!-- More -->


<p>Sempre que possível os posts serão em formatos de tutoriais, com exemplos práticos, explicações teóricas e links de referência.</p>

<h2>Mas, afinal, o que é data science?</h2>

<p>Apesar de ser um termo que vem ganhando bastante relevância, não se trata de uma atividade completamente nova. Basicamente todas as áreas do conhecimento já praticavam a tão famosa ciência dos dados muito antes do termo ganhar popularidade.</p>

<p>Sendo bem simplista, data science nada mais é do que extrair algum tipo de conhecimento, interpretar informações ou realizar descobertas, tudo isso utilizando massas de dados. Normalmente essa atividade é multidisciplinar e envolve matemática, estatística, computação, e, principalmente, capacidade de entender e explorar os dados com os quais se vai trabalhar.</p>

<h2>Se não é novidade, porque o tema está tão relevante?</h2>

<p>É inquestionável que a capacidade de produção de dados e a capacidade de processamento de dados aumentou muito nas últimas décadas (internet!).</p>

<p>Aplicar ciência dos dados em um arquivo com 2 toneladas de papel é bem menos viável do que aplicar em 2 peta bytes de dados em um servidor. O aumento da capacidade computacional e a quantidade de dados eletrônicos sendo produzidos proporcionou o cenário perfeito para o desenvolvimento de técnicas computacionais para explorar os dados, descobrir coisas, explicar e até prever situações.</p>

<blockquote><p>Data Science is an interdisciplinary field about processes and systems to extract knowledge or insights from data in various forms, either structured or unstructured, which is a continuation of some of the data analysis fields such as statistics, data mining, and predictive analytics, similar to Knowledge Discovery in Databases (KDD).</p><footer><strong>Wikipedia</strong> <cite><a href='https://en.wikipedia.org/wiki/Data_science'>Data Science</a></cite></footer></blockquote>


<h2>O Cientista de Dados</h2>

<p>Talvez o aspecto mais intrigante sobre a popularização da ciência dos dados tenha sido a expectativa criada em torno do Cientista de Dados (ou Analista de Dados, como preferirem), o profissional chave da tal ciência dos dados.</p>

<p>Muito se fala hoje de um Cientista de Dados ideal: um expert em estatística, com habilidades hackers, conhecedor de infraestrutura e banco de dados, poliglota em linguagens de programação e com capacidade de explicar com clareza todas as conclusões de uma análise bem sucedida.</p>

<p>Dominar essa quantidade de habilidades certamente não é fácil, e sequer é requisito mínimo para trabalhar na área, já que é mais fácil e eficiente montar uma equipe de 3 ou 4 pessoas que reúnam, juntas, todo esse conhecimento. Porém, um profissional que busca se aprimorar em todas essas habilidades sem dúvidas se tornará um Cientista de Dados melhor (e mais valioso $$$)!</p>

<p>Esse é o objetivo dos autores desse blog, aprofundar cada vez mais na busca desses conhecimentos e repassar tais conhecimentos para quem também deseja trilhar esse caminho !</p>

<p>Para o primeiro post não passar batido, aqui vão alguns links bastante úteis para quem deseja começar, praticar e se manter atualizado sobre ciência de dados:</p>

<ul>
<li><a href="https://www.datacamp.com/">Datacamp</a></li>
<li><a href="https://www.kaggle.com">Kaggle</a></li>
<li><a href="http://www.kdnuggets.com/">KDnuggets</a></li>
<li><a href="http://www.r-bloggers.com/">R-Bloggers</a></li>
<li><a href="http://pca.st/dataskeptic">Data Skpetic Podcast</a></li>
<li><a href="https://www.reddit.com/r/datascience/">/r/datascience (Reddit)</a></li>
<li><a href="https://www.coursera.org/specializations/jhu-data-science">Data Science Specialization</a></li>
</ul>


<p>O <strong>Full Join</strong> será mantido por dois entusiastas da ciência dos dados, Saulo Guerra e Paulo Felipe.</p>
]]></content>
  </entry>
  
</feed>
