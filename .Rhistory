install.packages('servr', repos = 'http://yihui.name/xran')
install.packages('servr')
x <- 2
(x + x*2 + x^2 + x^x)
x + x*2 + x^2 + x^x
x <- 2
x + x*2 + x^2 + x^x
install.packages('readr')
library(readr)
guess_encoding('~/Documentos/Dados Exemplos/desemprego_uf_ponto_virgula.txt')
install.packages("titanic")
data('titanic')
library(titanic)
data("Titanic")
Titanic
data("titanic_train")
head(titanic_train)
titanic_train
head(titanic_train)
summary(data)
summary(train)
summary(titanic_train
)
install.packages('Amelia')
library(Amelia)
missmap(titanic_train)
summary(titanic_train)
missmap(titanic_train, title = 'teste')
View(titanic_train)
unique(titani])
unique(titanic_train$Cabin)
titanic_train$Cabin[titanic_train$Cabin == ""] <- NA_character_
missmap(titanic_train)
?boxplot
boxplot(Fare ~ Survived, data = titanic_train)
head(titanic_train)
?letters
format(ISOdate(2000, 1:12, 1), "%B")
format(ISOdate(2000, 1:12, 1), "%b")
letters
length(letters)
data.ex <- data.frame(col1 = letters[1:4], col2 = c(10, 20, 30, NA))
data.ex
str(data.ex)
data.ex <- data.frame(col1 = letters[1:6], col2 = c(10, 20, 30, NA, 50, NA))
data.ex
is.na(data.ex)
is.na(data.ex$col2)
summary(data.ex)
which(is.na(data.ex$col2))
which(c(FALSE, TRUE))
!is.na(data.ex$col2)
complete.cases()
complete.cases
?complete.cases
complete.cases(data.ex)
data.ex[complete.cases(data.ex),]
data.ex[!complete.cases(data.ex),]
?na.omit()
na.omit(data.entry())
na.omit(data.ex)
!na.omit(data.ex)
na.pass(data.ex)
na.fail(data.ex)
na.exclude(data.ex)
data.ex
na.omit(data.ex)
media.col2 <- mean(data.ex$col2, na.rm = TRUE)
data.ex$col2[is.na(data.ex$col2)] <- media.col2
data.ex
media.col2 <- mean(data.ex$col2)
media
media.col2
media.col2 <- mean(data.ex$col2, na.rm = TRUE)
media.col2 <- mean(data.ex$col2, na.rm = FALSE)
media.col2
data.ex <- data.frame(col1 = letters[1:6], col2 = c(10, 20, 30, NA, 50, NA))
media.col2 <- mean(data.ex$col2, na.rm = FALSE)
media.col2
setwd("~/Documentos/paulofelipe.github.io/source")
servr::jekyll(dir = ".", input = c(".", "_source", "_posts"),
output = c(".", "_posts", "_posts"),
script = c("Makefile", "build.R"),
serve = FALSE,
command = "rake generate")
# Se não funcionar
# rbenv exec bundle install --path vendor/bundle
setwd("~/Documentos/paulofelipe.github.io/source")
servr::jekyll(dir = ".", input = c(".", "_source", "_posts"),
output = c(".", "_posts", "_posts"),
script = c("Makefile", "build.R"),
serve = FALSE,
command = "rake generate")
# Se não funcionar
# rbenv exec bundle install --path vendor/bundle
