<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: rstudio | Full Join]]></title>
  <link href="http://fulljoin.com.br/blog/categories/rstudio/atom.xml" rel="self"/>
  <link href="http://fulljoin.com.br/"/>
  <updated>2016-03-23T22:10:22-03:00</updated>
  <id>http://fulljoin.com.br/</id>
  <author>
    <name><![CDATA[Full Join]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Kit de sobrevivência em R - Parte 2]]></title>
    <link href="http://fulljoin.com.br/blog/2016/03/23/kit-de-sobrevivencia-em-r-parte-2/"/>
    <updated>2016-03-23T22:50:09-03:00</updated>
    <id>http://fulljoin.com.br/blog/2016/03/23/kit-de-sobrevivencia-em-r-parte-2</id>
    <content type="html"><![CDATA[<p>Seguindo a sequência do <em>Kit de sobrevivência em R</em>, vamos abordar um pouco sobre uma das partes iniciais de qualquer análise ou trabalho que vá ser feito no R: carregamento e leitura de dados.</p>

<!-- More -->


<p>Eis aqui uma notícia ruim: não existe um padrão dominante para armazenamento de dados. O que isso significa? Significa que, na vida real, você vai se deparar com os mais diferentes tipos de fontes de dados e mesmo assim vai ter que dar um jeito de analisá-las e estudá-las para concluir seus trabalhos.</p>

<p>Ou seja, existem diversas formas de carregar dados para trabalhar com eles no R. Em prol da objetividade, vamos tratar dos casos mais comuns e mais básicos primeiro. Esse assunto pode ser extremamente vasto, então, criaremos primeiro uma base para, em posts futuros, aprofundarmos em fontes de dados mais complexas.</p>

<h2>Estrutura dos dados</h2>

<p>Você vai encontrar dados disonbilizados basicamente em três formas básicas: estruturados, não estruturados e semi-estruturados.</p>

<p>Dados estruturados basicamente são conjuntos de informações organizadas em colunas (atribuos, variáveis, <em>features</em>, etc.) e linhas (registros, itens, observacões, etc.). São dados encontrados em bancos de dados, arquivos com algum tipo de separação entre as colunas, excel (nem todos!), arquivos com campos de tamanho fixo, etc. <em>foto de uma tabela??</em></p>

<p>Dados não estruturados, como o nome diz, não tem um estrutura previsível, ou seja, cada arquivo possui uma forma única de ser carregado e manejado. Geralmente são arquivos com forte teor textual. Podemos citar, por exemplo, emails, twitters, PDFs, imagens, etc. Muito usados em mineração de dados.</p>

<p>Já os arquivos semi-estruturados também possuem uma estrutura fixa, porém, não seguem o padrão de estrutura linha/coluna, ou seja, é uma estrutura mais complexa e flexível, geralmente hierárquica, estruturada em tags ou marcadores de campos. São exemplos de arquivos semi-estruturados: JSON, XML, HTML, YAML, etc. É o formato mais usado em troca de dados pela internet e consumo de APIs. <em>foto de um exemplo de JSON?</em>, <em>colocar links</em></p>

<p>Como dito anteriormente, trataremos primeiro dos arquivos estruturados. Em futuros posts vamos abordar os outros tipos, pois são abordagens um puco mais complexa e é sempre bom começar pelo básico!</p>

<h2>Preparando o ambiente</h2>

<h3>Limpando tudo</h3>

<p>(é correto falar de sessão? ou melhor &ldquo;ambiente&rdquo;?)
Antes de começar os trabalhos, é uma boa prática ter certeza de que não tem nada na sessão (entenda como memória RAM) impedindo o R de trabalhar. Um simples comando garante que está tudo limpo pronto para começar:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">rm</span><span class="p">(</span><span class="n">list</span><span class="o">=</span><span class="n">ls</span><span class="p">())</span></code></pre></div></p>

<pre><code class="r">rm(list=ls())
</code></pre>

<p>Lembra de onde os comandos em R devem ser digitados? Não? [Relembre aqui um pouco sobre RStudio]</p>

<p>Esse comando na verdade está usando outros dois comandos:</p>

<ul>
<li><p><code>rm()</code> é o comando para remover um objeto da sessão do R</p></li>
<li><p><code>ls()</code> é o comando para listar os nomes de todos objetos da sessão do R</p></li>
</ul>


<p>Os dois comandos conjugados significa dizer <em>remova tudo que estiver na lista de objetos da sessão do R.</em></p>

<p>Pronto. Seus ambiente está limpo.</p>

<h3>Definindo diretório de trabalho</h3>

<p>O R vai &ldquo;ler&rdquo; os dados de algum lugar do seu computador. Normalmente ele inicial em um diretório padrão, mas nem sempre os arquivos estarão nesse mesmo diretório. Para dizer ao R onde ele deve ler os arquivos, usaremos o comando <em>set working directory</em>:</p>

<p><div class="highlight"><pre><code class="language-r" data-lang="r"><span class="n">setwd</span><span class="p">(</span><span class="o">&amp;</span><span class="n">ldquo</span><span class="p">;</span><span class="n">Local</span><span class="o">/</span><span class="n">Do</span><span class="o">/</span><span class="n">Seus</span><span class="o">/</span><span class="n">Arquivos</span><span class="o">/</span><span class="n">De</span><span class="o">/</span><span class="n">Trabalho</span><span class="o">/&amp;</span><span class="n">rdquo</span><span class="p">;)</span></code></pre></div></p>

<p>Também pode ser realizado pelos menus do RStudio em <code>Session &gt; Set Working Directory &gt; Choose Directory...</code> e escolha a pasta onde seus arquivos de dado estarão.</p>

<p>Ok! Agora si</p>

<h2>falar do caminho via RStudio tmb</h2>

<p>aproveitar e explicar getwd()</p>

<h2>falar sobre delimitadores</h2>

<p>campos e colunas
linhas e registros</p>

<h3>delimitador TAB</h3>

<p>read.table()</p>

<h3>csv</h3>

<p>read.csv()
atalho de read.table()</p>

<h3>outros delimitadores</h3>

<p>read.delim()
atalho de read.table()</p>

<h3>excel</h3>

<p>XLConnect?
readxl?
xls?</p>

<h3>campos de tamanho fixo?</h3>

<p>read.fwf()
dados de comércio exterior</p>

<h3>loaders para outros sistemas estatísticos</h3>

<p>spss
dta</p>

<h3>carregar um .Rdata ?</h3>

<h3>carregar de banco de dado??</h3>

<h3>JSON?</h3>

<h3>XML?</h3>

<h3>Deixas para mais um post sobre carregamento</h3>

<p>list.files() e loop de leitura
webscraping
PDF
SQL</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Kit de sobrevivência em R - Parte 1]]></title>
    <link href="http://fulljoin.com.br/blog/2016/03/23/kit-de-sobrevivencia-em-r-parte-1/"/>
    <updated>2016-03-23T21:14:06-03:00</updated>
    <id>http://fulljoin.com.br/blog/2016/03/23/kit-de-sobrevivencia-em-r-parte-1</id>
    <content type="html"><![CDATA[<p>Nesta sequênciade de posts, iremos tratar o básico necessário para quem deseja iniciar o aprendizado em <a href="https://www.r-project.org/about.html">R</a>. Trata-se de uma linguagem de programação muito usada para cálculos estatísticos. Neste e nos próximos posts, discutiremos tópicos como instalação, importação de dados, tipos de dados, etc.</p>

<p>A nossa expectativa é que, com essa sequência, seja quebrada a barreira inicial para aqueles que prentendem entrar nesse mundo (cuidado que esse é um caminho sem volta!).</p>

<!-- More -->


<h2>Por que aprender uma linguagem estatística?</h2>

<p>Qualquer um que trablhe um pouco mais com dados já esbarrou nas limitações do &ldquo;excel&rdquo; ou de softwares de planilha. Nada contra, são ótimos, mas as vezes eles dificultam mais do que ajudam. Abrir a mente e se permitir novas formas de trabalho pode render bons frutos.</p>

<p>Trabalhos de manipulação de dados, verificação, limpeza e junção de dados, ou até alguns cálculos com uma massa de dados um pouco maior podem se tornar um pouco traumáticos se você não usar as ferramentas mais adequadas.</p>

<p>As linguagens de programação estatística ajudam muito nesse sentido. São ferramentas poderosíssimas que praticamente derrubam os limites das possibilidades de se trabalhar com dados: você pode fazer praticamente qualquer coisa!</p>

<p>&ldquo;Eu trabalho com dados de forma básica, mas não quero me tornar um ciêntista de dados&hellip; ainda assim é útil?&rdquo;. Com certeza! Linguagens de programação estatística, mesmo que aprendendo apenas o básico, aumentam muito a produtividade.</p>

<p>Portanto, sugerimos fortemente que aprenda uma linguagem estatística o quanto antes!</p>

<h2>Por que o R?</h2>

<p>Um motivo básico é que o R é <strong>livre</strong>. Em circustâncias de restrição orçamentária, isso pode ser um fator determimante. No entanto, a escolha do R ultrapassa a questão dos custos. Algumas pessoas têm o costume de pensar que soluções livres são geralmente inferiores às proprietárias.</p>

<p>Todavia, no caso de ciência de dados, os softwares livres parecem que vieram para ficar em posição dominante. De acordo com <a href="http://blog.dominodatalab.com/open-source-winning-against-proprietary-data-science-vendors/">essa pesquisa</a>, o mercado da ciência de dados está sendo dominado por softwares livres.</p>

<p>Podemos dizer, então, que grande &ldquo;concorrente&rdquo; do R no momento é o Python, outro software livre.</p>

<p>E qual seria o melhor? Depende. Como tudo na vida, cada um apresenta vantagens e desvantagens. O importante é tirar proveito das diferenças. Sua necessidade dirá qual é o software mais adequado.</p>

<p>Se a sua necessidade é de realização de estudos e análises que não serão diretamente ligada a outras plataformas, como uma aplicação web por exemplo, o R é o ideal para você. O Python costuma ser mais indicado em casos de análises que resultarão em algo mais sistemático. Este post <a href="http://www.kdnuggets.com/2015/05/r-vs-python-data-science.html">aqui</a> pode ser útil se você desejar saber mais sobre esse ponto.</p>

<h2>Sobre o RStudio</h2>

<p>O <a href="https://www.rstudio.com/">RStudio</a> é uma interface muito útil pra quem deseja usar o R. Com certeza, a maioria dos usuários de R utilizam o RStudio como <a href="https://pt.wikipedia.org/wiki/Ambiente_de_desenvolvimento_integrado">IDE (integrated development environment)</a>. Nele, você terá um editor de código, um console, um dispositivo para gráficos, um <a href="https://pt.wikipedia.org/wiki/Depura%C3%A7%C3%A3o"><em>debugger</em></a>, além de outras funcionalidades.</p>

<p>Na figura abaixo, está a &ldquo;cara&rdquo; do RStudio. Note que há 4 janelas (ambientes) separadas. As posições delas podem ser alteradas nas opções (<code>tools</code> -> <code>global options</code>). Além disso, você pode alterar o tema e outras tantas opções.</p>

<table class="image">
<caption align="bottom">Visão geral do RStudio</caption>
<tr><td><img src="http://fulljoin.com.br/images/RStudio_001.png" alt="Uma visão geral do RStudio"/></td></tr>
</table>


<p></p>


<p>Vamos tratar, ainda que superficialmente, de algumas funcionalidades do RStudio.</p>

<h4>1. Editor de Código</h4>

<p>No editor de código, você poderá escrever e editar os scripts. <a href="https://pt.wikipedia.org/wiki/Linguagem_de_script">Script</a> nada mais é do que um conjunto de comandos que serão executados em sequência. O editor do RStudio oferece facilidades como indentação, <em>code complete</em>, destaque da sintaxe, etc.</p>

<h4>2. Console</h4>

<p>No console aparecerão os resultados dos comandos. Você também pode escrever no console e obter os resultados, sem uso do editor de código. Também pode-se chamar a ajuda diretamente pelo console. Por exemplo: <code>?lm</code>. Voltaremos a falar desse comando <code>?</code> mais pra frente.</p>

<h4>3. <em>Workspace</em> e <em>History</em></h4>

<p>No <em>Workspace</em> ficarão guardados todos os objetos que forem criados na sessão. Entenda sessão como o espaço de tempo entre o momento em que você inicia o R e o momento que finaliza. Nesse período tudo que você faz usa memória RAM e o processador do computador. E na aba <em>History</em>, como você deve imaginar, o RStudio cria um histórico de comandos.</p>

<h4>4. <em>Files</em>, <em>Plots</em>, <em>Packages</em>, <em>Help</em> e <em>Viewer</em>.</h4>

<p>Nessa janela, estão várias funcionalidades do RStudio. Na aba <em>Files</em>, você terá uma navegação de arquivos do seu computador. Também será possível definir o diretório de trabalho (você também pode definir diretamente no código, mas isto será tratado posteriormente), ou seja, o R  entende o seu diretório de trabalho como ponto de partida para localizar arquivos que sejam chamados no script.</p>

<p>A aba <em>Plots</em> trará os gráficos gerados, possibilitando a exportação para alguns formatos diferentes, como png e pdf.</p>

<p>Em <em>Packages</em>, estão listados os pacotes que estão instalados e você pode verificar quais estão carregados e, caso necessário, poderá carregar algum pacote necessário para a sua análise. Também é possível instalar e atualizar pacotes. Novamente, tudo isso é possível fazer diretamente no código.</p>

<p><em>Help</em> o nome já diz tudo. Essa aba será bastante utilizada por você. Saber usar o <em>help</em> é fundamental para evitar desperdiço de tempo. Os usuários de R, em geral, são bastante solícitos. Entretanto, uma olhadinha rápida no help pode evitar que você gaste &ldquo;créditos&rdquo; desnecessariamente.</p>

<p>Por fim, o <em>Viewer</em>. Essa funcionalidade é utilizada para visualizar localmente conteúdo web. O gráfico da figura está na aba <em>Viewer</em> porque é uma visualização em <a href="https://pt.wikipedia.org/wiki/JavaScript">javascript</a>, que pode ser adicionada a documentos htmls gerados usando o <a href="http://rmarkdown.rstudio.com/">RMarkdown</a> ou em aplicações web com suporte do <a href="http://shiny.rstudio.com/">Shiny</a>.</p>

<p>Bem, isso foi uma breve explicação. Se você quiser saber mais, esta <a href="http://www.rstudio.com/wp-content/uploads/2016/01/rstudio-IDE-cheatsheet.pdf"><em>cheat sheet</em></a> criada pelo time do RStudio é muito útil.</p>

<h2>Instalando o R e o RStudio</h2>

<h3>Windows</h3>

<p>Para instalar o R no windows basta realizar o download do executável <a href="https://cran.r-project.org/bin/windows/base/">aqui</a> e proceder a instalação como qualquer outro software.</p>

<p>O Rstudio pode ser baixado <a href="https://www.rstudio.com/products/rstudio/download/">neste link</a>. Novamente, a instalação deve ser tranquila, sem a necessidade de maiores detalhes.</p>

<h3>Ubuntu</h3>

<p>No ubuntu, você pode instalar o R via terminal ou pela central de programas.</p>

<p>Pelo terminal, tecle <code>ctrl + alt + T</code> e faça o seguinte:</p>

<pre><code>sudo apt-get update
sudo apt-get install r-base
</code></pre>

<p>Na central de aplicativos, basta buscar por <code>r-base</code>.</p>

<p>O RStudio pode ser baixado no mesmo <a href="https://www.rstudio.com/products/rstudio/download/">link</a> citado quando foi explicada a instalação no windows.</p>

<h3>Mac OS X</h3>

<p>Para instalar o R no Mac basta realizar o download da última versão do pacote (pkg) <a href="https://cran.rstudio.com/bin/macosx/">aqui</a>, de um duplo click e proceda com a instalação como qualquer outro pacote no Mac.</p>

<p>O Rstudio pode ser baixado <a href="https://www.rstudio.com/products/rstudio/download/">neste link</a>. Procure na lista o instalador para Mac Os. Dessa vez será um arquivo DMG. De um duplo click e arraste o ícone do Rstudio para a pasta Aplicações. Pronto!</p>

<h3>Buscando Ajuda</h3>

<p>Esta parte é fundamental. Independente do seu nível de conhecimento, sempre haverá a necessidade de buscar ajuda. A nossa experiência diz que é muito difícil você ficar sem uma solução. No entanto, saber procurar é fundamental tanto para você encontrar uma solução desejável quanto para economizar tempo.</p>

<p>Entre, as fontes de ajuda estão o próprio <em>help</em> do R, o bom e velho google para uma busca mais ampla, o <a href="http://stackoverflow.com/tags/r">stack overflow</a> (ou <a href="http://pt.stackoverflow.com/questions/tagged/r">em português</a>), o <a href="https://www.reddit.com/r/rprogramming">reddit</a> e, é claro, o <strong>full join</strong>. Estaremos aqui para te ajudar.</p>

<p>Se você puder, faça suas pesquisas em inglês. Isto porque as possibilidades de você encontrar alguém que teve uma mesma dúvida crescem consideravalmente.</p>

<p>Se você for realizar uma pergunta em algum fórum ou site de perguntas e respostas, é importante atentar para alguns pontos que deverão ser informados:</p>

<ul>
<li>Versão do R;</li>
<li>Sistema Operacional;</li>
<li>Forneça um exemplo replicável;</li>
<li>Veja se a sua dúvida já não foi abordada em outro tópico.</li>
</ul>


<p>Bom, por enquanto é isso! Nos próximos posts, iremos abordar partes específicas e iniciar a utilização de fato do R. Até lá!</p>
]]></content>
  </entry>
  
</feed>
